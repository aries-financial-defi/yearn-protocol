{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfWant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_unlockTime",
          "type": "uint256"
        }
      ],
      "name": "createLock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "crv",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "increaseAmount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "release",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "setStrategy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "12": "contracts/strategies/CurveYCRVVoter.sol",
    "6": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "7": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/strategies/CurveYCRVVoter.sol",
    "exportedSymbols": {
      "CurveYCRVVoter": [
        3270
      ]
    },
    "id": 3271,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2772,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:12"
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 2773,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 16423,
        "src": "59:58:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 2774,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 16354,
        "src": "118:53:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 2775,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 16718,
        "src": "172:53:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 2776,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 16643,
        "src": "226:61:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Curve.sol",
        "file": "../../interfaces/curve/Curve.sol",
        "id": 2777,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 17243,
        "src": "289:42:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Gauge.sol",
        "file": "../../interfaces/curve/Gauge.sol",
        "id": 2778,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 17263,
        "src": "332:42:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Mintr.sol",
        "file": "../../interfaces/curve/Mintr.sol",
        "id": 2779,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 17271,
        "src": "375:42:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/VoteEscrow.sol",
        "file": "../../interfaces/curve/VoteEscrow.sol",
        "id": 2780,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 17289,
        "src": "418:47:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/uniswap/Uni.sol",
        "file": "../../interfaces/uniswap/Uni.sol",
        "id": 2781,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 17306,
        "src": "466:42:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/Token.sol",
        "file": "../../interfaces/yearn/Token.sol",
        "id": 2782,
        "nodeType": "ImportDirective",
        "scope": 3271,
        "sourceUnit": 17324,
        "src": "509:42:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3270,
        "linearizedBaseContracts": [
          3270
        ],
        "name": "CurveYCRVVoter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2785,
            "libraryName": {
              "contractScope": null,
              "id": 2783,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16642,
              "src": "589:9:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$16642",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "583:27:12",
            "typeName": {
              "contractScope": null,
              "id": 2784,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16422,
              "src": "603:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$16422",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 2788,
            "libraryName": {
              "contractScope": null,
              "id": 2786,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16717,
              "src": "621:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$16717",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "615:26:12",
            "typeName": {
              "id": 2787,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "633:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 2791,
            "libraryName": {
              "contractScope": null,
              "id": 2789,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16353,
              "src": "652:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$16353",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "646:27:12",
            "typeName": {
              "id": 2790,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "665:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 2796,
            "name": "want",
            "nodeType": "VariableDeclaration",
            "scope": 3270,
            "src": "679:82:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2792,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864463565306538314466663646414633413765353242413639373832306335653332443830364138",
                  "id": 2794,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "718:42:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 2793,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "710:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 2795,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "710:51:12",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2801,
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "scope": 3270,
            "src": "767:82:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2797,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "767:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846413731324545343738384330343265324237424235354536636238656335363943343533306331",
                  "id": 2799,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "806:42:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xFA712EE4788C042e2B7BB55E6cb8ec569C4530c1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 2798,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "798:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 2800,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "798:51:12",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2806,
            "name": "mintr",
            "nodeType": "VariableDeclaration",
            "scope": 3270,
            "src": "855:83:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2802,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "855:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864303631443631613464393431633339453534353334333542363334354463323631433266634530",
                  "id": 2804,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "895:42:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xd061D61a4d941c39E5453435B6345Dc261C2fcE0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 2803,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "887:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 2805,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "887:51:12",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2811,
            "name": "crv",
            "nodeType": "VariableDeclaration",
            "scope": 3270,
            "src": "944:81:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2807,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "944:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 2809,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "982:42:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 2808,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "974:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 2810,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "974:51:12",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2816,
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "scope": 3270,
            "src": "1032:84:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2812,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1032:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307835663362354466456237423238434462443746416261373839363345453230326134393465324132",
                  "id": 2814,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1073:42:12",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x5f3b5DfEb7B28CDbD7FAba78963EE202a494e2A2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 2813,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1065:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 2815,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1065:51:12",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2818,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 3270,
            "src": "1123:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2817,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1123:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2820,
            "name": "strategy",
            "nodeType": "VariableDeclaration",
            "scope": 3270,
            "src": "1154:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2819,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1154:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2828,
              "nodeType": "Block",
              "src": "1205:40:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2823,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2818,
                      "src": "1215:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2824,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18752,
                        "src": "1228:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1228:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1215:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2827,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:23:12"
                }
              ]
            },
            "documentation": null,
            "id": 2829,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:2:12"
            },
            "returnParameters": {
              "id": 2822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:12"
            },
            "scope": 3270,
            "src": "1184:61:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2836,
              "nodeType": "Block",
              "src": "1308:40:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "437572766559435256566f746572",
                    "id": 2834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1325:16:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_61f5d98dd1f90a5baced9e08ad26fe9c3963335c336b3711646e24e85c173d4d",
                      "typeString": "literal_string \"CurveYCRVVoter\""
                    },
                    "value": "CurveYCRVVoter"
                  },
                  "functionReturnParameters": 2833,
                  "id": 2835,
                  "nodeType": "Return",
                  "src": "1318:23:12"
                }
              ]
            },
            "documentation": null,
            "id": 2837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:2:12"
            },
            "returnParameters": {
              "id": 2833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2832,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2837,
                  "src": "1293:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2831,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:15:12"
            },
            "scope": 3270,
            "src": "1251:97:12",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2854,
              "nodeType": "Block",
              "src": "1403:95:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2843,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "1421:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1421:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2845,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2818,
                          "src": "1435:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1421:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 2847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 2842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "1413:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:48:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2849,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:48:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2850,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2820,
                      "src": "1471:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2851,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2839,
                      "src": "1482:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1471:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:20:12"
                }
              ]
            },
            "documentation": null,
            "id": 2855,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2839,
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "1375:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1374:19:12"
            },
            "returnParameters": {
              "id": 2841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1403:0:12"
            },
            "scope": 3270,
            "src": "1354:144:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2897,
              "nodeType": "Block",
              "src": "1530:243:12",
              "statements": [
                {
                  "assignments": [
                    2859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2859,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 2897,
                      "src": "1540:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2858,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1540:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2868,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2865,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18838,
                            "src": "1587:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                              "typeString": "contract CurveYCRVVoter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                              "typeString": "contract CurveYCRVVoter"
                            }
                          ],
                          "id": 2864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1579:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1579:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2861,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "1563:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2860,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "1556:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1556:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16367,
                      "src": "1556:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1540:53:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2869,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2859,
                      "src": "1607:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1615:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1607:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2896,
                  "nodeType": "IfStatement",
                  "src": "1603:164:12",
                  "trueBody": {
                    "id": 2895,
                    "nodeType": "Block",
                    "src": "1618:149:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2876,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2801,
                              "src": "1657:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1663:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2873,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2796,
                                  "src": "1639:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2872,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16422,
                                "src": "1632:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1632:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16422",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16521,
                            "src": "1632:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1632:33:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2879,
                        "nodeType": "ExpressionStatement",
                        "src": "1632:33:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2884,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2801,
                              "src": "1704:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2885,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2859,
                              "src": "1710:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2881,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2796,
                                  "src": "1686:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2880,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16422,
                                "src": "1679:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1679:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16422",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16521,
                            "src": "1679:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1679:37:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2887,
                        "nodeType": "ExpressionStatement",
                        "src": "1679:37:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2892,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2859,
                              "src": "1750:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2889,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2801,
                                  "src": "1736:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2888,
                                "name": "Gauge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17262,
                                "src": "1730:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Gauge_$17262_$",
                                  "typeString": "type(contract Gauge)"
                                }
                              },
                              "id": 2890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1730:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Gauge_$17262",
                                "typeString": "contract Gauge"
                              }
                            },
                            "id": 2891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17249,
                            "src": "1730:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2894,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:26:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1520:2:12"
            },
            "returnParameters": {
              "id": 2857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1530:0:12"
            },
            "scope": 3270,
            "src": "1504:269:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2929,
              "nodeType": "Block",
              "src": "1921:162:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2906,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "1939:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1939:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2908,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2820,
                          "src": "1953:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1939:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 2910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1963:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 2905,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "1931:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2912,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:46:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2913,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2903,
                      "src": "1987:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2917,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18838,
                              "src": "2022:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                                "typeString": "contract CurveYCRVVoter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                                "typeString": "contract CurveYCRVVoter"
                              }
                            ],
                            "id": 2916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2014:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2014:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2914,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2900,
                          "src": "1997:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$16422",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16367,
                        "src": "1997:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1997:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1987:41:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2921,
                  "nodeType": "ExpressionStatement",
                  "src": "1987:41:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2925,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2820,
                        "src": "2058:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2926,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2903,
                        "src": "2068:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2922,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2900,
                        "src": "2038:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16455,
                      "src": "2038:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2928,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:38:12"
                }
              ]
            },
            "documentation": null,
            "id": 2930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2900,
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 2930,
                  "src": "1871:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$16422",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2899,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16422,
                    "src": "1871:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$16422",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1870:15:12"
            },
            "returnParameters": {
              "id": 2904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2903,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2930,
                  "src": "1904:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1903:17:12"
            },
            "scope": 3270,
            "src": "1853:230:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2983,
              "nodeType": "Block",
              "src": "2202:332:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2936,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "2220:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2220:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2938,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2820,
                          "src": "2234:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2220:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 2940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2244:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 2935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "2212:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2212:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2942,
                  "nodeType": "ExpressionStatement",
                  "src": "2212:46:12"
                },
                {
                  "assignments": [
                    2944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2944,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2983,
                      "src": "2268:16:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2268:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2953,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2950,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18838,
                            "src": "2318:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                              "typeString": "contract CurveYCRVVoter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                              "typeString": "contract CurveYCRVVoter"
                            }
                          ],
                          "id": 2949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2310:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2310:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2946,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "2294:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2945,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "2287:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2287:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16367,
                      "src": "2287:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2268:56:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2954,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2944,
                      "src": "2338:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2955,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2932,
                      "src": "2349:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2338:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2974,
                  "nodeType": "IfStatement",
                  "src": "2334:140:12",
                  "trueBody": {
                    "id": 2973,
                    "nodeType": "Block",
                    "src": "2358:116:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2957,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2932,
                            "src": "2372:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2961,
                                    "name": "_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2944,
                                    "src": "2408:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2959,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2932,
                                    "src": "2396:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16209,
                                  "src": "2396:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2396:21:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2958,
                              "name": "_withdrawSome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3165,
                              "src": "2382:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) returns (uint256)"
                              }
                            },
                            "id": 2963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2382:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2372:46:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2965,
                        "nodeType": "ExpressionStatement",
                        "src": "2372:46:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2966,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2932,
                            "src": "2432:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2969,
                                "name": "_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2944,
                                "src": "2454:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2967,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2932,
                                "src": "2442:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16193,
                              "src": "2442:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2442:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2432:31:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2972,
                        "nodeType": "ExpressionStatement",
                        "src": "2432:31:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2979,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2820,
                        "src": "2509:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2980,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2932,
                        "src": "2519:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2976,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "2490:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2975,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "2483:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2483:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16455,
                      "src": "2483:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2982,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:44:12"
                }
              ]
            },
            "documentation": null,
            "id": 2984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2932,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2984,
                  "src": "2176:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2175:17:12"
            },
            "returnParameters": {
              "id": 2934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2202:0:12"
            },
            "scope": 3270,
            "src": "2158:376:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3019,
              "nodeType": "Block",
              "src": "2665:199:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2990,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "2683:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2683:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2992,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2820,
                          "src": "2697:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2683:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 2994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2707:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 2989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "2675:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2996,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:46:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2997,
                      "name": "_withdrawAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "2731:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2999,
                  "nodeType": "ExpressionStatement",
                  "src": "2731:14:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3000,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2987,
                      "src": "2756:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3006,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18838,
                              "src": "2797:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                                "typeString": "contract CurveYCRVVoter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                                "typeString": "contract CurveYCRVVoter"
                              }
                            ],
                            "id": 3005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2789:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2789:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3002,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2796,
                              "src": "2773:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3001,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16422,
                            "src": "2766:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 3003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2766:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$16422",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16367,
                        "src": "2766:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 3008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2766:37:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2756:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3010,
                  "nodeType": "ExpressionStatement",
                  "src": "2756:47:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3015,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2820,
                        "src": "2839:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3016,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2987,
                        "src": "2849:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3012,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "2820:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3011,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "2813:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2813:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16455,
                      "src": "2813:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2813:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3018,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:44:12"
                }
              ]
            },
            "documentation": null,
            "id": 3020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2627:2:12"
            },
            "returnParameters": {
              "id": 2988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2987,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3020,
                  "src": "2648:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2647:17:12"
            },
            "scope": 3270,
            "src": "2607:257:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3037,
              "nodeType": "Block",
              "src": "2903:75:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3032,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18838,
                                "src": "2964:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                                  "typeString": "contract CurveYCRVVoter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                                  "typeString": "contract CurveYCRVVoter"
                                }
                              ],
                              "id": 3031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2956:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 3033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2956:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3028,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2801,
                                "src": "2940:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3027,
                              "name": "Gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17262,
                              "src": "2934:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Gauge_$17262_$",
                                "typeString": "type(contract Gauge)"
                              }
                            },
                            "id": 3029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2934:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Gauge_$17262",
                              "typeString": "contract Gauge"
                            }
                          },
                          "id": 3030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17256,
                          "src": "2934:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2934:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3024,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2801,
                            "src": "2919:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3023,
                          "name": "Gauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17262,
                          "src": "2913:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Gauge_$17262_$",
                            "typeString": "type(contract Gauge)"
                          }
                        },
                        "id": 3025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2913:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Gauge_$17262",
                          "typeString": "contract Gauge"
                        }
                      },
                      "id": 3026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17261,
                      "src": "2913:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:58:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:58:12"
                }
              ]
            },
            "documentation": null,
            "id": 3038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2891:2:12"
            },
            "returnParameters": {
              "id": 3022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2903:0:12"
            },
            "scope": 3270,
            "src": "2870:108:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3082,
              "nodeType": "Block",
              "src": "3050:245:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3046,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "3068:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3068:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3048,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2820,
                            "src": "3082:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3068:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3050,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "3094:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3094:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3052,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2818,
                            "src": "3108:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3094:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3068:50:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 3055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3120:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 3045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "3060:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3060:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3057,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3062,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "3168:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3176:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3059,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2811,
                            "src": "3151:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3058,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "3144:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3144:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16521,
                      "src": "3144:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3144:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3065,
                  "nodeType": "ExpressionStatement",
                  "src": "3144:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3070,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "3212:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3071,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3040,
                        "src": "3220:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3067,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2811,
                            "src": "3195:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3066,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "3188:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3188:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16521,
                      "src": "3188:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3188:39:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3073,
                  "nodeType": "ExpressionStatement",
                  "src": "3188:39:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3078,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3040,
                        "src": "3268:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3079,
                        "name": "_unlockTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3042,
                        "src": "3276:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3075,
                            "name": "escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2816,
                            "src": "3248:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3074,
                          "name": "VoteEscrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17288,
                          "src": "3237:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VoteEscrow_$17288_$",
                            "typeString": "type(contract VoteEscrow)"
                          }
                        },
                        "id": 3076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3237:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VoteEscrow_$17288",
                          "typeString": "contract VoteEscrow"
                        }
                      },
                      "id": 3077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create_lock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17279,
                      "src": "3237:30:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 3080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:51:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3081,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:51:12"
                }
              ]
            },
            "documentation": null,
            "id": 3083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3040,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "3004:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3004:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3042,
                  "name": "_unlockTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3083,
                  "src": "3020:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3020:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3003:37:12"
            },
            "returnParameters": {
              "id": 3044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3050:0:12"
            },
            "scope": 3270,
            "src": "2984:311:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3124,
              "nodeType": "Block",
              "src": "3350:236:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3089,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "3368:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3368:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3091,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2820,
                            "src": "3382:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3368:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3093,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "3394:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3394:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3095,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2818,
                            "src": "3408:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3394:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3368:50:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3420:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 3088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "3360:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3100,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3105,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "3468:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3476:1:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3102,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2811,
                            "src": "3451:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3101,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "3444:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3444:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16521,
                      "src": "3444:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3444:34:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3108,
                  "nodeType": "ExpressionStatement",
                  "src": "3444:34:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3113,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "3512:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3114,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3085,
                        "src": "3520:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3110,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2811,
                            "src": "3495:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3109,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "3488:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3488:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16521,
                      "src": "3488:23:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3488:39:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3116,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:39:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3121,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3085,
                        "src": "3572:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3118,
                            "name": "escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2816,
                            "src": "3548:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3117,
                          "name": "VoteEscrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17288,
                          "src": "3537:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VoteEscrow_$17288_$",
                            "typeString": "type(contract VoteEscrow)"
                          }
                        },
                        "id": 3119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3537:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VoteEscrow_$17288",
                          "typeString": "contract VoteEscrow"
                        }
                      },
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increase_amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17284,
                      "src": "3537:34:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3537:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3123,
                  "nodeType": "ExpressionStatement",
                  "src": "3537:42:12"
                }
              ]
            },
            "documentation": null,
            "id": 3125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3085,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3125,
                  "src": "3325:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3325:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3324:16:12"
            },
            "returnParameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3350:0:12"
            },
            "scope": 3270,
            "src": "3301:285:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3147,
              "nodeType": "Block",
              "src": "3620:130:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3129,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "3638:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3638:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3131,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2820,
                            "src": "3652:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3638:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3133,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "3664:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3664:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3135,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2818,
                            "src": "3678:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3664:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3638:50:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 3138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3690:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 3128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "3630:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3630:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3140,
                  "nodeType": "ExpressionStatement",
                  "src": "3630:74:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3142,
                            "name": "escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2816,
                            "src": "3725:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3141,
                          "name": "VoteEscrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17288,
                          "src": "3714:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VoteEscrow_$17288_$",
                            "typeString": "type(contract VoteEscrow)"
                          }
                        },
                        "id": 3143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3714:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VoteEscrow_$17288",
                          "typeString": "contract VoteEscrow"
                        }
                      },
                      "id": 3144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17287,
                      "src": "3714:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3714:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3146,
                  "nodeType": "ExpressionStatement",
                  "src": "3714:29:12"
                }
              ]
            },
            "documentation": null,
            "id": 3148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:2:12"
            },
            "returnParameters": {
              "id": 3127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3620:0:12"
            },
            "scope": 3270,
            "src": "3592:158:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "3823:70:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3159,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3150,
                        "src": "3854:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3156,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2801,
                            "src": "3839:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3155,
                          "name": "Gauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17262,
                          "src": "3833:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Gauge_$17262_$",
                            "typeString": "type(contract Gauge)"
                          }
                        },
                        "id": 3157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3833:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Gauge_$17262",
                          "typeString": "contract Gauge"
                        }
                      },
                      "id": 3158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17261,
                      "src": "3833:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3833:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3161,
                  "nodeType": "ExpressionStatement",
                  "src": "3833:29:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3162,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3150,
                    "src": "3879:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3154,
                  "id": 3163,
                  "nodeType": "Return",
                  "src": "3872:14:12"
                }
              ]
            },
            "documentation": null,
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawSome",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3150,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "3779:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3779:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3778:17:12"
            },
            "returnParameters": {
              "id": 3154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3153,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "3814:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3814:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3813:9:12"
            },
            "scope": 3270,
            "src": "3756:137:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3179,
              "nodeType": "Block",
              "src": "3954:61:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3175,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18838,
                            "src": "4002:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                              "typeString": "contract CurveYCRVVoter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                              "typeString": "contract CurveYCRVVoter"
                            }
                          ],
                          "id": 3174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3994:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3994:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3171,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "3978:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3170,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "3971:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3971:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16367,
                      "src": "3971:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3971:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3169,
                  "id": 3178,
                  "nodeType": "Return",
                  "src": "3964:44:12"
                }
              ]
            },
            "documentation": null,
            "id": 3180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfWant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3921:2:12"
            },
            "returnParameters": {
              "id": 3169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3168,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3180,
                  "src": "3945:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3944:9:12"
            },
            "scope": 3270,
            "src": "3899:116:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3194,
              "nodeType": "Block",
              "src": "4076:60:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3190,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18838,
                            "src": "4123:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                              "typeString": "contract CurveYCRVVoter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurveYCRVVoter_$3270",
                              "typeString": "contract CurveYCRVVoter"
                            }
                          ],
                          "id": 3189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4115:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4115:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3186,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2801,
                            "src": "4099:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3185,
                          "name": "Gauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17262,
                          "src": "4093:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Gauge_$17262_$",
                            "typeString": "type(contract Gauge)"
                          }
                        },
                        "id": 3187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4093:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Gauge_$17262",
                          "typeString": "contract Gauge"
                        }
                      },
                      "id": 3188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17256,
                      "src": "4093:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4093:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3184,
                  "id": 3193,
                  "nodeType": "Return",
                  "src": "4086:43:12"
                }
              ]
            },
            "documentation": null,
            "id": 3195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4043:2:12"
            },
            "returnParameters": {
              "id": 3184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3183,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3195,
                  "src": "4067:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4067:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4066:9:12"
            },
            "scope": 3270,
            "src": "4021:115:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3207,
              "nodeType": "Block",
              "src": "4193:60:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3203,
                          "name": "balanceOfPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3195,
                          "src": "4230:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 3204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4230:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3200,
                          "name": "balanceOfWant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3180,
                          "src": "4210:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4210:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16193,
                      "src": "4210:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3199,
                  "id": 3206,
                  "nodeType": "Return",
                  "src": "4203:43:12"
                }
              ]
            },
            "documentation": null,
            "id": 3208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4160:2:12"
            },
            "returnParameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3198,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "4184:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4184:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4183:9:12"
            },
            "scope": 3270,
            "src": "4142:111:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3225,
              "nodeType": "Block",
              "src": "4312:99:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3214,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "4330:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4330:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3216,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2818,
                          "src": "4344:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4330:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 3218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4356:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 3213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "4322:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:48:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3220,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:48:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3221,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2818,
                      "src": "4380:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3222,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3210,
                      "src": "4393:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4380:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3224,
                  "nodeType": "ExpressionStatement",
                  "src": "4380:24:12"
                }
              ]
            },
            "documentation": null,
            "id": 3226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3210,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3226,
                  "src": "4282:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4281:21:12"
            },
            "returnParameters": {
              "id": 3212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4312:0:12"
            },
            "scope": 3270,
            "src": "4259:152:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3268,
              "nodeType": "Block",
              "src": "4550:200:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3240,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "4568:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4568:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3242,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2820,
                            "src": "4582:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4568:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3244,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "4594:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4594:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3246,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2818,
                            "src": "4608:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4594:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4568:50:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 3249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4620:13:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 3239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "4560:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4560:74:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3251,
                  "nodeType": "ExpressionStatement",
                  "src": "4560:74:12"
                },
                {
                  "assignments": [
                    3253,
                    3255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3253,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 3268,
                      "src": "4645:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3252,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4645:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3255,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 3268,
                      "src": "4659:19:12",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3254,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4659:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3263,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3261,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "4703:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3259,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3230,
                          "src": "4696:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3256,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3228,
                            "src": "4682:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4682:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 3258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4682:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                        }
                      },
                      "id": 3260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4682:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4682:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4644:64:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 3264,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3253,
                        "src": "4727:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3265,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3255,
                        "src": "4736:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 3266,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4726:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 3238,
                  "id": 3267,
                  "nodeType": "Return",
                  "src": "4719:24:12"
                }
              ]
            },
            "documentation": null,
            "id": 3269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3228,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3269,
                  "src": "4443:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3230,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3269,
                  "src": "4463:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3232,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 3269,
                  "src": "4486:19:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4433:78:12"
            },
            "returnParameters": {
              "id": 3238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3235,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3269,
                  "src": "4530:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3234,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4530:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3237,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3269,
                  "src": "4536:12:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3236,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4536:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4529:20:12"
            },
            "scope": 3270,
            "src": "4417:333:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3271,
        "src": "553:4199:12"
      }
    ],
    "src": "33:4720:12"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556115f7806100326000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063722713f7116100b8578063b52c05fe1161007c578063b52c05fe146102dd578063b61d27f614610300578063c1a3d44c14610408578063d0e30db014610410578063d1e61dcb14610418578063e2fdcc171461042057610137565b8063722713f714610297578063853828b61461029f57806386d1a69f146102a7578063a8c62e76146102af578063ab033ea9146102b757610137565b80632e1a7d4d116100ff5780632e1a7d4d1461021e57806333a100ca1461023b57806351cff8d9146102615780635aa6e675146102875780636a4874a11461028f57610137565b8063115880861461013c57806315456eba1461015657806316f0115b1461017557806317d7de7c146101995780631f1fcd5114610216575b600080fd5b610144610428565b60408051918252519081900360200190f35b6101736004803603602081101561016c57600080fd5b50356104af565b005b61017d6105f9565b604080516001600160a01b039092168252519081900360200190f35b6101a1610611565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101db5781810151838201526020016101c3565b50505050905090810190601f1680156102085780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d610639565b6101736004803603602081101561023457600080fd5b5035610651565b6101736004803603602081101561025157600080fd5b50356001600160a01b031661078c565b6101446004803603602081101561027757600080fd5b50356001600160a01b03166107fb565b61017d6108e5565b61017d6108f4565b61014461090c565b610144610932565b610173610a3c565b61017d610b07565b610173600480360360208110156102cd57600080fd5b50356001600160a01b0316610b16565b610173600480360360408110156102f357600080fd5b5080359060200135610b85565b6103856004803603606081101561031657600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561034657600080fd5b82018360208201111561035857600080fd5b8035906020019184600183028401116401000000008311171561037a57600080fd5b509092509050610cd0565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103cc5781810151838201526020016103b4565b50505050905090810190601f1680156103f95780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610144610daf565b610173610e04565b61017d610f5d565b61017d610f75565b604080516370a0823160e01b8152306004820152905160009173fa712ee4788c042e2b7bb55e6cb8ec569c4530c1916370a0823191602480820192602092909190829003018186803b15801561047d57600080fd5b505afa158015610491573d6000803e3d6000fd5b505050506040513d60208110156104a757600080fd5b505190505b90565b6001546001600160a01b03163314806104d257506000546001600160a01b031633145b610511576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b61054b73d533a949740bb3306d119cc777fa900ba034cd52735f3b5dfeb7b28cdbd7faba78963ee202a494e2a2600063ffffffff610f8d16565b61058473d533a949740bb3306d119cc777fa900ba034cd52735f3b5dfeb7b28cdbd7faba78963ee202a494e2a28363ffffffff610f8d16565b735f3b5dfeb7b28cdbd7faba78963ee202a494e2a26001600160a01b0316634957677c826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156105de57600080fd5b505af11580156105f2573d6000803e3d6000fd5b5050505050565b73fa712ee4788c042e2b7bb55e6cb8ec569c4530c181565b60408051808201909152600e81526d21bab93b32aca1a92b2b37ba32b960911b602082015290565b73df5e0e81dff6faf3a7e52ba697820c5e32d806a881565b6001546001600160a01b0316331461069e576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905160009173df5e0e81dff6faf3a7e52ba697820c5e32d806a8916370a0823191602480820192602092909190829003018186803b1580156106f357600080fd5b505afa158015610707573d6000803e3d6000fd5b505050506040513d602081101561071d57600080fd5b50519050818110156107565761074161073c838363ffffffff6110a516565b6110ee565b9150610753828263ffffffff61116816565b91505b6001546107889073df5e0e81dff6faf3a7e52ba697820c5e32d806a8906001600160a01b03168463ffffffff6111c216565b5050565b6000546001600160a01b031633146107d9576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546000906001600160a01b0316331461084b576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561089157600080fd5b505afa1580156108a5573d6000803e3d6000fd5b505050506040513d60208110156108bb57600080fd5b50516001549091506108e0906001600160a01b0384811691168363ffffffff6111c216565b919050565b6000546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b600061092d610919610428565b610921610daf565b9063ffffffff61116816565b905090565b6001546000906001600160a01b03163314610982576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b61098a611214565b604080516370a0823160e01b8152306004820152905173df5e0e81dff6faf3a7e52ba697820c5e32d806a8916370a08231916024808301926020929190829003018186803b1580156109db57600080fd5b505afa1580156109ef573d6000803e3d6000fd5b505050506040513d6020811015610a0557600080fd5b50516001549091506104ac9073df5e0e81dff6faf3a7e52ba697820c5e32d806a8906001600160a01b03168363ffffffff6111c216565b6001546001600160a01b0316331480610a5f57506000546001600160a01b031633145b610a9e576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b735f3b5dfeb7b28cdbd7faba78963ee202a494e2a26001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610aed57600080fd5b505af1158015610b01573d6000803e3d6000fd5b50505050565b6001546001600160a01b031681565b6000546001600160a01b03163314610b63576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331480610ba857506000546001600160a01b031633145b610be7576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b610c2173d533a949740bb3306d119cc777fa900ba034cd52735f3b5dfeb7b28cdbd7faba78963ee202a494e2a2600063ffffffff610f8d16565b610c5a73d533a949740bb3306d119cc777fa900ba034cd52735f3b5dfeb7b28cdbd7faba78963ee202a494e2a28463ffffffff610f8d16565b604080516365fc387360e01b815260048101849052602481018390529051735f3b5dfeb7b28cdbd7faba78963ee202a494e2a2916365fc387391604480830192600092919082900301818387803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050505050565b6001546000906060906001600160a01b0316331480610cf957506000546001600160a01b031633145b610d38576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b60006060876001600160a01b0316878787604051808383808284376040519201945060009350909150508083038185875af1925050503d8060008114610d9a576040519150601f19603f3d011682016040523d82523d6000602084013e610d9f565b606091505b5090999098509650505050505050565b604080516370a0823160e01b8152306004820152905160009173df5e0e81dff6faf3a7e52ba697820c5e32d806a8916370a0823191602480820192602092909190829003018186803b15801561047d57600080fd5b604080516370a0823160e01b8152306004820152905160009173df5e0e81dff6faf3a7e52ba697820c5e32d806a8916370a0823191602480820192602092909190829003018186803b158015610e5957600080fd5b505afa158015610e6d573d6000803e3d6000fd5b505050506040513d6020811015610e8357600080fd5b505190508015610f5a57610ec773df5e0e81dff6faf3a7e52ba697820c5e32d806a873fa712ee4788c042e2b7bb55e6cb8ec569c4530c1600063ffffffff610f8d16565b610f0073df5e0e81dff6faf3a7e52ba697820c5e32d806a873fa712ee4788c042e2b7bb55e6cb8ec569c4530c18363ffffffff610f8d16565b73fa712ee4788c042e2b7bb55e6cb8ec569c4530c16001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156105de57600080fd5b50565b73d061d61a4d941c39e5453435b6345dc261c2fce081565b735f3b5dfeb7b28cdbd7faba78963ee202a494e2a281565b801580611013575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015610fe557600080fd5b505afa158015610ff9573d6000803e3d6000fd5b505050506040513d602081101561100f57600080fd5b5051155b61104e5760405162461bcd60e51b815260040180806020018281038252603681526020018061158d6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526110a09084906112d7565b505050565b60006110e783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061148f565b9392505050565b600073fa712ee4788c042e2b7bb55e6cb8ec569c4530c16001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b5093949350505050565b6000828201838110156110e7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526110a09084906112d7565b604080516370a0823160e01b8152306004820152905173fa712ee4788c042e2b7bb55e6cb8ec569c4530c191632e1a7d4d9183916370a08231916024808301926020929190829003018186803b15801561126d57600080fd5b505afa158015611281573d6000803e3d6000fd5b505050506040513d602081101561129757600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b158015610aed57600080fd5b6112e9826001600160a01b0316611526565b61133a576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106113785780518252601f199092019160209182019101611359565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146113da576040519150601f19603f3d011682016040523d82523d6000602084013e6113df565b606091505b509150915081611436576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610b015780806020019051602081101561145257600080fd5b5051610b015760405162461bcd60e51b815260040180806020018281038252602a815260200180611563602a913960400191505060405180910390fd5b6000818484111561151e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114e35781810151838201526020016114cb565b50505050905090810190601f1680156115105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061155a57508115155b94935050505056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a72315820734b0eee044954bac3c169b1e430f28e52702004b181ff25dc27ae4b78953f7b64736f6c63430005110032",
  "bytecodeSha1": "5e8421f9f0bbba1c9137c842c73ad41cd5f9fd6e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "CurveYCRVVoter",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "65": [
            946,
            952,
            true
          ]
        },
        "SafeMath.sub": {
          "66": [
            1845,
            1851,
            true
          ]
        }
      },
      "12": {
        "CurveYCRVVoter.createLock": {
          "56": [
            3068,
            3090,
            true
          ],
          "57": [
            3094,
            3118,
            true
          ]
        },
        "CurveYCRVVoter.deposit": {
          "60": [
            1607,
            1616,
            false
          ]
        },
        "CurveYCRVVoter.execute": {
          "58": [
            4568,
            4590,
            true
          ],
          "59": [
            4594,
            4618,
            true
          ]
        },
        "CurveYCRVVoter.increaseAmount": {
          "46": [
            3368,
            3390,
            true
          ],
          "47": [
            3394,
            3418,
            true
          ]
        },
        "CurveYCRVVoter.release": {
          "53": [
            3638,
            3660,
            true
          ],
          "54": [
            3664,
            3688,
            true
          ]
        },
        "CurveYCRVVoter.setGovernance": {
          "55": [
            4330,
            4354,
            true
          ]
        },
        "CurveYCRVVoter.setStrategy": {
          "50": [
            1421,
            1445,
            true
          ]
        },
        "CurveYCRVVoter.withdraw": {
          "48": [
            2220,
            2242,
            true
          ],
          "49": [
            2338,
            2356,
            false
          ],
          "51": [
            1939,
            1961,
            true
          ]
        },
        "CurveYCRVVoter.withdrawAll": {
          "52": [
            2683,
            2705,
            true
          ]
        }
      },
      "6": {
        "SafeERC20.callOptionalReturn": {
          "61": [
            3261,
            3288,
            true
          ],
          "62": [
            3479,
            3486,
            true
          ],
          "63": [
            3538,
            3559,
            false
          ],
          "64": [
            3667,
            3697,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "38": [
            938,
            984
          ]
        },
        "SafeMath.sub": {
          "35": [
            1351,
            1401
          ],
          "44": [
            1837,
            1866
          ]
        }
      },
      "12": {
        "CurveYCRVVoter._withdrawAll": {
          "40": [
            2913,
            2971
          ]
        },
        "CurveYCRVVoter._withdrawSome": {
          "36": [
            3833,
            3862
          ],
          "37": [
            3872,
            3886
          ]
        },
        "CurveYCRVVoter.balanceOf": {
          "15": [
            4203,
            4246
          ]
        },
        "CurveYCRVVoter.balanceOfPool": {
          "0": [
            4086,
            4129
          ]
        },
        "CurveYCRVVoter.balanceOfWant": {
          "29": [
            3964,
            4008
          ]
        },
        "CurveYCRVVoter.createLock": {
          "24": [
            3060,
            3134
          ],
          "25": [
            3144,
            3178
          ],
          "26": [
            3188,
            3227
          ],
          "27": [
            3237,
            3288
          ]
        },
        "CurveYCRVVoter.deposit": {
          "30": [
            1632,
            1665
          ],
          "31": [
            1679,
            1716
          ],
          "32": [
            1730,
            1756
          ]
        },
        "CurveYCRVVoter.execute": {
          "28": [
            4560,
            4634
          ]
        },
        "CurveYCRVVoter.getName": {
          "5": [
            1318,
            1341
          ]
        },
        "CurveYCRVVoter.increaseAmount": {
          "1": [
            3360,
            3434
          ],
          "2": [
            3444,
            3478
          ],
          "3": [
            3488,
            3527
          ],
          "4": [
            3537,
            3579
          ]
        },
        "CurveYCRVVoter.release": {
          "20": [
            3630,
            3704
          ],
          "21": [
            3714,
            3743
          ]
        },
        "CurveYCRVVoter.setGovernance": {
          "22": [
            4322,
            4370
          ],
          "23": [
            4380,
            4404
          ]
        },
        "CurveYCRVVoter.setStrategy": {
          "10": [
            1413,
            1461
          ],
          "11": [
            1471,
            1491
          ]
        },
        "CurveYCRVVoter.withdraw": {
          "6": [
            2212,
            2258
          ],
          "7": [
            2372,
            2418
          ],
          "8": [
            2432,
            2463
          ],
          "9": [
            2483,
            2527
          ],
          "12": [
            1931,
            1977
          ],
          "13": [
            1987,
            2028
          ],
          "14": [
            2038,
            2076
          ]
        },
        "CurveYCRVVoter.withdrawAll": {
          "16": [
            2675,
            2721
          ],
          "17": [
            2731,
            2745
          ],
          "18": [
            2756,
            2803
          ],
          "19": [
            2813,
            2857
          ]
        }
      },
      "6": {
        "SafeERC20.callOptionalReturn": {
          "41": [
            3253,
            3324
          ],
          "42": [
            3471,
            3523
          ],
          "43": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeApprove": {
          "33": [
            1406,
            1556
          ],
          "34": [
            1566,
            1655
          ]
        },
        "SafeERC20.safeTransfer": {
          "39": [
            744,
            829
          ]
        }
      },
      "7": {
        "Address.isContract": {
          "45": [
            1238,
            1289
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101375760003560e01c8063722713f7116100b8578063b52c05fe1161007c578063b52c05fe146102dd578063b61d27f614610300578063c1a3d44c14610408578063d0e30db014610410578063d1e61dcb14610418578063e2fdcc171461042057610137565b8063722713f714610297578063853828b61461029f57806386d1a69f146102a7578063a8c62e76146102af578063ab033ea9146102b757610137565b80632e1a7d4d116100ff5780632e1a7d4d1461021e57806333a100ca1461023b57806351cff8d9146102615780635aa6e675146102875780636a4874a11461028f57610137565b8063115880861461013c57806315456eba1461015657806316f0115b1461017557806317d7de7c146101995780631f1fcd5114610216575b600080fd5b610144610428565b60408051918252519081900360200190f35b6101736004803603602081101561016c57600080fd5b50356104af565b005b61017d6105f9565b604080516001600160a01b039092168252519081900360200190f35b6101a1610611565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101db5781810151838201526020016101c3565b50505050905090810190601f1680156102085780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d610639565b6101736004803603602081101561023457600080fd5b5035610651565b6101736004803603602081101561025157600080fd5b50356001600160a01b031661078c565b6101446004803603602081101561027757600080fd5b50356001600160a01b03166107fb565b61017d6108e5565b61017d6108f4565b61014461090c565b610144610932565b610173610a3c565b61017d610b07565b610173600480360360208110156102cd57600080fd5b50356001600160a01b0316610b16565b610173600480360360408110156102f357600080fd5b5080359060200135610b85565b6103856004803603606081101561031657600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561034657600080fd5b82018360208201111561035857600080fd5b8035906020019184600183028401116401000000008311171561037a57600080fd5b509092509050610cd0565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103cc5781810151838201526020016103b4565b50505050905090810190601f1680156103f95780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610144610daf565b610173610e04565b61017d610f5d565b61017d610f75565b604080516370a0823160e01b8152306004820152905160009173fa712ee4788c042e2b7bb55e6cb8ec569c4530c1916370a0823191602480820192602092909190829003018186803b15801561047d57600080fd5b505afa158015610491573d6000803e3d6000fd5b505050506040513d60208110156104a757600080fd5b505190505b90565b6001546001600160a01b03163314806104d257506000546001600160a01b031633145b610511576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b61054b73d533a949740bb3306d119cc777fa900ba034cd52735f3b5dfeb7b28cdbd7faba78963ee202a494e2a2600063ffffffff610f8d16565b61058473d533a949740bb3306d119cc777fa900ba034cd52735f3b5dfeb7b28cdbd7faba78963ee202a494e2a28363ffffffff610f8d16565b735f3b5dfeb7b28cdbd7faba78963ee202a494e2a26001600160a01b0316634957677c826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156105de57600080fd5b505af11580156105f2573d6000803e3d6000fd5b5050505050565b73fa712ee4788c042e2b7bb55e6cb8ec569c4530c181565b60408051808201909152600e81526d21bab93b32aca1a92b2b37ba32b960911b602082015290565b73df5e0e81dff6faf3a7e52ba697820c5e32d806a881565b6001546001600160a01b0316331461069e576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905160009173df5e0e81dff6faf3a7e52ba697820c5e32d806a8916370a0823191602480820192602092909190829003018186803b1580156106f357600080fd5b505afa158015610707573d6000803e3d6000fd5b505050506040513d602081101561071d57600080fd5b50519050818110156107565761074161073c838363ffffffff6110a516565b6110ee565b9150610753828263ffffffff61116816565b91505b6001546107889073df5e0e81dff6faf3a7e52ba697820c5e32d806a8906001600160a01b03168463ffffffff6111c216565b5050565b6000546001600160a01b031633146107d9576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546000906001600160a01b0316331461084b576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561089157600080fd5b505afa1580156108a5573d6000803e3d6000fd5b505050506040513d60208110156108bb57600080fd5b50516001549091506108e0906001600160a01b0384811691168363ffffffff6111c216565b919050565b6000546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b600061092d610919610428565b610921610daf565b9063ffffffff61116816565b905090565b6001546000906001600160a01b03163314610982576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b61098a611214565b604080516370a0823160e01b8152306004820152905173df5e0e81dff6faf3a7e52ba697820c5e32d806a8916370a08231916024808301926020929190829003018186803b1580156109db57600080fd5b505afa1580156109ef573d6000803e3d6000fd5b505050506040513d6020811015610a0557600080fd5b50516001549091506104ac9073df5e0e81dff6faf3a7e52ba697820c5e32d806a8906001600160a01b03168363ffffffff6111c216565b6001546001600160a01b0316331480610a5f57506000546001600160a01b031633145b610a9e576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b735f3b5dfeb7b28cdbd7faba78963ee202a494e2a26001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610aed57600080fd5b505af1158015610b01573d6000803e3d6000fd5b50505050565b6001546001600160a01b031681565b6000546001600160a01b03163314610b63576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331480610ba857506000546001600160a01b031633145b610be7576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b610c2173d533a949740bb3306d119cc777fa900ba034cd52735f3b5dfeb7b28cdbd7faba78963ee202a494e2a2600063ffffffff610f8d16565b610c5a73d533a949740bb3306d119cc777fa900ba034cd52735f3b5dfeb7b28cdbd7faba78963ee202a494e2a28463ffffffff610f8d16565b604080516365fc387360e01b815260048101849052602481018390529051735f3b5dfeb7b28cdbd7faba78963ee202a494e2a2916365fc387391604480830192600092919082900301818387803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050505050565b6001546000906060906001600160a01b0316331480610cf957506000546001600160a01b031633145b610d38576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b60006060876001600160a01b0316878787604051808383808284376040519201945060009350909150508083038185875af1925050503d8060008114610d9a576040519150601f19603f3d011682016040523d82523d6000602084013e610d9f565b606091505b5090999098509650505050505050565b604080516370a0823160e01b8152306004820152905160009173df5e0e81dff6faf3a7e52ba697820c5e32d806a8916370a0823191602480820192602092909190829003018186803b15801561047d57600080fd5b604080516370a0823160e01b8152306004820152905160009173df5e0e81dff6faf3a7e52ba697820c5e32d806a8916370a0823191602480820192602092909190829003018186803b158015610e5957600080fd5b505afa158015610e6d573d6000803e3d6000fd5b505050506040513d6020811015610e8357600080fd5b505190508015610f5a57610ec773df5e0e81dff6faf3a7e52ba697820c5e32d806a873fa712ee4788c042e2b7bb55e6cb8ec569c4530c1600063ffffffff610f8d16565b610f0073df5e0e81dff6faf3a7e52ba697820c5e32d806a873fa712ee4788c042e2b7bb55e6cb8ec569c4530c18363ffffffff610f8d16565b73fa712ee4788c042e2b7bb55e6cb8ec569c4530c16001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156105de57600080fd5b50565b73d061d61a4d941c39e5453435b6345dc261c2fce081565b735f3b5dfeb7b28cdbd7faba78963ee202a494e2a281565b801580611013575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015610fe557600080fd5b505afa158015610ff9573d6000803e3d6000fd5b505050506040513d602081101561100f57600080fd5b5051155b61104e5760405162461bcd60e51b815260040180806020018281038252603681526020018061158d6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526110a09084906112d7565b505050565b60006110e783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061148f565b9392505050565b600073fa712ee4788c042e2b7bb55e6cb8ec569c4530c16001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b5093949350505050565b6000828201838110156110e7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526110a09084906112d7565b604080516370a0823160e01b8152306004820152905173fa712ee4788c042e2b7bb55e6cb8ec569c4530c191632e1a7d4d9183916370a08231916024808301926020929190829003018186803b15801561126d57600080fd5b505afa158015611281573d6000803e3d6000fd5b505050506040513d602081101561129757600080fd5b5051604080516001600160e01b031960e085901b168152600481019290925251602480830192600092919082900301818387803b158015610aed57600080fd5b6112e9826001600160a01b0316611526565b61133a576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106113785780518252601f199092019160209182019101611359565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146113da576040519150601f19603f3d011682016040523d82523d6000602084013e6113df565b606091505b509150915081611436576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610b015780806020019051602081101561145257600080fd5b5051610b015760405162461bcd60e51b815260040180806020018281038252602a815260200180611563602a913960400191505060405180910390fd5b6000818484111561151e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114e35781810151838201526020016114cb565b50505050905090810190601f1680156115105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061155a57508115155b94935050505056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a72315820734b0eee044954bac3c169b1e430f28e52702004b181ff25dc27ae4b78953f7b64736f6c63430005110032",
  "deployedSourceMap": "553:4199:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;553:4199:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4021:115;;;:::i;:::-;;;;;;;;;;;;;;;;3301:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3301:285:12;;:::i;:::-;;767:82;;;:::i;:::-;;;;-1:-1:-1;;;;;767:82:12;;;;;;;;;;;;;;1251:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1251:97:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:82;;;:::i;2158:376::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2158:376:12;;:::i;1354:144::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1354:144:12;-1:-1:-1;;;;;1354:144:12;;:::i;1853:230::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1853:230:12;-1:-1:-1;;;;;1853:230:12;;:::i;1123:25::-;;;:::i;944:81::-;;;:::i;4142:111::-;;;:::i;2607:257::-;;;:::i;3592:158::-;;;:::i;1154:23::-;;;:::i;4259:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4259:152:12;-1:-1:-1;;;;;4259:152:12;;:::i;2984:311::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2984:311:12;;;;;;;:::i;4417:333::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;4417:333:12;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4417:333:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4417:333:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4417:333:12;;-1:-1:-1;4417:333:12;-1:-1:-1;4417:333:12;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4417:333:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3899:116;;;:::i;1504:269::-;;;:::i;855:83::-;;;:::i;1032:84::-;;;:::i;4021:115::-;4093:36;;;-1:-1:-1;;;4093:36:12;;4123:4;4093:36;;;;;;4067:7;;806:42;;4093:21;;:36;;;;;;;;;;;;;;;806:42;4093:36;;;5:2:-1;;;;30:1;27;20:12;5:2;4093:36:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4093:36:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4093:36:12;;-1:-1:-1;4021:115:12;;:::o;3301:285::-;3382:8;;-1:-1:-1;;;;;3382:8:12;3368:10;:22;;:50;;-1:-1:-1;3408:10:12;;-1:-1:-1;;;;;3408:10:12;3394;:24;3368:50;3360:74;;;;;-1:-1:-1;;;3360:74:12;;;;;;;;;;;;-1:-1:-1;;;3360:74:12;;;;;;;;;;;;;;;3444:34;982:42;1073;3476:1;3444:34;:23;:34;:::i;:::-;3488:39;982:42;1073;3520:6;3488:39;:23;:39;:::i;:::-;1073:42;-1:-1:-1;;;;;3537:34:12;;3572:6;3537:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3537:42:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3537:42:12;;;;3301:285;:::o;767:82::-;806:42;767:82;:::o;1251:97::-;1318:23;;;;;;;;;;;;-1:-1:-1;;;1318:23:12;;;;1251:97;:::o;679:82::-;718:42;679:82;:::o;2158:376::-;2234:8;;-1:-1:-1;;;;;2234:8:12;2220:10;:22;2212:46;;;;;-1:-1:-1;;;2212:46:12;;;;;;;;;;;;-1:-1:-1;;;2212:46:12;;;;;;;;;;;;;;;2287:37;;;-1:-1:-1;;;2287:37:12;;2318:4;2287:37;;;;;;2268:16;;718:42;;2287:22;;:37;;;;;;;;;;;;;;;718:42;2287:37;;;5:2:-1;;;;30:1;27;20:12;5:2;2287:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2287:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2287:37:12;;-1:-1:-1;2338:18:12;;;2334:140;;;2382:36;2396:21;:7;2408:8;2396:21;:11;:21;:::i;:::-;2382:13;:36::i;:::-;2372:46;-1:-1:-1;2442:21:12;2372:46;2454:8;2442:21;:11;:21;:::i;:::-;2432:31;;2334:140;2509:8;;2483:44;;718:42;;-1:-1:-1;;;;;2509:8:12;2519:7;2483:44;:25;:44;:::i;:::-;2158:376;;:::o;1354:144::-;1435:10;;-1:-1:-1;;;;;1435:10:12;1421;:24;1413:48;;;;;-1:-1:-1;;;1413:48:12;;;;;;;;;;;;-1:-1:-1;;;1413:48:12;;;;;;;;;;;;;;;1471:8;:20;;-1:-1:-1;;;;;;1471:20:12;-1:-1:-1;;;;;1471:20:12;;;;;;;;;;1354:144::o;1853:230::-;1953:8;;1904:15;;-1:-1:-1;;;;;1953:8:12;1939:10;:22;1931:46;;;;;-1:-1:-1;;;1931:46:12;;;;;;;;;;;;-1:-1:-1;;;1931:46:12;;;;;;;;;;;;;;;1997:31;;;-1:-1:-1;;;1997:31:12;;2022:4;1997:31;;;;;;-1:-1:-1;;;;;1997:16:12;;;;;:31;;;;;;;;;;;;;;:16;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;1997:31:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1997:31:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1997:31:12;2058:8;;1997:31;;-1:-1:-1;2038:38:12;;-1:-1:-1;;;;;2038:19:12;;;;2058:8;1997:31;2038:38;:19;:38;:::i;:::-;1853:230;;;:::o;1123:25::-;;;-1:-1:-1;;;;;1123:25:12;;:::o;944:81::-;982:42;944:81;:::o;4142:111::-;4184:7;4210:36;4230:15;:13;:15::i;:::-;4210;:13;:15::i;:::-;:19;:36;:19;:36;:::i;:::-;4203:43;;4142:111;:::o;2607:257::-;2697:8;;2648:15;;-1:-1:-1;;;;;2697:8:12;2683:10;:22;2675:46;;;;;-1:-1:-1;;;2675:46:12;;;;;;;;;;;;-1:-1:-1;;;2675:46:12;;;;;;;;;;;;;;;2731:14;:12;:14::i;:::-;2766:37;;;-1:-1:-1;;;2766:37:12;;2797:4;2766:37;;;;;;718:42;;2766:22;;:37;;;;;;;;;;;;;;718:42;2766:37;;;5:2:-1;;;;30:1;27;20:12;5:2;2766:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2766:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2766:37:12;2839:8;;2766:37;;-1:-1:-1;2813:44:12;;718:42;;-1:-1:-1;;;;;2839:8:12;2766:37;2813:44;:25;:44;:::i;3592:158::-;3652:8;;-1:-1:-1;;;;;3652:8:12;3638:10;:22;;:50;;-1:-1:-1;3678:10:12;;-1:-1:-1;;;;;3678:10:12;3664;:24;3638:50;3630:74;;;;;-1:-1:-1;;;3630:74:12;;;;;;;;;;;;-1:-1:-1;;;3630:74:12;;;;;;;;;;;;;;;1073:42;-1:-1:-1;;;;;3714:27:12;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3714:29:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3714:29:12;;;;3592:158::o;1154:23::-;;;-1:-1:-1;;;;;1154:23:12;;:::o;4259:152::-;4344:10;;-1:-1:-1;;;;;4344:10:12;4330;:24;4322:48;;;;;-1:-1:-1;;;4322:48:12;;;;;;;;;;;;-1:-1:-1;;;4322:48:12;;;;;;;;;;;;;;;4380:10;:24;;-1:-1:-1;;;;;;4380:24:12;-1:-1:-1;;;;;4380:24:12;;;;;;;;;;4259:152::o;2984:311::-;3082:8;;-1:-1:-1;;;;;3082:8:12;3068:10;:22;;:50;;-1:-1:-1;3108:10:12;;-1:-1:-1;;;;;3108:10:12;3094;:24;3068:50;3060:74;;;;;-1:-1:-1;;;3060:74:12;;;;;;;;;;;;-1:-1:-1;;;3060:74:12;;;;;;;;;;;;;;;3144:34;982:42;1073;3176:1;3144:34;:23;:34;:::i;:::-;3188:39;982:42;1073;3220:6;3188:39;:23;:39;:::i;:::-;3237:51;;;-1:-1:-1;;;3237:51:12;;;;;;;;;;;;;;;;1073:42;;3237:30;;:51;;;;;-1:-1:-1;;3237:51:12;;;;;;;-1:-1:-1;1073:42:12;3237:51;;;5:2:-1;;;;30:1;27;20:12;5:2;3237:51:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3237:51:12;;;;2984:311;;:::o;4417:333::-;4582:8;;4530:4;;4536:12;;-1:-1:-1;;;;;4582:8:12;4568:10;:22;;:50;;-1:-1:-1;4608:10:12;;-1:-1:-1;;;;;4608:10:12;4594;:24;4568:50;4560:74;;;;;-1:-1:-1;;;4560:74:12;;;;;;;;;;;;-1:-1:-1;;;4560:74:12;;;;;;;;;;;;;;;4645:12;4659:19;4682:2;-1:-1:-1;;;;;4682:7:12;4696:5;4703:4;;4682:26;;;;;30:3:-1;22:6;14;1:33;4682:26:12;;45:16:-1;;;-1:-1;4682:26:12;;-1:-1:-1;4682:26:12;;-1:-1:-1;;4682:26:12;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;4644:64:12;;;;-1:-1:-1;4417:333:12;-1:-1:-1;;;;;;;4417:333:12:o;3899:116::-;3971:37;;;-1:-1:-1;;;3971:37:12;;4002:4;3971:37;;;;;;3945:7;;718:42;;3971:22;;:37;;;;;;;;;;;;;;;718:42;3971:37;;;5:2:-1;;;;30:1;27;20:12;1504:269:12;1556:37;;;-1:-1:-1;;;1556:37:12;;1587:4;1556:37;;;;;;1540:13;;718:42;;1556:22;;:37;;;;;;;;;;;;;;;718:42;1556:37;;;5:2:-1;;;;30:1;27;20:12;5:2;1556:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1556:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1556:37:12;;-1:-1:-1;1607:9:12;;1603:164;;1632:33;718:42;806;1663:1;1632:33;:24;:33;:::i;:::-;1679:37;718:42;806;1710:5;1679:37;:24;:37;:::i;:::-;806:42;-1:-1:-1;;;;;1730:19:12;;1750:5;1730:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1603:164:12;1504:269;:::o;855:83::-;895:42;855:83;:::o;1032:84::-;1073:42;1032:84;:::o;1050:612:6:-;1415:10;;;1414:62;;-1:-1:-1;1431:39:6;;;-1:-1:-1;;;1431:39:6;;1455:4;1431:39;;;;-1:-1:-1;;;;;1431:39:6;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1431:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1431:39:6;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:62;;;-1:-1:-1;;;;;1592:62:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1592:62:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1566:89:6;;1585:5;;1566:18;:89::i;:::-;1050:612;;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:1:o;3756:137:12:-;3814:7;806:42;-1:-1:-1;;;;;3833:20:12;;3854:7;3833:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3833:29:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3879:7:12;;3756:137;-1:-1:-1;;;;3756:137:12:o;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;662:174:6;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;2870:108:12:-;2934:36;;;-1:-1:-1;;;2934:36:12;;2964:4;2934:36;;;;;;806:42;;2913:20;;806:42;;2934:21;;:36;;;;;;;;;;;;;;806:42;2934:36;;;5:2:-1;;;;30:1;27;20:12;5:2;2934:36:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2934:36:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2934:36:12;2913:58;;;-1:-1:-1;;;;;;2913:58:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2913:58:12;;;;;;;-1:-1:-1;2913:58:12;;;;5:2:-1;;;;30:1;27;20:12;2666:1095:6;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:187:1;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;686:610:7:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    553,
    4752
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x722713F7 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB52C05FE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB52C05FE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xC1A3D44C EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xD1E61DCB EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xE2FDCC17 EQ PUSH2 0x420 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x722713F7 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA8C62E76 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x2B7 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x33A100CA EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x6A4874A1 EQ PUSH2 0x28F JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x11588086 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x15456EBA EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x216 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x208 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x639 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x651 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78C JUMP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x17D PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x144 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x173 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x17D PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x173 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x17D PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x17D PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x491 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x4D2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x511 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x54B PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0xF8D AND JUMP JUMPDEST PUSH2 0x584 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xF8D AND JUMP JUMPDEST PUSH20 0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4957677C DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x21BAB93B32ACA1A92B2B37BA32B9 PUSH1 0x91 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x69E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x707 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x756 JUMPI PUSH2 0x741 PUSH2 0x73C DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x10A5 AND JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x753 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1168 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x788 SWAP1 PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH4 0xFFFFFFFF PUSH2 0x11C2 AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH2 0x8E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x11C2 AND JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92D PUSH2 0x919 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x921 PUSH2 0xDAF JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1168 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x982 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x98A PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH2 0x4AC SWAP1 PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x11C2 AND JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xA5F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xA9E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xBA8 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xBE7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC21 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0xF8D AND JUMP JUMPDEST PUSH2 0xC5A PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF8D AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x65FC3873 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2 SWAP2 PUSH4 0x65FC3873 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xCF9 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xD38 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD9A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xF5A JUMPI PUSH2 0xEC7 PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0xF8D AND JUMP JUMPDEST PUSH2 0xF00 PUSH20 0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8 PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xF8D AND JUMP JUMPDEST PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6B55F25 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH20 0xD061D61A4D941C39E5453435B6345DC261C2FCE0 DUP2 JUMP JUMPDEST PUSH20 0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2 DUP2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1013 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x100F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x104E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x158D PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x10A0 SWAP1 DUP5 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x148F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E1A7D4D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x114A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x115E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x10A0 SWAP1 DUP5 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 SWAP2 PUSH4 0x2E1A7D4D SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1281 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E9 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x133A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1378 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1436 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xB01 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1563 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14E3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1510 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x155A JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A72315820734B0EEE DIV 0x49 SLOAD 0xBA 0xC3 0xC1 PUSH10 0xB1E430F28E52702004B1 DUP2 SELFDESTRUCT 0x25 0xDC 0x27 0xAE 0x4B PUSH25 0x953F7B64736F6C634300051100320000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        553,
        4752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        553,
        4752
      ],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x137"
    },
    "25": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x722713F7"
    },
    "38": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB52C05FE"
    },
    "49": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "GT",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB52C05FE"
    },
    "60": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2DD"
    },
    "64": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB61D27F6"
    },
    "71": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x300"
    },
    "75": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xC1A3D44C"
    },
    "82": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x408"
    },
    "86": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "88": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD0E30DB0"
    },
    "93": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "94": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x410"
    },
    "97": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "98": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "99": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xD1E61DCB"
    },
    "104": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "105": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x418"
    },
    "108": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "109": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE2FDCC17"
    },
    "115": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "116": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x420"
    },
    "119": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "120": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x137"
    },
    "123": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMP",
      "path": "12"
    },
    "124": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "126": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x722713F7"
    },
    "131": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "132": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x297"
    },
    "135": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "136": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "137": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x853828B6"
    },
    "142": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "143": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29F"
    },
    "146": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "147": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "148": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x86D1A69F"
    },
    "153": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "154": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A7"
    },
    "157": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "158": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xA8C62E76"
    },
    "164": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "165": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AF"
    },
    "168": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "169": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xAB033EA9"
    },
    "175": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "176": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B7"
    },
    "179": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "180": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x137"
    },
    "183": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMP",
      "path": "12"
    },
    "184": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "185": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "186": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2E1A7D4D"
    },
    "191": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "GT",
      "path": "12"
    },
    "192": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "196": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "197": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2E1A7D4D"
    },
    "202": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "203": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21E"
    },
    "206": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "207": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "208": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x33A100CA"
    },
    "213": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "214": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23B"
    },
    "217": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "218": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "219": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x51CFF8D9"
    },
    "224": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "225": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x261"
    },
    "228": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "229": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "230": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x5AA6E675"
    },
    "235": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "236": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x287"
    },
    "239": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "240": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "241": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x6A4874A1"
    },
    "246": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "247": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28F"
    },
    "250": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "251": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x137"
    },
    "254": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMP",
      "path": "12"
    },
    "255": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "256": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "257": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x11588086"
    },
    "262": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "263": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13C"
    },
    "266": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "267": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "268": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x15456EBA"
    },
    "273": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "274": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x156"
    },
    "277": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "278": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "279": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x16F0115B"
    },
    "284": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "285": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x175"
    },
    "288": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "289": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "290": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x17D7DE7C"
    },
    "295": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "296": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x199"
    },
    "299": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "300": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "301": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1F1FCD51"
    },
    "306": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "EQ",
      "path": "12"
    },
    "307": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x216"
    },
    "310": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "311": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "312": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "314": {
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "DUP1",
      "path": "12"
    },
    "315": {
      "first_revert": true,
      "fn": null,
      "offset": [
        553,
        4752
      ],
      "op": "REVERT",
      "path": "12"
    },
    "316": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "317": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x144"
    },
    "320": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x428"
    },
    "323": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "jump": "i",
      "offset": [
        4021,
        4136
      ],
      "op": "JUMP",
      "path": "12"
    },
    "324": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "325": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "327": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "DUP1",
      "path": "12"
    },
    "328": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "329": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "330": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "DUP3",
      "path": "12"
    },
    "331": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "332": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "333": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "334": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "DUP2",
      "path": "12"
    },
    "335": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "336": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "SUB",
      "path": "12"
    },
    "337": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "339": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "ADD",
      "path": "12"
    },
    "340": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "341": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "RETURN",
      "path": "12"
    },
    "342": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "343": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173"
    },
    "346": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "348": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "DUP1",
      "path": "12"
    },
    "349": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "350": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "SUB",
      "path": "12"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "353": {
      "op": "DUP2"
    },
    "354": {
      "op": "LT"
    },
    "355": {
      "op": "ISZERO"
    },
    "356": {
      "op": "PUSH2",
      "value": "0x16C"
    },
    "359": {
      "op": "JUMPI"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "362": {
      "op": "DUP1"
    },
    "363": {
      "op": "REVERT"
    },
    "364": {
      "op": "JUMPDEST"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "367": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4AF"
    },
    "370": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "jump": "i",
      "offset": [
        3301,
        3586
      ],
      "op": "JUMP",
      "path": "12"
    },
    "371": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "372": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "STOP",
      "path": "12"
    },
    "373": {
      "offset": [
        767,
        849
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "374": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "377": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5F9"
    },
    "380": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "jump": "i",
      "offset": [
        767,
        849
      ],
      "op": "JUMP",
      "path": "12"
    },
    "381": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "382": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "384": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "DUP1",
      "path": "12"
    },
    "385": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "392": {
      "op": "SHL"
    },
    "393": {
      "op": "SUB"
    },
    "394": {
      "offset": [
        767,
        849
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "395": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "396": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "AND",
      "path": "12"
    },
    "397": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "DUP3",
      "path": "12"
    },
    "398": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "399": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "400": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "401": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "DUP2",
      "path": "12"
    },
    "402": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "403": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "SUB",
      "path": "12"
    },
    "404": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "406": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "ADD",
      "path": "12"
    },
    "407": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "408": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        767,
        849
      ],
      "op": "RETURN",
      "path": "12"
    },
    "409": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "410": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A1"
    },
    "413": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x611"
    },
    "416": {
      "fn": "CurveYCRVVoter.getName",
      "jump": "i",
      "offset": [
        1251,
        1348
      ],
      "op": "JUMP",
      "path": "12"
    },
    "417": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "418": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "420": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP1",
      "path": "12"
    },
    "421": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "422": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "424": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP1",
      "path": "12"
    },
    "425": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP3",
      "path": "12"
    },
    "426": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "427": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP4",
      "path": "12"
    },
    "428": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "429": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP2",
      "path": "12"
    },
    "430": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP4",
      "path": "12"
    },
    "431": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "ADD",
      "path": "12"
    },
    "432": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "433": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP4",
      "path": "12"
    },
    "434": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "435": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "436": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "437": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP4",
      "path": "12"
    },
    "438": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "439": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "440": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP4",
      "path": "12"
    },
    "441": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "ADD",
      "path": "12"
    },
    "442": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "443": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP6",
      "path": "12"
    },
    "444": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "ADD",
      "path": "12"
    },
    "445": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "446": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP1",
      "path": "12"
    },
    "447": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP4",
      "path": "12"
    },
    "448": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP4",
      "path": "12"
    },
    "449": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "451": {
      "op": "JUMPDEST"
    },
    "452": {
      "op": "DUP4"
    },
    "453": {
      "op": "DUP2"
    },
    "454": {
      "op": "LT"
    },
    "455": {
      "op": "ISZERO"
    },
    "456": {
      "op": "PUSH2",
      "value": "0x1DB"
    },
    "459": {
      "op": "JUMPI"
    },
    "460": {
      "op": "DUP2"
    },
    "461": {
      "op": "DUP2"
    },
    "462": {
      "op": "ADD"
    },
    "463": {
      "op": "MLOAD"
    },
    "464": {
      "op": "DUP4"
    },
    "465": {
      "op": "DUP3"
    },
    "466": {
      "op": "ADD"
    },
    "467": {
      "op": "MSTORE"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "470": {
      "op": "ADD"
    },
    "471": {
      "op": "PUSH2",
      "value": "0x1C3"
    },
    "474": {
      "op": "JUMP"
    },
    "475": {
      "op": "JUMPDEST"
    },
    "476": {
      "op": "POP"
    },
    "477": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "478": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "479": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "480": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "481": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "482": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "483": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP2",
      "path": "12"
    },
    "484": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "ADD",
      "path": "12"
    },
    "485": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "486": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "488": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "AND",
      "path": "12"
    },
    "489": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP1",
      "path": "12"
    },
    "490": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "491": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x208"
    },
    "494": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "495": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP1",
      "path": "12"
    },
    "496": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP3",
      "path": "12"
    },
    "497": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SUB",
      "path": "12"
    },
    "498": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP1",
      "path": "12"
    },
    "499": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "500": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "502": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP4",
      "path": "12"
    },
    "503": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "505": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SUB",
      "path": "12"
    },
    "506": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "509": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "EXP",
      "path": "12"
    },
    "510": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SUB",
      "path": "12"
    },
    "511": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "NOT",
      "path": "12"
    },
    "512": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "AND",
      "path": "12"
    },
    "513": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP2",
      "path": "12"
    },
    "514": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "515": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "517": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "ADD",
      "path": "12"
    },
    "518": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "519": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "520": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "521": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "522": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "523": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "524": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "525": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "POP",
      "path": "12"
    },
    "526": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "528": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "529": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "DUP1",
      "path": "12"
    },
    "530": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "531": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SUB",
      "path": "12"
    },
    "532": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "533": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "RETURN",
      "path": "12"
    },
    "534": {
      "offset": [
        679,
        761
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "535": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        679,
        761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "538": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        679,
        761
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x639"
    },
    "541": {
      "fn": "CurveYCRVVoter.getName",
      "jump": "i",
      "offset": [
        679,
        761
      ],
      "op": "JUMP",
      "path": "12"
    },
    "542": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "543": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173"
    },
    "546": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "548": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "DUP1",
      "path": "12"
    },
    "549": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "550": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "SUB",
      "path": "12"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "553": {
      "op": "DUP2"
    },
    "554": {
      "op": "LT"
    },
    "555": {
      "op": "ISZERO"
    },
    "556": {
      "op": "PUSH2",
      "value": "0x234"
    },
    "559": {
      "op": "JUMPI"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "562": {
      "op": "DUP1"
    },
    "563": {
      "op": "REVERT"
    },
    "564": {
      "op": "JUMPDEST"
    },
    "565": {
      "op": "POP"
    },
    "566": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "567": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x651"
    },
    "570": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        2158,
        2534
      ],
      "op": "JUMP",
      "path": "12"
    },
    "571": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "572": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173"
    },
    "575": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "577": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "DUP1",
      "path": "12"
    },
    "578": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "579": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "SUB",
      "path": "12"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "582": {
      "op": "DUP2"
    },
    "583": {
      "op": "LT"
    },
    "584": {
      "op": "ISZERO"
    },
    "585": {
      "op": "PUSH2",
      "value": "0x251"
    },
    "588": {
      "op": "JUMPI"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "591": {
      "op": "DUP1"
    },
    "592": {
      "op": "REVERT"
    },
    "593": {
      "op": "JUMPDEST"
    },
    "594": {
      "op": "POP"
    },
    "595": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "op": "SUB"
    },
    "604": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "AND",
      "path": "12"
    },
    "605": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x78C"
    },
    "608": {
      "fn": "CurveYCRVVoter.setStrategy",
      "jump": "i",
      "offset": [
        1354,
        1498
      ],
      "op": "JUMP",
      "path": "12"
    },
    "609": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "610": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x144"
    },
    "613": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "615": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "DUP1",
      "path": "12"
    },
    "616": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "617": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "SUB",
      "path": "12"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "620": {
      "op": "DUP2"
    },
    "621": {
      "op": "LT"
    },
    "622": {
      "op": "ISZERO"
    },
    "623": {
      "op": "PUSH2",
      "value": "0x277"
    },
    "626": {
      "op": "JUMPI"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "629": {
      "op": "DUP1"
    },
    "630": {
      "op": "REVERT"
    },
    "631": {
      "op": "JUMPDEST"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "640": {
      "op": "SHL"
    },
    "641": {
      "op": "SUB"
    },
    "642": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "AND",
      "path": "12"
    },
    "643": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7FB"
    },
    "646": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        1853,
        2083
      ],
      "op": "JUMP",
      "path": "12"
    },
    "647": {
      "offset": [
        1123,
        1148
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "648": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1123,
        1148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "651": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1123,
        1148
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E5"
    },
    "654": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        1123,
        1148
      ],
      "op": "JUMP",
      "path": "12"
    },
    "655": {
      "offset": [
        944,
        1025
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "656": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        944,
        1025
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "659": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        944,
        1025
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8F4"
    },
    "662": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        944,
        1025
      ],
      "op": "JUMP",
      "path": "12"
    },
    "663": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4142,
        4253
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "664": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4142,
        4253
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x144"
    },
    "667": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4142,
        4253
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x90C"
    },
    "670": {
      "fn": "CurveYCRVVoter.balanceOf",
      "jump": "i",
      "offset": [
        4142,
        4253
      ],
      "op": "JUMP",
      "path": "12"
    },
    "671": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2607,
        2864
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "672": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2607,
        2864
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x144"
    },
    "675": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2607,
        2864
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x932"
    },
    "678": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "jump": "i",
      "offset": [
        2607,
        2864
      ],
      "op": "JUMP",
      "path": "12"
    },
    "679": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3592,
        3750
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "680": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3592,
        3750
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173"
    },
    "683": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3592,
        3750
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA3C"
    },
    "686": {
      "fn": "CurveYCRVVoter.release",
      "jump": "i",
      "offset": [
        3592,
        3750
      ],
      "op": "JUMP",
      "path": "12"
    },
    "687": {
      "offset": [
        1154,
        1177
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "688": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        1154,
        1177
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "691": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        1154,
        1177
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB07"
    },
    "694": {
      "fn": "CurveYCRVVoter.release",
      "jump": "i",
      "offset": [
        1154,
        1177
      ],
      "op": "JUMP",
      "path": "12"
    },
    "695": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "696": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173"
    },
    "699": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "701": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "DUP1",
      "path": "12"
    },
    "702": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "703": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "SUB",
      "path": "12"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "706": {
      "op": "DUP2"
    },
    "707": {
      "op": "LT"
    },
    "708": {
      "op": "ISZERO"
    },
    "709": {
      "op": "PUSH2",
      "value": "0x2CD"
    },
    "712": {
      "op": "JUMPI"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "715": {
      "op": "DUP1"
    },
    "716": {
      "op": "REVERT"
    },
    "717": {
      "op": "JUMPDEST"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "SUB"
    },
    "728": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "AND",
      "path": "12"
    },
    "729": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB16"
    },
    "732": {
      "fn": "CurveYCRVVoter.setGovernance",
      "jump": "i",
      "offset": [
        4259,
        4411
      ],
      "op": "JUMP",
      "path": "12"
    },
    "733": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "734": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173"
    },
    "737": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "739": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "DUP1",
      "path": "12"
    },
    "740": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "741": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "SUB",
      "path": "12"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "744": {
      "op": "DUP2"
    },
    "745": {
      "op": "LT"
    },
    "746": {
      "op": "ISZERO"
    },
    "747": {
      "op": "PUSH2",
      "value": "0x2F3"
    },
    "750": {
      "op": "JUMPI"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "753": {
      "op": "DUP1"
    },
    "754": {
      "op": "REVERT"
    },
    "755": {
      "op": "JUMPDEST"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "DUP1",
      "path": "12"
    },
    "758": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "759": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "760": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "762": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "ADD",
      "path": "12"
    },
    "763": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "764": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB85"
    },
    "767": {
      "fn": "CurveYCRVVoter.createLock",
      "jump": "i",
      "offset": [
        2984,
        3295
      ],
      "op": "JUMP",
      "path": "12"
    },
    "768": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "769": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x385"
    },
    "772": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "774": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "775": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "776": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SUB",
      "path": "12"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "779": {
      "op": "DUP2"
    },
    "780": {
      "op": "LT"
    },
    "781": {
      "op": "ISZERO"
    },
    "782": {
      "op": "PUSH2",
      "value": "0x316"
    },
    "785": {
      "op": "JUMPI"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "788": {
      "op": "DUP1"
    },
    "789": {
      "op": "REVERT"
    },
    "790": {
      "op": "JUMPDEST"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "797": {
      "op": "SHL"
    },
    "798": {
      "op": "SUB"
    },
    "799": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP3",
      "path": "12"
    },
    "800": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "801": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "AND",
      "path": "12"
    },
    "802": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "803": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "805": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "806": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "807": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "808": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "809": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "810": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "811": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "812": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "814": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "815": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "816": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "818": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP3",
      "path": "12"
    },
    "819": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "820": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "821": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "827": {
      "op": "DUP2"
    },
    "828": {
      "op": "GT"
    },
    "829": {
      "op": "ISZERO"
    },
    "830": {
      "op": "PUSH2",
      "value": "0x346"
    },
    "833": {
      "op": "JUMPI"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "836": {
      "op": "DUP1"
    },
    "837": {
      "op": "REVERT"
    },
    "838": {
      "op": "JUMPDEST"
    },
    "839": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP3",
      "path": "12"
    },
    "840": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "841": {
      "op": "DUP4"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "844": {
      "op": "DUP3"
    },
    "845": {
      "op": "ADD"
    },
    "846": {
      "op": "GT"
    },
    "847": {
      "op": "ISZERO"
    },
    "848": {
      "op": "PUSH2",
      "value": "0x358"
    },
    "851": {
      "op": "JUMPI"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "854": {
      "op": "DUP1"
    },
    "855": {
      "op": "REVERT"
    },
    "856": {
      "op": "JUMPDEST"
    },
    "857": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "858": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "859": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "860": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "862": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "863": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "864": {
      "op": "DUP5"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "DUP4"
    },
    "868": {
      "op": "MUL"
    },
    "869": {
      "op": "DUP5"
    },
    "870": {
      "op": "ADD"
    },
    "871": {
      "op": "GT"
    },
    "872": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "878": {
      "op": "DUP4"
    },
    "879": {
      "op": "GT"
    },
    "880": {
      "op": "OR"
    },
    "881": {
      "op": "ISZERO"
    },
    "882": {
      "op": "PUSH2",
      "value": "0x37A"
    },
    "885": {
      "op": "JUMPI"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "888": {
      "op": "DUP1"
    },
    "889": {
      "op": "REVERT"
    },
    "890": {
      "op": "JUMPDEST"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "893": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "894": {
      "op": "POP"
    },
    "895": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCD0"
    },
    "900": {
      "fn": "CurveYCRVVoter.execute",
      "jump": "i",
      "offset": [
        4417,
        4750
      ],
      "op": "JUMP",
      "path": "12"
    },
    "901": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "902": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "904": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "905": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "906": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP4",
      "path": "12"
    },
    "907": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "908": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "909": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "910": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "911": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "912": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "913": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "915": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "916": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "917": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "919": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "920": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP3",
      "path": "12"
    },
    "921": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "922": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SUB",
      "path": "12"
    },
    "923": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP3",
      "path": "12"
    },
    "924": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "925": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP4",
      "path": "12"
    },
    "926": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "927": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "928": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "929": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "930": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "931": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "933": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "934": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "935": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "936": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "937": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "938": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "939": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "941": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "942": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "943": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "944": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP4",
      "path": "12"
    },
    "945": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP4",
      "path": "12"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "948": {
      "op": "JUMPDEST"
    },
    "949": {
      "op": "DUP4"
    },
    "950": {
      "op": "DUP2"
    },
    "951": {
      "op": "LT"
    },
    "952": {
      "op": "ISZERO"
    },
    "953": {
      "op": "PUSH2",
      "value": "0x3CC"
    },
    "956": {
      "op": "JUMPI"
    },
    "957": {
      "op": "DUP2"
    },
    "958": {
      "op": "DUP2"
    },
    "959": {
      "op": "ADD"
    },
    "960": {
      "op": "MLOAD"
    },
    "961": {
      "op": "DUP4"
    },
    "962": {
      "op": "DUP3"
    },
    "963": {
      "op": "ADD"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "op": "PUSH2",
      "value": "0x3B4"
    },
    "971": {
      "op": "JUMP"
    },
    "972": {
      "op": "JUMPDEST"
    },
    "973": {
      "op": "POP"
    },
    "974": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "975": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "976": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "977": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "978": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "979": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "980": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "981": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "982": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "983": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "985": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "AND",
      "path": "12"
    },
    "986": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "987": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "988": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F9"
    },
    "991": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "992": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "993": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP3",
      "path": "12"
    },
    "994": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SUB",
      "path": "12"
    },
    "995": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "996": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "997": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "999": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1000": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1002": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SUB",
      "path": "12"
    },
    "1003": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x100"
    },
    "1006": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "EXP",
      "path": "12"
    },
    "1007": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SUB",
      "path": "12"
    },
    "1008": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "NOT",
      "path": "12"
    },
    "1009": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "AND",
      "path": "12"
    },
    "1010": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1011": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1012": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1014": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "ADD",
      "path": "12"
    },
    "1015": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1016": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "1017": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1018": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "1019": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1020": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "1021": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "1022": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "1023": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "POP",
      "path": "12"
    },
    "1024": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1026": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1027": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1028": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1029": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SUB",
      "path": "12"
    },
    "1030": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1031": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "RETURN",
      "path": "12"
    },
    "1032": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3899,
        4015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1033": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3899,
        4015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x144"
    },
    "1036": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3899,
        4015
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDAF"
    },
    "1039": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "jump": "i",
      "offset": [
        3899,
        4015
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1040": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1504,
        1773
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1041": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1504,
        1773
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173"
    },
    "1044": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1504,
        1773
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE04"
    },
    "1047": {
      "fn": "CurveYCRVVoter.deposit",
      "jump": "i",
      "offset": [
        1504,
        1773
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1048": {
      "offset": [
        855,
        938
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1049": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        855,
        938
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "1052": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        855,
        938
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF5D"
    },
    "1055": {
      "fn": "CurveYCRVVoter.deposit",
      "jump": "i",
      "offset": [
        855,
        938
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1056": {
      "offset": [
        1032,
        1116
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1057": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1032,
        1116
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17D"
    },
    "1060": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1032,
        1116
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF75"
    },
    "1063": {
      "fn": "CurveYCRVVoter.deposit",
      "jump": "i",
      "offset": [
        1032,
        1116
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1064": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1065": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x40"
    },
    "1067": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1068": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1069": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1078": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1079": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4123,
        4127
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "1080": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1082": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1083": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "ADD",
      "path": "12"
    },
    "1084": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1085": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1086": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1087": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4067,
        4074
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1089": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4067,
        4074
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1090": {
      "offset": [
        806,
        848
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "1111": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        806,
        848
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1112": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4114
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "1117": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4114
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1118": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1120": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1121": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1122": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "ADD",
      "path": "12"
    },
    "1123": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1124": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1126": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1127": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1128": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1129": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1130": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1131": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1132": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SUB",
      "path": "12"
    },
    "1133": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "ADD",
      "path": "12"
    },
    "1134": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1135": {
      "offset": [
        806,
        848
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1136": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1137": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1138": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1139": {
      "op": "DUP1"
    },
    "1140": {
      "op": "ISZERO"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "1144": {
      "op": "JUMPI"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "DUP1"
    },
    "1148": {
      "op": "REVERT"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "POP",
      "path": "12"
    },
    "1151": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "GAS",
      "path": "12"
    },
    "1152": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "1153": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1154": {
      "op": "DUP1"
    },
    "1155": {
      "op": "ISZERO"
    },
    "1156": {
      "op": "PUSH2",
      "value": "0x491"
    },
    "1159": {
      "op": "JUMPI"
    },
    "1160": {
      "op": "RETURNDATASIZE"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1163": {
      "op": "DUP1"
    },
    "1164": {
      "op": "RETURNDATACOPY"
    },
    "1165": {
      "op": "RETURNDATASIZE"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1168": {
      "op": "REVERT"
    },
    "1169": {
      "op": "JUMPDEST"
    },
    "1170": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "POP",
      "path": "12"
    },
    "1171": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "POP",
      "path": "12"
    },
    "1172": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "POP",
      "path": "12"
    },
    "1173": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "POP",
      "path": "12"
    },
    "1174": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1176": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1177": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1180": {
      "op": "DUP2"
    },
    "1181": {
      "op": "LT"
    },
    "1182": {
      "op": "ISZERO"
    },
    "1183": {
      "op": "PUSH2",
      "value": "0x4A7"
    },
    "1186": {
      "op": "JUMPI"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1189": {
      "op": "DUP1"
    },
    "1190": {
      "op": "REVERT"
    },
    "1191": {
      "op": "JUMPDEST"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1194": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4093,
        4129
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1195": {
      "op": "POP"
    },
    "1196": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1197": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "offset": [
        4021,
        4136
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1198": {
      "fn": "CurveYCRVVoter.balanceOfPool",
      "jump": "o",
      "offset": [
        4021,
        4136
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1199": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1200": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3382,
        3390
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 1,
      "value": "0x1"
    },
    "1202": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3382,
        3390
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3382,
        3390
      ],
      "op": "AND",
      "path": "12"
    },
    "1212": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3368,
        3378
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1213": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3368,
        3390
      ],
      "op": "EQ",
      "path": "12"
    },
    "1214": {
      "branch": 46,
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3368,
        3390
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1215": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3368,
        3418
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4D2"
    },
    "1218": {
      "branch": 46,
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3368,
        3418
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3408,
        3418
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1222": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3408,
        3418
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3408,
        3418
      ],
      "op": "AND",
      "path": "12"
    },
    "1232": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3394,
        3404
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1233": {
      "branch": 47,
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3394,
        3418
      ],
      "op": "EQ",
      "path": "12"
    },
    "1234": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3368,
        3418
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1235": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x511"
    },
    "1238": {
      "branch": 47,
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1239": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1241": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1242": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1251": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1252": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1254": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1256": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1257": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "ADD",
      "path": "12"
    },
    "1258": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1259": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "1261": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1263": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1264": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "ADD",
      "path": "12"
    },
    "1265": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1266": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "1283": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1284": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "ADD",
      "path": "12"
    },
    "1285": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1286": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1287": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1288": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1289": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1290": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1291": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "SUB",
      "path": "12"
    },
    "1292": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "1294": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "ADD",
      "path": "12"
    },
    "1295": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1296": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1297": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3360,
        3434
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1298": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3444,
        3478
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 2,
      "value": "0x54B"
    },
    "1301": {
      "offset": [
        982,
        1024
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "1322": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2"
    },
    "1343": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3476,
        3477
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1345": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3444,
        3478
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1350": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3444,
        3467
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF8D"
    },
    "1353": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3444,
        3478
      ],
      "op": "AND",
      "path": "12"
    },
    "1354": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "jump": "i",
      "offset": [
        3444,
        3478
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1355": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3444,
        3478
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1356": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3488,
        3527
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 3,
      "value": "0x584"
    },
    "1359": {
      "offset": [
        982,
        1024
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "1380": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2"
    },
    "1401": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3520,
        3526
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1402": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3488,
        3527
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1407": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3488,
        3511
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF8D"
    },
    "1410": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3488,
        3527
      ],
      "op": "AND",
      "path": "12"
    },
    "1411": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "jump": "i",
      "offset": [
        3488,
        3527
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1412": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3488,
        3527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1413": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1440": {
      "op": "SHL"
    },
    "1441": {
      "op": "SUB"
    },
    "1442": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3571
      ],
      "op": "AND",
      "path": "12",
      "statement": 4
    },
    "1443": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3571
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4957677C"
    },
    "1448": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3572,
        3578
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1449": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1451": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1452": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1453": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1458": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "AND",
      "path": "12"
    },
    "1459": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "1461": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "SHL",
      "path": "12"
    },
    "1462": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1463": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1464": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1466": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "ADD",
      "path": "12"
    },
    "1467": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1468": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1469": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1470": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1471": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1473": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "ADD",
      "path": "12"
    },
    "1474": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1475": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "POP",
      "path": "12"
    },
    "1476": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "POP",
      "path": "12"
    },
    "1477": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1479": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1481": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1482": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1483": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1484": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "SUB",
      "path": "12"
    },
    "1485": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1486": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1488": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP8",
      "path": "12"
    },
    "1489": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1490": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1491": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1492": {
      "op": "DUP1"
    },
    "1493": {
      "op": "ISZERO"
    },
    "1494": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1497": {
      "op": "JUMPI"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1500": {
      "op": "DUP1"
    },
    "1501": {
      "op": "REVERT"
    },
    "1502": {
      "op": "JUMPDEST"
    },
    "1503": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "POP",
      "path": "12"
    },
    "1504": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "GAS",
      "path": "12"
    },
    "1505": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "CALL",
      "path": "12"
    },
    "1506": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1507": {
      "op": "DUP1"
    },
    "1508": {
      "op": "ISZERO"
    },
    "1509": {
      "op": "PUSH2",
      "value": "0x5F2"
    },
    "1512": {
      "op": "JUMPI"
    },
    "1513": {
      "op": "RETURNDATASIZE"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1516": {
      "op": "DUP1"
    },
    "1517": {
      "op": "RETURNDATACOPY"
    },
    "1518": {
      "op": "RETURNDATASIZE"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1521": {
      "op": "REVERT"
    },
    "1522": {
      "op": "JUMPDEST"
    },
    "1523": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "POP",
      "path": "12"
    },
    "1524": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "POP",
      "path": "12"
    },
    "1525": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "POP",
      "path": "12"
    },
    "1526": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3537,
        3579
      ],
      "op": "POP",
      "path": "12"
    },
    "1527": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "offset": [
        3301,
        3586
      ],
      "op": "POP",
      "path": "12"
    },
    "1528": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "jump": "o",
      "offset": [
        3301,
        3586
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1529": {
      "offset": [
        767,
        849
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1530": {
      "offset": [
        806,
        848
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "1551": {
      "offset": [
        767,
        849
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1552": {
      "fn": "CurveYCRVVoter.increaseAmount",
      "jump": "o",
      "offset": [
        767,
        849
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1553": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1554": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 5,
      "value": "0x40"
    },
    "1556": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1557": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1558": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1559": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1560": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "ADD",
      "path": "12"
    },
    "1561": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1562": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1563": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1564": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE"
    },
    "1566": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1567": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1568": {
      "op": "PUSH14",
      "value": "0x21BAB93B32ACA1A92B2B37BA32B9"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "1585": {
      "op": "SHL"
    },
    "1586": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1588": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1589": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "ADD",
      "path": "12"
    },
    "1590": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1318,
        1341
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1591": {
      "fn": "CurveYCRVVoter.getName",
      "offset": [
        1251,
        1348
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1592": {
      "fn": "CurveYCRVVoter.getName",
      "jump": "o",
      "offset": [
        1251,
        1348
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1593": {
      "offset": [
        679,
        761
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1594": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "1615": {
      "offset": [
        679,
        761
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1616": {
      "fn": "CurveYCRVVoter.getName",
      "jump": "o",
      "offset": [
        679,
        761
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1617": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1618": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2234,
        2242
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 6,
      "value": "0x1"
    },
    "1620": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2234,
        2242
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "op": "SUB"
    },
    "1629": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2234,
        2242
      ],
      "op": "AND",
      "path": "12"
    },
    "1630": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2220,
        2230
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1631": {
      "branch": 48,
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2220,
        2242
      ],
      "op": "EQ",
      "path": "12"
    },
    "1632": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x69E"
    },
    "1635": {
      "branch": 48,
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1636": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1638": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1639": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1648": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1649": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1651": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1653": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1654": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "ADD",
      "path": "12"
    },
    "1655": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1656": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "1658": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1660": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1661": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "ADD",
      "path": "12"
    },
    "1662": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1663": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "1680": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1681": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "ADD",
      "path": "12"
    },
    "1682": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1683": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1684": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1685": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1686": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1687": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1688": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "SUB",
      "path": "12"
    },
    "1689": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "1691": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "ADD",
      "path": "12"
    },
    "1692": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1693": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1694": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2212,
        2258
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1695": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1697": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1698": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1699": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1708": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1709": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2318,
        2322
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "1710": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1712": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1713": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "ADD",
      "path": "12"
    },
    "1714": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1715": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1716": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1717": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2268,
        2284
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1719": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2268,
        2284
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1720": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "1741": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        718,
        760
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1742": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2309
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "1747": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2309
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1748": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1750": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1751": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1752": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "ADD",
      "path": "12"
    },
    "1753": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1754": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1756": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1757": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1758": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1759": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1760": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1761": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1762": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SUB",
      "path": "12"
    },
    "1763": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "ADD",
      "path": "12"
    },
    "1764": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1765": {
      "offset": [
        718,
        760
      ],
      "op": "DUP7",
      "path": "12"
    },
    "1766": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1767": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "1768": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1769": {
      "op": "DUP1"
    },
    "1770": {
      "op": "ISZERO"
    },
    "1771": {
      "op": "PUSH2",
      "value": "0x6F3"
    },
    "1774": {
      "op": "JUMPI"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1777": {
      "op": "DUP1"
    },
    "1778": {
      "op": "REVERT"
    },
    "1779": {
      "op": "JUMPDEST"
    },
    "1780": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "POP",
      "path": "12"
    },
    "1781": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "GAS",
      "path": "12"
    },
    "1782": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "1783": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1784": {
      "op": "DUP1"
    },
    "1785": {
      "op": "ISZERO"
    },
    "1786": {
      "op": "PUSH2",
      "value": "0x707"
    },
    "1789": {
      "op": "JUMPI"
    },
    "1790": {
      "op": "RETURNDATASIZE"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1793": {
      "op": "DUP1"
    },
    "1794": {
      "op": "RETURNDATACOPY"
    },
    "1795": {
      "op": "RETURNDATASIZE"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1798": {
      "op": "REVERT"
    },
    "1799": {
      "op": "JUMPDEST"
    },
    "1800": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "POP",
      "path": "12"
    },
    "1801": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "POP",
      "path": "12"
    },
    "1802": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "POP",
      "path": "12"
    },
    "1803": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "POP",
      "path": "12"
    },
    "1804": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1806": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1807": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1810": {
      "op": "DUP2"
    },
    "1811": {
      "op": "LT"
    },
    "1812": {
      "op": "ISZERO"
    },
    "1813": {
      "op": "PUSH2",
      "value": "0x71D"
    },
    "1816": {
      "op": "JUMPI"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1819": {
      "op": "DUP1"
    },
    "1820": {
      "op": "REVERT"
    },
    "1821": {
      "op": "JUMPDEST"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1824": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2287,
        2324
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1825": {
      "op": "POP"
    },
    "1826": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2338,
        2356
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1827": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2338,
        2356
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1828": {
      "branch": 49,
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2338,
        2356
      ],
      "op": "LT",
      "path": "12"
    },
    "1829": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2334,
        2474
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1830": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2334,
        2474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x756"
    },
    "1833": {
      "branch": 49,
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2334,
        2474
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1834": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2382,
        2418
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 7,
      "value": "0x741"
    },
    "1837": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2396,
        2417
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x73C"
    },
    "1840": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2396,
        2403
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1841": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2408,
        2416
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1842": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2396,
        2417
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1847": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2396,
        2407
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10A5"
    },
    "1850": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2396,
        2417
      ],
      "op": "AND",
      "path": "12"
    },
    "1851": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        2396,
        2417
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1852": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2396,
        2417
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1853": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2382,
        2395
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10EE"
    },
    "1856": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        2382,
        2418
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1857": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2382,
        2418
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1858": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2372,
        2418
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1859": {
      "op": "POP"
    },
    "1860": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2442,
        2463
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 8,
      "value": "0x753"
    },
    "1863": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2372,
        2418
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1864": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2454,
        2462
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1865": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2442,
        2463
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1870": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2442,
        2453
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1168"
    },
    "1873": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2442,
        2463
      ],
      "op": "AND",
      "path": "12"
    },
    "1874": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        2442,
        2463
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1875": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2442,
        2463
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1876": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2432,
        2463
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1877": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2432,
        2463
      ],
      "op": "POP",
      "path": "12"
    },
    "1878": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2334,
        2474
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1879": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2509,
        2517
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 9,
      "value": "0x1"
    },
    "1881": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2509,
        2517
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1882": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2483,
        2527
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x788"
    },
    "1885": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2483,
        2527
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1886": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "1907": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        718,
        760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "op": "SUB"
    },
    "1916": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2509,
        2517
      ],
      "op": "AND",
      "path": "12"
    },
    "1917": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2519,
        2526
      ],
      "op": "DUP5",
      "path": "12"
    },
    "1918": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2483,
        2527
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1923": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2483,
        2508
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11C2"
    },
    "1926": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2483,
        2527
      ],
      "op": "AND",
      "path": "12"
    },
    "1927": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        2483,
        2527
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1928": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2483,
        2527
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1929": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "POP",
      "path": "12"
    },
    "1930": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2158,
        2534
      ],
      "op": "POP",
      "path": "12"
    },
    "1931": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "o",
      "offset": [
        2158,
        2534
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1932": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1354,
        1498
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1933": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1435,
        1445
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 10,
      "value": "0x0"
    },
    "1935": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1435,
        1445
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1435,
        1445
      ],
      "op": "AND",
      "path": "12"
    },
    "1945": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1421,
        1431
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1946": {
      "branch": 50,
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1421,
        1445
      ],
      "op": "EQ",
      "path": "12"
    },
    "1947": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x7D9"
    },
    "1950": {
      "branch": 50,
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1951": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1953": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1954": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1963": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1964": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1966": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1968": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1969": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "ADD",
      "path": "12"
    },
    "1970": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1971": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "1973": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "1975": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1976": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "ADD",
      "path": "12"
    },
    "1977": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1978": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "1995": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1996": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "ADD",
      "path": "12"
    },
    "1997": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1998": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1999": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2000": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2001": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2002": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2003": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "SUB",
      "path": "12"
    },
    "2004": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "2006": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "ADD",
      "path": "12"
    },
    "2007": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2008": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2009": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1413,
        1461
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2010": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1479
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 11,
      "value": "0x1"
    },
    "2012": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2013": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "op": "SUB"
    },
    "2022": {
      "op": "NOT"
    },
    "2023": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "AND",
      "path": "12"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2030": {
      "op": "SHL"
    },
    "2031": {
      "op": "SUB"
    },
    "2032": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2033": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2034": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2035": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "AND",
      "path": "12"
    },
    "2036": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2037": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2038": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2039": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "OR",
      "path": "12"
    },
    "2040": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2041": {
      "fn": "CurveYCRVVoter.setStrategy",
      "offset": [
        1471,
        1491
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2042": {
      "fn": "CurveYCRVVoter.setStrategy",
      "jump": "o",
      "offset": [
        1354,
        1498
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2043": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2044": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1953,
        1961
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 12,
      "value": "0x1"
    },
    "2046": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1953,
        1961
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2047": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1904,
        1919
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2049": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1904,
        1919
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2056": {
      "op": "SHL"
    },
    "2057": {
      "op": "SUB"
    },
    "2058": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1953,
        1961
      ],
      "op": "AND",
      "path": "12"
    },
    "2059": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1939,
        1949
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2060": {
      "branch": 51,
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1939,
        1961
      ],
      "op": "EQ",
      "path": "12"
    },
    "2061": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x84B"
    },
    "2064": {
      "branch": 51,
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2065": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2067": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2068": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2069": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2077": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2078": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2080": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2082": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2083": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "ADD",
      "path": "12"
    },
    "2084": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2085": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "2087": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "2089": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2090": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "ADD",
      "path": "12"
    },
    "2091": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2092": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "2109": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2110": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "ADD",
      "path": "12"
    },
    "2111": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2112": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2113": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2114": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2115": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2116": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2117": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "SUB",
      "path": "12"
    },
    "2118": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "2120": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "ADD",
      "path": "12"
    },
    "2121": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2122": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2123": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1931,
        1977
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2124": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 13,
      "value": "0x40"
    },
    "2126": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2127": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2128": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2137": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2138": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2022,
        2026
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "2139": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2141": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2142": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "ADD",
      "path": "12"
    },
    "2143": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2144": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2145": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "op": "SUB"
    },
    "2154": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2013
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2155": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2013
      ],
      "op": "AND",
      "path": "12"
    },
    "2156": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2157": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2013
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "2162": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2013
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2163": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "2165": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2166": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2167": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "ADD",
      "path": "12"
    },
    "2168": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2169": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2171": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2172": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2173": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2174": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2175": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2176": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SUB",
      "path": "12"
    },
    "2177": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "ADD",
      "path": "12"
    },
    "2178": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2179": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2013
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2180": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2181": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2182": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2183": {
      "op": "DUP1"
    },
    "2184": {
      "op": "ISZERO"
    },
    "2185": {
      "op": "PUSH2",
      "value": "0x891"
    },
    "2188": {
      "op": "JUMPI"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2191": {
      "op": "DUP1"
    },
    "2192": {
      "op": "REVERT"
    },
    "2193": {
      "op": "JUMPDEST"
    },
    "2194": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "POP",
      "path": "12"
    },
    "2195": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "GAS",
      "path": "12"
    },
    "2196": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "2197": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2198": {
      "op": "DUP1"
    },
    "2199": {
      "op": "ISZERO"
    },
    "2200": {
      "op": "PUSH2",
      "value": "0x8A5"
    },
    "2203": {
      "op": "JUMPI"
    },
    "2204": {
      "op": "RETURNDATASIZE"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2207": {
      "op": "DUP1"
    },
    "2208": {
      "op": "RETURNDATACOPY"
    },
    "2209": {
      "op": "RETURNDATASIZE"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2212": {
      "op": "REVERT"
    },
    "2213": {
      "op": "JUMPDEST"
    },
    "2214": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "POP",
      "path": "12"
    },
    "2215": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "POP",
      "path": "12"
    },
    "2216": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "POP",
      "path": "12"
    },
    "2217": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "POP",
      "path": "12"
    },
    "2218": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2220": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2221": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2224": {
      "op": "DUP2"
    },
    "2225": {
      "op": "LT"
    },
    "2226": {
      "op": "ISZERO"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x8BB"
    },
    "2230": {
      "op": "JUMPI"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2233": {
      "op": "DUP1"
    },
    "2234": {
      "op": "REVERT"
    },
    "2235": {
      "op": "JUMPDEST"
    },
    "2236": {
      "op": "POP"
    },
    "2237": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2238": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2058,
        2066
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 14,
      "value": "0x1"
    },
    "2240": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2058,
        2066
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2241": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2242": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2243": {
      "op": "POP"
    },
    "2244": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2076
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8E0"
    },
    "2247": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2076
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "op": "SUB"
    },
    "2256": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2057
      ],
      "op": "DUP5",
      "path": "12"
    },
    "2257": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2057
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2258": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2057
      ],
      "op": "AND",
      "path": "12"
    },
    "2259": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2057
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2260": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2058,
        2066
      ],
      "op": "AND",
      "path": "12"
    },
    "2261": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1997,
        2028
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2262": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2076
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2267": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2057
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11C2"
    },
    "2270": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2076
      ],
      "op": "AND",
      "path": "12"
    },
    "2271": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "i",
      "offset": [
        2038,
        2076
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2272": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        2038,
        2076
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2273": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2274": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2275": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1853,
        2083
      ],
      "op": "POP",
      "path": "12"
    },
    "2276": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "o",
      "offset": [
        1853,
        2083
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2277": {
      "offset": [
        1123,
        1148
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2278": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1123,
        1148
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2280": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1123,
        1148
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2287": {
      "op": "SHL"
    },
    "2288": {
      "op": "SUB"
    },
    "2289": {
      "offset": [
        1123,
        1148
      ],
      "op": "AND",
      "path": "12"
    },
    "2290": {
      "fn": "CurveYCRVVoter.withdraw",
      "offset": [
        1123,
        1148
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2291": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "o",
      "offset": [
        1123,
        1148
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2292": {
      "offset": [
        944,
        1025
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2293": {
      "offset": [
        982,
        1024
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2314": {
      "offset": [
        944,
        1025
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2315": {
      "fn": "CurveYCRVVoter.withdraw",
      "jump": "o",
      "offset": [
        944,
        1025
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2316": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4142,
        4253
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2317": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4184,
        4191
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2319": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4246
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 15,
      "value": "0x92D"
    },
    "2322": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4230,
        4245
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x919"
    },
    "2325": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4230,
        4243
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x428"
    },
    "2328": {
      "fn": "CurveYCRVVoter.balanceOf",
      "jump": "i",
      "offset": [
        4230,
        4245
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2329": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4230,
        4245
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2330": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4225
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x921"
    },
    "2333": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4223
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDAF"
    },
    "2336": {
      "fn": "CurveYCRVVoter.balanceOf",
      "jump": "i",
      "offset": [
        4210,
        4225
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2337": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4225
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2338": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4229
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2339": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4246
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2344": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4229
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1168"
    },
    "2347": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4246
      ],
      "op": "AND",
      "path": "12"
    },
    "2348": {
      "fn": "CurveYCRVVoter.balanceOf",
      "jump": "i",
      "offset": [
        4210,
        4246
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2349": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4210,
        4246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2350": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4203,
        4246
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2351": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4203,
        4246
      ],
      "op": "POP",
      "path": "12"
    },
    "2352": {
      "fn": "CurveYCRVVoter.balanceOf",
      "offset": [
        4142,
        4253
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2353": {
      "fn": "CurveYCRVVoter.balanceOf",
      "jump": "o",
      "offset": [
        4142,
        4253
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2354": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2607,
        2864
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2355": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2697,
        2705
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 16,
      "value": "0x1"
    },
    "2357": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2697,
        2705
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2358": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2648,
        2663
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2360": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2648,
        2663
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "op": "SUB"
    },
    "2369": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2697,
        2705
      ],
      "op": "AND",
      "path": "12"
    },
    "2370": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2683,
        2693
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2371": {
      "branch": 52,
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2683,
        2705
      ],
      "op": "EQ",
      "path": "12"
    },
    "2372": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x982"
    },
    "2375": {
      "branch": 52,
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2376": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2378": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2379": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2380": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2386": {
      "op": "SHL"
    },
    "2387": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2388": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2389": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2391": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2393": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2394": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "ADD",
      "path": "12"
    },
    "2395": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2396": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "2398": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "2400": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2401": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "ADD",
      "path": "12"
    },
    "2402": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2403": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "2417": {
      "op": "SHL"
    },
    "2418": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "2420": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2421": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "ADD",
      "path": "12"
    },
    "2422": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2423": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2424": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2425": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2426": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2427": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2428": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "SUB",
      "path": "12"
    },
    "2429": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "2431": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "ADD",
      "path": "12"
    },
    "2432": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2433": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2434": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2675,
        2721
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2435": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 17,
      "value": "0x98A"
    },
    "2438": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2731,
        2743
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1214"
    },
    "2441": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2442": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2443": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 18,
      "value": "0x40"
    },
    "2445": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2446": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2447": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2454": {
      "op": "SHL"
    },
    "2455": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2456": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2457": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2797,
        2801
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "2458": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2460": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2461": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "ADD",
      "path": "12"
    },
    "2462": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2463": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2464": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2465": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "2486": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        718,
        760
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2487": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2788
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "2492": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2788
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2493": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "2495": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2496": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2497": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "ADD",
      "path": "12"
    },
    "2498": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2499": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2501": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2502": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2503": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2504": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2505": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2506": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SUB",
      "path": "12"
    },
    "2507": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "ADD",
      "path": "12"
    },
    "2508": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2509": {
      "offset": [
        718,
        760
      ],
      "op": "DUP7",
      "path": "12"
    },
    "2510": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2511": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2512": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2513": {
      "op": "DUP1"
    },
    "2514": {
      "op": "ISZERO"
    },
    "2515": {
      "op": "PUSH2",
      "value": "0x9DB"
    },
    "2518": {
      "op": "JUMPI"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2521": {
      "op": "DUP1"
    },
    "2522": {
      "op": "REVERT"
    },
    "2523": {
      "op": "JUMPDEST"
    },
    "2524": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "POP",
      "path": "12"
    },
    "2525": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "GAS",
      "path": "12"
    },
    "2526": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "2527": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2528": {
      "op": "DUP1"
    },
    "2529": {
      "op": "ISZERO"
    },
    "2530": {
      "op": "PUSH2",
      "value": "0x9EF"
    },
    "2533": {
      "op": "JUMPI"
    },
    "2534": {
      "op": "RETURNDATASIZE"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2537": {
      "op": "DUP1"
    },
    "2538": {
      "op": "RETURNDATACOPY"
    },
    "2539": {
      "op": "RETURNDATASIZE"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2542": {
      "op": "REVERT"
    },
    "2543": {
      "op": "JUMPDEST"
    },
    "2544": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "POP",
      "path": "12"
    },
    "2545": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "POP",
      "path": "12"
    },
    "2546": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "POP",
      "path": "12"
    },
    "2547": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "POP",
      "path": "12"
    },
    "2548": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2550": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2551": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2554": {
      "op": "DUP2"
    },
    "2555": {
      "op": "LT"
    },
    "2556": {
      "op": "ISZERO"
    },
    "2557": {
      "op": "PUSH2",
      "value": "0xA05"
    },
    "2560": {
      "op": "JUMPI"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2563": {
      "op": "DUP1"
    },
    "2564": {
      "op": "REVERT"
    },
    "2565": {
      "op": "JUMPDEST"
    },
    "2566": {
      "op": "POP"
    },
    "2567": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2568": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2839,
        2847
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 19,
      "value": "0x1"
    },
    "2570": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2839,
        2847
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2571": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2572": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2573": {
      "op": "POP"
    },
    "2574": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2813,
        2857
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4AC"
    },
    "2577": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2813,
        2857
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2578": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "2599": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        718,
        760
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2606": {
      "op": "SHL"
    },
    "2607": {
      "op": "SUB"
    },
    "2608": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2839,
        2847
      ],
      "op": "AND",
      "path": "12"
    },
    "2609": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2766,
        2803
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2610": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2813,
        2857
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2615": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2813,
        2838
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11C2"
    },
    "2618": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "offset": [
        2813,
        2857
      ],
      "op": "AND",
      "path": "12"
    },
    "2619": {
      "fn": "CurveYCRVVoter.withdrawAll",
      "jump": "i",
      "offset": [
        2813,
        2857
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2620": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3592,
        3750
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2621": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3652,
        3660
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 20,
      "value": "0x1"
    },
    "2623": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3652,
        3660
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2630": {
      "op": "SHL"
    },
    "2631": {
      "op": "SUB"
    },
    "2632": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3652,
        3660
      ],
      "op": "AND",
      "path": "12"
    },
    "2633": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3638,
        3648
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2634": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3638,
        3660
      ],
      "op": "EQ",
      "path": "12"
    },
    "2635": {
      "branch": 53,
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3638,
        3660
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2636": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3638,
        3688
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA5F"
    },
    "2639": {
      "branch": 53,
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3638,
        3688
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3678,
        3688
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2643": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3678,
        3688
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3678,
        3688
      ],
      "op": "AND",
      "path": "12"
    },
    "2653": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3664,
        3674
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2654": {
      "branch": 54,
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3664,
        3688
      ],
      "op": "EQ",
      "path": "12"
    },
    "2655": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3638,
        3688
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2656": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA9E"
    },
    "2659": {
      "branch": 54,
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2660": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2662": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2663": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2670": {
      "op": "SHL"
    },
    "2671": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2672": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2673": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2675": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2677": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2678": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "ADD",
      "path": "12"
    },
    "2679": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2680": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "2682": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "2684": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2685": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "ADD",
      "path": "12"
    },
    "2686": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2687": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2701": {
      "op": "SHL"
    },
    "2702": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "2704": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2705": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "ADD",
      "path": "12"
    },
    "2706": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2707": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2708": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2709": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2710": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2711": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2712": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "SUB",
      "path": "12"
    },
    "2713": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "2715": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "ADD",
      "path": "12"
    },
    "2716": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2717": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2718": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3630,
        3704
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2719": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2746": {
      "op": "SHL"
    },
    "2747": {
      "op": "SUB"
    },
    "2748": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3741
      ],
      "op": "AND",
      "path": "12",
      "statement": 21
    },
    "2749": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3741
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3CCFD60B"
    },
    "2754": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2756": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2757": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2758": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "2763": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "AND",
      "path": "12"
    },
    "2764": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "2766": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "SHL",
      "path": "12"
    },
    "2767": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2768": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2769": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2771": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "ADD",
      "path": "12"
    },
    "2772": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2774": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2776": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2777": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2778": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP4",
      "path": "12"
    },
    "2779": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "SUB",
      "path": "12"
    },
    "2780": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2781": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2783": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP8",
      "path": "12"
    },
    "2784": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2785": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "2786": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2787": {
      "op": "DUP1"
    },
    "2788": {
      "op": "ISZERO"
    },
    "2789": {
      "op": "PUSH2",
      "value": "0xAED"
    },
    "2792": {
      "op": "JUMPI"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2795": {
      "op": "DUP1"
    },
    "2796": {
      "op": "REVERT"
    },
    "2797": {
      "op": "JUMPDEST"
    },
    "2798": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "POP",
      "path": "12"
    },
    "2799": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "GAS",
      "path": "12"
    },
    "2800": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "CALL",
      "path": "12"
    },
    "2801": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2802": {
      "op": "DUP1"
    },
    "2803": {
      "op": "ISZERO"
    },
    "2804": {
      "op": "PUSH2",
      "value": "0xB01"
    },
    "2807": {
      "op": "JUMPI"
    },
    "2808": {
      "op": "RETURNDATASIZE"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2811": {
      "op": "DUP1"
    },
    "2812": {
      "op": "RETURNDATACOPY"
    },
    "2813": {
      "op": "RETURNDATASIZE"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2816": {
      "op": "REVERT"
    },
    "2817": {
      "op": "JUMPDEST"
    },
    "2818": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "POP",
      "path": "12"
    },
    "2819": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "POP",
      "path": "12"
    },
    "2820": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "POP",
      "path": "12"
    },
    "2821": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        3714,
        3743
      ],
      "op": "POP",
      "path": "12"
    },
    "2822": {
      "fn": "CurveYCRVVoter.release",
      "jump": "o",
      "offset": [
        3592,
        3750
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2823": {
      "offset": [
        1154,
        1177
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2824": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        1154,
        1177
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2826": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        1154,
        1177
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2833": {
      "op": "SHL"
    },
    "2834": {
      "op": "SUB"
    },
    "2835": {
      "offset": [
        1154,
        1177
      ],
      "op": "AND",
      "path": "12"
    },
    "2836": {
      "fn": "CurveYCRVVoter.release",
      "offset": [
        1154,
        1177
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2837": {
      "fn": "CurveYCRVVoter.release",
      "jump": "o",
      "offset": [
        1154,
        1177
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2838": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4259,
        4411
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2839": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4344,
        4354
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 22,
      "value": "0x0"
    },
    "2841": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4344,
        4354
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2848": {
      "op": "SHL"
    },
    "2849": {
      "op": "SUB"
    },
    "2850": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4344,
        4354
      ],
      "op": "AND",
      "path": "12"
    },
    "2851": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4330,
        4340
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2852": {
      "branch": 55,
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4330,
        4354
      ],
      "op": "EQ",
      "path": "12"
    },
    "2853": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB63"
    },
    "2856": {
      "branch": 55,
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2857": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2859": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2860": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2867": {
      "op": "SHL"
    },
    "2868": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2869": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2870": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "2872": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2874": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2875": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "ADD",
      "path": "12"
    },
    "2876": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2877": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "2879": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "2881": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2882": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "ADD",
      "path": "12"
    },
    "2883": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2884": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2898": {
      "op": "SHL"
    },
    "2899": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "2901": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2902": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "ADD",
      "path": "12"
    },
    "2903": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2904": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2905": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2906": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2907": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2908": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2909": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "SUB",
      "path": "12"
    },
    "2910": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "2912": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "ADD",
      "path": "12"
    },
    "2913": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2914": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2915": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4322,
        4370
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2916": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4390
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 23,
      "value": "0x0"
    },
    "2918": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2919": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2926": {
      "op": "SHL"
    },
    "2927": {
      "op": "SUB"
    },
    "2928": {
      "op": "NOT"
    },
    "2929": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "AND",
      "path": "12"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2936": {
      "op": "SHL"
    },
    "2937": {
      "op": "SUB"
    },
    "2938": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2939": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2940": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2941": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "AND",
      "path": "12"
    },
    "2942": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2943": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2944": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2945": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "OR",
      "path": "12"
    },
    "2946": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2947": {
      "fn": "CurveYCRVVoter.setGovernance",
      "offset": [
        4380,
        4404
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "2948": {
      "fn": "CurveYCRVVoter.setGovernance",
      "jump": "o",
      "offset": [
        4259,
        4411
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2949": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2950": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3082,
        3090
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 24,
      "value": "0x1"
    },
    "2952": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3082,
        3090
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2959": {
      "op": "SHL"
    },
    "2960": {
      "op": "SUB"
    },
    "2961": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3082,
        3090
      ],
      "op": "AND",
      "path": "12"
    },
    "2962": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3068,
        3078
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2963": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3068,
        3090
      ],
      "op": "EQ",
      "path": "12"
    },
    "2964": {
      "branch": 56,
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3068,
        3090
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2965": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3068,
        3118
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBA8"
    },
    "2968": {
      "branch": 56,
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3068,
        3118
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2969": {
      "op": "POP"
    },
    "2970": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3108,
        3118
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2972": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3108,
        3118
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "op": "SUB"
    },
    "2981": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3108,
        3118
      ],
      "op": "AND",
      "path": "12"
    },
    "2982": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3094,
        3104
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2983": {
      "branch": 57,
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3094,
        3118
      ],
      "op": "EQ",
      "path": "12"
    },
    "2984": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3068,
        3118
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2985": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xBE7"
    },
    "2988": {
      "branch": 57,
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2989": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2991": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2992": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2999": {
      "op": "SHL"
    },
    "3000": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3001": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3002": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3004": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3006": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3007": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "ADD",
      "path": "12"
    },
    "3008": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3009": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "3011": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "3013": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3014": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "ADD",
      "path": "12"
    },
    "3015": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3016": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "3033": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3034": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "ADD",
      "path": "12"
    },
    "3035": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3036": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3037": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3038": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3039": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3040": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3041": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "SUB",
      "path": "12"
    },
    "3042": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "3044": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "ADD",
      "path": "12"
    },
    "3045": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3046": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3047": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3060,
        3134
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3048": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3144,
        3178
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 25,
      "value": "0xC21"
    },
    "3051": {
      "offset": [
        982,
        1024
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "3072": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2"
    },
    "3093": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3176,
        3177
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3095": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3144,
        3178
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3100": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3144,
        3167
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF8D"
    },
    "3103": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3144,
        3178
      ],
      "op": "AND",
      "path": "12"
    },
    "3104": {
      "fn": "CurveYCRVVoter.createLock",
      "jump": "i",
      "offset": [
        3144,
        3178
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3105": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3144,
        3178
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3106": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3188,
        3227
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 26,
      "value": "0xC5A"
    },
    "3109": {
      "offset": [
        982,
        1024
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "3130": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2"
    },
    "3151": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3220,
        3226
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3152": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3188,
        3227
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3157": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3188,
        3211
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF8D"
    },
    "3160": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3188,
        3227
      ],
      "op": "AND",
      "path": "12"
    },
    "3161": {
      "fn": "CurveYCRVVoter.createLock",
      "jump": "i",
      "offset": [
        3188,
        3227
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3162": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3188,
        3227
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3163": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 27,
      "value": "0x40"
    },
    "3165": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3166": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3167": {
      "op": "PUSH4",
      "value": "0x65FC3873"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3174": {
      "op": "SHL"
    },
    "3175": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3176": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3177": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3179": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3180": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "ADD",
      "path": "12"
    },
    "3181": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP5",
      "path": "12"
    },
    "3182": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3183": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3184": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "3186": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3187": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "ADD",
      "path": "12"
    },
    "3188": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3189": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3190": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3191": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3192": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3193": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2"
    },
    "3214": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        1073,
        1115
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3215": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3267
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x65FC3873"
    },
    "3220": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3267
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3221": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "3223": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3224": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3225": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "ADD",
      "path": "12"
    },
    "3226": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3229": {
      "op": "SWAP3"
    },
    "3230": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3231": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3232": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3233": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3234": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "SUB",
      "path": "12"
    },
    "3235": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "ADD",
      "path": "12"
    },
    "3236": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3237": {
      "op": "DUP4"
    },
    "3238": {
      "offset": [
        1073,
        1115
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3239": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3240": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3241": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3242": {
      "op": "DUP1"
    },
    "3243": {
      "op": "ISZERO"
    },
    "3244": {
      "op": "PUSH2",
      "value": "0xCB4"
    },
    "3247": {
      "op": "JUMPI"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3250": {
      "op": "DUP1"
    },
    "3251": {
      "op": "REVERT"
    },
    "3252": {
      "op": "JUMPDEST"
    },
    "3253": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "POP",
      "path": "12"
    },
    "3254": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "GAS",
      "path": "12"
    },
    "3255": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "CALL",
      "path": "12"
    },
    "3256": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3257": {
      "op": "DUP1"
    },
    "3258": {
      "op": "ISZERO"
    },
    "3259": {
      "op": "PUSH2",
      "value": "0xCC8"
    },
    "3262": {
      "op": "JUMPI"
    },
    "3263": {
      "op": "RETURNDATASIZE"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3266": {
      "op": "DUP1"
    },
    "3267": {
      "op": "RETURNDATACOPY"
    },
    "3268": {
      "op": "RETURNDATASIZE"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3271": {
      "op": "REVERT"
    },
    "3272": {
      "op": "JUMPDEST"
    },
    "3273": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "POP",
      "path": "12"
    },
    "3274": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "POP",
      "path": "12"
    },
    "3275": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "POP",
      "path": "12"
    },
    "3276": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        3237,
        3288
      ],
      "op": "POP",
      "path": "12"
    },
    "3277": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "POP",
      "path": "12"
    },
    "3278": {
      "fn": "CurveYCRVVoter.createLock",
      "offset": [
        2984,
        3295
      ],
      "op": "POP",
      "path": "12"
    },
    "3279": {
      "fn": "CurveYCRVVoter.createLock",
      "jump": "o",
      "offset": [
        2984,
        3295
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3280": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3281": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4582,
        4590
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 28,
      "value": "0x1"
    },
    "3283": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4582,
        4590
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3284": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4530,
        4534
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3286": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4530,
        4534
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3287": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4536,
        4548
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "3289": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4536,
        4548
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3296": {
      "op": "SHL"
    },
    "3297": {
      "op": "SUB"
    },
    "3298": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4582,
        4590
      ],
      "op": "AND",
      "path": "12"
    },
    "3299": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4568,
        4578
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3300": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4568,
        4590
      ],
      "op": "EQ",
      "path": "12"
    },
    "3301": {
      "branch": 58,
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4568,
        4590
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3302": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4568,
        4618
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCF9"
    },
    "3305": {
      "branch": 58,
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4568,
        4618
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3306": {
      "op": "POP"
    },
    "3307": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4608,
        4618
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3309": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4608,
        4618
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3316": {
      "op": "SHL"
    },
    "3317": {
      "op": "SUB"
    },
    "3318": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4608,
        4618
      ],
      "op": "AND",
      "path": "12"
    },
    "3319": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4594,
        4604
      ],
      "op": "CALLER",
      "path": "12"
    },
    "3320": {
      "branch": 59,
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4594,
        4618
      ],
      "op": "EQ",
      "path": "12"
    },
    "3321": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4568,
        4618
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3322": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xD38"
    },
    "3325": {
      "branch": 59,
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3326": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3328": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3329": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3338": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3339": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3341": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3343": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3344": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "ADD",
      "path": "12"
    },
    "3345": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3346": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xB"
    },
    "3348": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "3350": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3351": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "ADD",
      "path": "12"
    },
    "3352": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3353": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3367": {
      "op": "SHL"
    },
    "3368": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x44"
    },
    "3370": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3371": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "ADD",
      "path": "12"
    },
    "3372": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3373": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3374": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3375": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3376": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3377": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3378": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "SUB",
      "path": "12"
    },
    "3379": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x64"
    },
    "3381": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "ADD",
      "path": "12"
    },
    "3382": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3383": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3384": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4560,
        4634
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3385": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4645,
        4657
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3387": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4659,
        4678
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "3389": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4684
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3396": {
      "op": "SHL"
    },
    "3397": {
      "op": "SUB"
    },
    "3398": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4689
      ],
      "op": "AND",
      "path": "12"
    },
    "3399": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4696,
        4701
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3400": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4703,
        4707
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3401": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4703,
        4707
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3402": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3404": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3405": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3406": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3407": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3408": {
      "op": "DUP1"
    },
    "3409": {
      "op": "DUP3"
    },
    "3410": {
      "op": "DUP5"
    },
    "3411": {
      "op": "CALLDATACOPY"
    },
    "3412": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3414": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3415": {
      "op": "SWAP3"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "op": "SWAP5"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3421": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3424": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3425": {
      "op": "POP"
    },
    "3426": {
      "op": "POP"
    },
    "3427": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3428": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3429": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "SUB",
      "path": "12"
    },
    "3430": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3431": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "DUP6",
      "path": "12"
    },
    "3432": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3433": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "GAS",
      "path": "12"
    },
    "3434": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "CALL",
      "path": "12"
    },
    "3435": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3436": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "POP",
      "path": "12"
    },
    "3437": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "POP",
      "path": "12"
    },
    "3438": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "POP",
      "path": "12"
    },
    "3439": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4682,
        4708
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3440": {
      "op": "DUP1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3443": {
      "op": "DUP2"
    },
    "3444": {
      "op": "EQ"
    },
    "3445": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "3448": {
      "op": "JUMPI"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3451": {
      "op": "MLOAD"
    },
    "3452": {
      "op": "SWAP2"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3456": {
      "op": "NOT"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3459": {
      "op": "RETURNDATASIZE"
    },
    "3460": {
      "op": "ADD"
    },
    "3461": {
      "op": "AND"
    },
    "3462": {
      "op": "DUP3"
    },
    "3463": {
      "op": "ADD"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3466": {
      "op": "MSTORE"
    },
    "3467": {
      "op": "RETURNDATASIZE"
    },
    "3468": {
      "op": "DUP3"
    },
    "3469": {
      "op": "MSTORE"
    },
    "3470": {
      "op": "RETURNDATASIZE"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3475": {
      "op": "DUP5"
    },
    "3476": {
      "op": "ADD"
    },
    "3477": {
      "op": "RETURNDATACOPY"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD9F"
    },
    "3481": {
      "op": "JUMP"
    },
    "3482": {
      "op": "JUMPDEST"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3485": {
      "op": "SWAP2"
    },
    "3486": {
      "op": "POP"
    },
    "3487": {
      "op": "JUMPDEST"
    },
    "3488": {
      "op": "POP"
    },
    "3489": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4644,
        4708
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3490": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4644,
        4708
      ],
      "op": "SWAP10",
      "path": "12"
    },
    "3491": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4644,
        4708
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3492": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4644,
        4708
      ],
      "op": "SWAP9",
      "path": "12"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "fn": "CurveYCRVVoter.execute",
      "offset": [
        4417,
        4750
      ],
      "op": "SWAP7",
      "path": "12"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "op": "POP"
    },
    "3497": {
      "op": "POP"
    },
    "3498": {
      "op": "POP"
    },
    "3499": {
      "op": "POP"
    },
    "3500": {
      "op": "POP"
    },
    "3501": {
      "op": "POP"
    },
    "3502": {
      "fn": "CurveYCRVVoter.execute",
      "jump": "o",
      "offset": [
        4417,
        4750
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3503": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3899,
        4015
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3504": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 29,
      "value": "0x40"
    },
    "3506": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3507": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3508": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3515": {
      "op": "SHL"
    },
    "3516": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3517": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3518": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        4002,
        4006
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "3519": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3521": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3522": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "ADD",
      "path": "12"
    },
    "3523": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3524": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3525": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3526": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3945,
        3952
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3528": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3945,
        3952
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3529": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "3550": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        718,
        760
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3551": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        3993
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "3556": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        3993
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3557": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "3559": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3560": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3561": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "ADD",
      "path": "12"
    },
    "3562": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3563": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3565": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3566": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3567": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3568": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3569": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3570": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3571": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "SUB",
      "path": "12"
    },
    "3572": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "ADD",
      "path": "12"
    },
    "3573": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3574": {
      "offset": [
        718,
        760
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3575": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3576": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3577": {
      "fn": "CurveYCRVVoter.balanceOfWant",
      "offset": [
        3971,
        4008
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3578": {
      "op": "DUP1"
    },
    "3579": {
      "op": "ISZERO"
    },
    "3580": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "3583": {
      "op": "JUMPI"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3586": {
      "op": "DUP1"
    },
    "3587": {
      "op": "REVERT"
    },
    "3588": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1504,
        1773
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3589": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3591": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3592": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3593": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3602": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3603": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1587,
        1591
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "3604": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3606": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3607": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "ADD",
      "path": "12"
    },
    "3608": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3609": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3610": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3611": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1540,
        1553
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3613": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1540,
        1553
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3614": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "3635": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        718,
        760
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3636": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1578
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "3641": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1578
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3642": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "3644": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3645": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3646": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "ADD",
      "path": "12"
    },
    "3647": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3648": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3650": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "3651": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3652": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3653": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3654": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3655": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3656": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SUB",
      "path": "12"
    },
    "3657": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "ADD",
      "path": "12"
    },
    "3658": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3659": {
      "offset": [
        718,
        760
      ],
      "op": "DUP7",
      "path": "12"
    },
    "3660": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3661": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3662": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3663": {
      "op": "DUP1"
    },
    "3664": {
      "op": "ISZERO"
    },
    "3665": {
      "op": "PUSH2",
      "value": "0xE59"
    },
    "3668": {
      "op": "JUMPI"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3671": {
      "op": "DUP1"
    },
    "3672": {
      "op": "REVERT"
    },
    "3673": {
      "op": "JUMPDEST"
    },
    "3674": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "POP",
      "path": "12"
    },
    "3675": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "GAS",
      "path": "12"
    },
    "3676": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "3677": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3678": {
      "op": "DUP1"
    },
    "3679": {
      "op": "ISZERO"
    },
    "3680": {
      "op": "PUSH2",
      "value": "0xE6D"
    },
    "3683": {
      "op": "JUMPI"
    },
    "3684": {
      "op": "RETURNDATASIZE"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3687": {
      "op": "DUP1"
    },
    "3688": {
      "op": "RETURNDATACOPY"
    },
    "3689": {
      "op": "RETURNDATASIZE"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3692": {
      "op": "REVERT"
    },
    "3693": {
      "op": "JUMPDEST"
    },
    "3694": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "POP",
      "path": "12"
    },
    "3695": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "POP",
      "path": "12"
    },
    "3696": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "POP",
      "path": "12"
    },
    "3697": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "POP",
      "path": "12"
    },
    "3698": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3700": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3701": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3704": {
      "op": "DUP2"
    },
    "3705": {
      "op": "LT"
    },
    "3706": {
      "op": "ISZERO"
    },
    "3707": {
      "op": "PUSH2",
      "value": "0xE83"
    },
    "3710": {
      "op": "JUMPI"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3713": {
      "op": "DUP1"
    },
    "3714": {
      "op": "REVERT"
    },
    "3715": {
      "op": "JUMPDEST"
    },
    "3716": {
      "op": "POP"
    },
    "3717": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3718": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1556,
        1593
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3719": {
      "op": "POP"
    },
    "3720": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1607,
        1616
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3721": {
      "branch": 60,
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1607,
        1616
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3722": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1603,
        1767
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF5A"
    },
    "3725": {
      "branch": 60,
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1603,
        1767
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3726": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1632,
        1665
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 30,
      "value": "0xEC7"
    },
    "3729": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "3750": {
      "offset": [
        806,
        848
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "3771": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1663,
        1664
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3773": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1632,
        1665
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3778": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1632,
        1656
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF8D"
    },
    "3781": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1632,
        1665
      ],
      "op": "AND",
      "path": "12"
    },
    "3782": {
      "fn": "CurveYCRVVoter.deposit",
      "jump": "i",
      "offset": [
        1632,
        1665
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3783": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1632,
        1665
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3784": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1679,
        1716
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 31,
      "value": "0xF00"
    },
    "3787": {
      "offset": [
        718,
        760
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xDF5E0E81DFF6FAF3A7E52BA697820C5E32D806A8"
    },
    "3808": {
      "offset": [
        806,
        848
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "3829": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1710,
        1715
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3830": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1679,
        1716
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3835": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1679,
        1703
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF8D"
    },
    "3838": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1679,
        1716
      ],
      "op": "AND",
      "path": "12"
    },
    "3839": {
      "fn": "CurveYCRVVoter.deposit",
      "jump": "i",
      "offset": [
        1679,
        1716
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3840": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1679,
        1716
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3841": {
      "offset": [
        806,
        848
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3868": {
      "op": "SHL"
    },
    "3869": {
      "op": "SUB"
    },
    "3870": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1749
      ],
      "op": "AND",
      "path": "12",
      "statement": 32
    },
    "3871": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1749
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB6B55F25"
    },
    "3876": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1750,
        1755
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3877": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3879": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3880": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3881": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "3886": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "AND",
      "path": "12"
    },
    "3887": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "3889": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "SHL",
      "path": "12"
    },
    "3890": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3891": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3892": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3894": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "ADD",
      "path": "12"
    },
    "3895": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3896": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP3",
      "path": "12"
    },
    "3897": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3898": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3899": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "3901": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "ADD",
      "path": "12"
    },
    "3902": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "3903": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "POP",
      "path": "12"
    },
    "3904": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "POP",
      "path": "12"
    },
    "3905": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3907": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3909": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3910": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3911": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP4",
      "path": "12"
    },
    "3912": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "SUB",
      "path": "12"
    },
    "3913": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3914": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3916": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP8",
      "path": "12"
    },
    "3917": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "DUP1",
      "path": "12"
    },
    "3918": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3919": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1730,
        1756
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "3920": {
      "op": "DUP1"
    },
    "3921": {
      "op": "ISZERO"
    },
    "3922": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "3925": {
      "op": "JUMPI"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3928": {
      "op": "DUP1"
    },
    "3929": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1603,
        1767
      ],
      "op": "REVERT",
      "path": "12"
    },
    "3930": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1603,
        1767
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3931": {
      "fn": "CurveYCRVVoter.deposit",
      "offset": [
        1504,
        1773
      ],
      "op": "POP",
      "path": "12"
    },
    "3932": {
      "fn": "CurveYCRVVoter.deposit",
      "jump": "o",
      "offset": [
        1504,
        1773
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3933": {
      "offset": [
        855,
        938
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3934": {
      "offset": [
        895,
        937
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xD061D61A4D941C39E5453435B6345DC261C2FCE0"
    },
    "3955": {
      "offset": [
        855,
        938
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3956": {
      "fn": "CurveYCRVVoter.deposit",
      "jump": "o",
      "offset": [
        855,
        938
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3957": {
      "offset": [
        1032,
        1116
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3958": {
      "offset": [
        1073,
        1115
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0x5F3B5DFEB7B28CDBD7FABA78963EE202A494E2A2"
    },
    "3979": {
      "offset": [
        1032,
        1116
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3980": {
      "fn": "CurveYCRVVoter.deposit",
      "jump": "o",
      "offset": [
        1032,
        1116
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3981": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3982": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 33
    },
    "3983": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3984": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3985": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1013"
    },
    "3988": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3989": {
      "op": "POP"
    },
    "3990": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3992": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3993": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3994": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4001": {
      "op": "SHL"
    },
    "4002": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4003": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4004": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "4005": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4007": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4008": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "4009": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4016": {
      "op": "SHL"
    },
    "4017": {
      "op": "SUB"
    },
    "4018": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4019": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4020": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "4021": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4023": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4024": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "4025": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4026": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4027": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4028": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4029": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4030": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "AND",
      "path": "6"
    },
    "4031": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4032": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "4037": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4038": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "4040": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4041": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4042": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "4043": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4044": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4046": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4047": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4048": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4049": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4050": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4051": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4052": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "4053": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "4054": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4055": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4056": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4057": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4058": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4059": {
      "op": "DUP1"
    },
    "4060": {
      "op": "ISZERO"
    },
    "4061": {
      "op": "PUSH2",
      "value": "0xFE5"
    },
    "4064": {
      "op": "JUMPI"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4067": {
      "op": "DUP1"
    },
    "4068": {
      "op": "REVERT"
    },
    "4069": {
      "op": "JUMPDEST"
    },
    "4070": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "4071": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "GAS",
      "path": "6"
    },
    "4072": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "4073": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4074": {
      "op": "DUP1"
    },
    "4075": {
      "op": "ISZERO"
    },
    "4076": {
      "op": "PUSH2",
      "value": "0xFF9"
    },
    "4079": {
      "op": "JUMPI"
    },
    "4080": {
      "op": "RETURNDATASIZE"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4083": {
      "op": "DUP1"
    },
    "4084": {
      "op": "RETURNDATACOPY"
    },
    "4085": {
      "op": "RETURNDATASIZE"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4088": {
      "op": "REVERT"
    },
    "4089": {
      "op": "JUMPDEST"
    },
    "4090": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "4091": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "4092": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "4093": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "4094": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4096": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4097": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4100": {
      "op": "DUP2"
    },
    "4101": {
      "op": "LT"
    },
    "4102": {
      "op": "ISZERO"
    },
    "4103": {
      "op": "PUSH2",
      "value": "0x100F"
    },
    "4106": {
      "op": "JUMPI"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4109": {
      "op": "DUP1"
    },
    "4110": {
      "op": "REVERT"
    },
    "4111": {
      "op": "JUMPDEST"
    },
    "4112": {
      "op": "POP"
    },
    "4113": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4114": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4115": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4116": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x104E"
    },
    "4119": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4120": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4122": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4131": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4132": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4134": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "4135": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4136": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4137": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4139": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "4140": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4141": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4142": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "4143": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4144": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4145": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "4147": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4148": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4149": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4151": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "4152": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4153": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x158D"
    },
    "4156": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "4158": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4159": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "4160": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4162": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "4163": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4164": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "4165": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "4166": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4168": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4169": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4170": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4171": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "4172": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4173": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4174": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4175": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 34,
      "value": "0x40"
    },
    "4177": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4178": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4185": {
      "op": "SHL"
    },
    "4186": {
      "op": "SUB"
    },
    "4187": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4188": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "AND",
      "path": "6"
    },
    "4189": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4191": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4192": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "4193": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4194": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "4196": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4197": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4198": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "4199": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4200": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4201": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4202": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4203": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4204": {
      "op": "DUP1"
    },
    "4205": {
      "op": "DUP4"
    },
    "4206": {
      "op": "SUB"
    },
    "4207": {
      "op": "SWAP1"
    },
    "4208": {
      "op": "SWAP2"
    },
    "4209": {
      "op": "ADD"
    },
    "4210": {
      "op": "DUP2"
    },
    "4211": {
      "op": "MSTORE"
    },
    "4212": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "4214": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4215": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4216": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "4217": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4218": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4219": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4220": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4222": {
      "op": "DUP2"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "op": "DUP1"
    },
    "4225": {
      "op": "MLOAD"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4232": {
      "op": "SHL"
    },
    "4233": {
      "op": "SUB"
    },
    "4234": {
      "op": "AND"
    },
    "4235": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4242": {
      "op": "SHL"
    },
    "4243": {
      "op": "OR"
    },
    "4244": {
      "op": "SWAP1"
    },
    "4245": {
      "op": "MSTORE"
    },
    "4246": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10A0"
    },
    "4249": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4250": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4251": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4252": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12D7"
    },
    "4255": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4256": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4257": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "POP",
      "path": "6"
    },
    "4258": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "POP",
      "path": "6"
    },
    "4259": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "POP",
      "path": "6"
    },
    "4260": {
      "fn": "SafeERC20.safeApprove",
      "jump": "o",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4261": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4262": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4264": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 35,
      "value": "0x10E7"
    },
    "4267": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4268": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4269": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4271": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4272": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4273": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4275": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "4276": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4278": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4279": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4280": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "4282": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4283": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4284": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4286": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "4287": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "4320": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4321": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4322": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "4323": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x148F"
    },
    "4326": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4327": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4328": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "4329": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4330": {
      "op": "POP"
    },
    "4331": {
      "op": "POP"
    },
    "4332": {
      "op": "POP"
    },
    "4333": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4334": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3756,
        3893
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4335": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3814,
        3821
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4337": {
      "offset": [
        806,
        848
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4364": {
      "op": "SHL"
    },
    "4365": {
      "op": "SUB"
    },
    "4366": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3853
      ],
      "op": "AND",
      "path": "12",
      "statement": 36
    },
    "4367": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3853
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2E1A7D4D"
    },
    "4372": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3854,
        3861
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4373": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4375": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4376": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4377": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "4382": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "AND",
      "path": "12"
    },
    "4383": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "4385": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "SHL",
      "path": "12"
    },
    "4386": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4387": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4388": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4390": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "ADD",
      "path": "12"
    },
    "4391": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4392": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4393": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4394": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4395": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4397": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "ADD",
      "path": "12"
    },
    "4398": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4399": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "POP",
      "path": "12"
    },
    "4400": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "POP",
      "path": "12"
    },
    "4401": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4403": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4405": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4406": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4407": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4408": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "SUB",
      "path": "12"
    },
    "4409": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4410": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4412": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4413": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4414": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4415": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4416": {
      "op": "DUP1"
    },
    "4417": {
      "op": "ISZERO"
    },
    "4418": {
      "op": "PUSH2",
      "value": "0x114A"
    },
    "4421": {
      "op": "JUMPI"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4424": {
      "op": "DUP1"
    },
    "4425": {
      "op": "REVERT"
    },
    "4426": {
      "op": "JUMPDEST"
    },
    "4427": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "POP",
      "path": "12"
    },
    "4428": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "GAS",
      "path": "12"
    },
    "4429": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "CALL",
      "path": "12"
    },
    "4430": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3833,
        3862
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4431": {
      "op": "DUP1"
    },
    "4432": {
      "op": "ISZERO"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0x115E"
    },
    "4436": {
      "op": "JUMPI"
    },
    "4437": {
      "op": "RETURNDATASIZE"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4440": {
      "op": "DUP1"
    },
    "4441": {
      "op": "RETURNDATACOPY"
    },
    "4442": {
      "op": "RETURNDATASIZE"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4445": {
      "op": "REVERT"
    },
    "4446": {
      "op": "JUMPDEST"
    },
    "4447": {
      "op": "POP"
    },
    "4448": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3879,
        3886
      ],
      "op": "SWAP4",
      "path": "12",
      "statement": 37
    },
    "4449": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3879,
        3886
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "4450": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "offset": [
        3756,
        3893
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "op": "POP"
    },
    "4453": {
      "op": "POP"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "fn": "CurveYCRVVoter._withdrawSome",
      "jump": "o",
      "offset": [
        3756,
        3893
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4456": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4457": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4459": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4460": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4461": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "4462": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 38
    },
    "4463": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4464": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "4465": {
      "branch": 65,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4466": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10E7"
    },
    "4469": {
      "branch": 65,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4470": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4472": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4473": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4480": {
      "op": "SHL"
    },
    "4481": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4482": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4483": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4485": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4487": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4488": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "4489": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4490": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "4492": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4494": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4495": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "4496": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4497": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "4530": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "4532": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4533": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "4534": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4535": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4536": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4537": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4538": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4539": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4540": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "4541": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "4543": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "4544": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4545": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4546": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4547": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 39,
      "value": "0x40"
    },
    "4549": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4550": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4557": {
      "op": "SHL"
    },
    "4558": {
      "op": "SUB"
    },
    "4559": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4560": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "4561": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4563": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4564": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "4565": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4566": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "4568": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4569": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4570": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "4571": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4572": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4573": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4574": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4575": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4576": {
      "op": "DUP1"
    },
    "4577": {
      "op": "DUP4"
    },
    "4578": {
      "op": "SUB"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "op": "SWAP2"
    },
    "4581": {
      "op": "ADD"
    },
    "4582": {
      "op": "DUP2"
    },
    "4583": {
      "op": "MSTORE"
    },
    "4584": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "4586": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4587": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4588": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "4589": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4590": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4591": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4592": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4594": {
      "op": "DUP2"
    },
    "4595": {
      "op": "ADD"
    },
    "4596": {
      "op": "DUP1"
    },
    "4597": {
      "op": "MLOAD"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4604": {
      "op": "SHL"
    },
    "4605": {
      "op": "SUB"
    },
    "4606": {
      "op": "AND"
    },
    "4607": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4614": {
      "op": "SHL"
    },
    "4615": {
      "op": "OR"
    },
    "4616": {
      "op": "SWAP1"
    },
    "4617": {
      "op": "MSTORE"
    },
    "4618": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10A0"
    },
    "4621": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4622": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4623": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4624": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12D7"
    },
    "4627": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4628": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2870,
        2978
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4629": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 40,
      "value": "0x40"
    },
    "4631": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4632": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4633": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4640": {
      "op": "SHL"
    },
    "4641": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4642": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4643": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2964,
        2968
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "4644": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4646": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4647": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "ADD",
      "path": "12"
    },
    "4648": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4649": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4650": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4651": {
      "offset": [
        806,
        848
      ],
      "op": "PUSH20",
      "path": "12",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "4672": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        806,
        848
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4673": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2933
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x2E1A7D4D"
    },
    "4678": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2933
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4679": {
      "offset": [
        806,
        848
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4680": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        806,
        848
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4681": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2955
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70A08231"
    },
    "4686": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2955
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4687": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "4689": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4690": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4691": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "ADD",
      "path": "12"
    },
    "4692": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4693": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4695": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4696": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4697": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4698": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4699": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4700": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "SUB",
      "path": "12"
    },
    "4701": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "ADD",
      "path": "12"
    },
    "4702": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4703": {
      "offset": [
        806,
        848
      ],
      "op": "DUP7",
      "path": "12"
    },
    "4704": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4705": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4706": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4707": {
      "op": "DUP1"
    },
    "4708": {
      "op": "ISZERO"
    },
    "4709": {
      "op": "PUSH2",
      "value": "0x126D"
    },
    "4712": {
      "op": "JUMPI"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4715": {
      "op": "DUP1"
    },
    "4716": {
      "op": "REVERT"
    },
    "4717": {
      "op": "JUMPDEST"
    },
    "4718": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "POP",
      "path": "12"
    },
    "4719": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "GAS",
      "path": "12"
    },
    "4720": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "STATICCALL",
      "path": "12"
    },
    "4721": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4722": {
      "op": "DUP1"
    },
    "4723": {
      "op": "ISZERO"
    },
    "4724": {
      "op": "PUSH2",
      "value": "0x1281"
    },
    "4727": {
      "op": "JUMPI"
    },
    "4728": {
      "op": "RETURNDATASIZE"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4731": {
      "op": "DUP1"
    },
    "4732": {
      "op": "RETURNDATACOPY"
    },
    "4733": {
      "op": "RETURNDATASIZE"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4736": {
      "op": "REVERT"
    },
    "4737": {
      "op": "JUMPDEST"
    },
    "4738": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "POP",
      "path": "12"
    },
    "4739": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "POP",
      "path": "12"
    },
    "4740": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "POP",
      "path": "12"
    },
    "4741": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "POP",
      "path": "12"
    },
    "4742": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4744": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4745": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4748": {
      "op": "DUP2"
    },
    "4749": {
      "op": "LT"
    },
    "4750": {
      "op": "ISZERO"
    },
    "4751": {
      "op": "PUSH2",
      "value": "0x1297"
    },
    "4754": {
      "op": "JUMPI"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4757": {
      "op": "DUP1"
    },
    "4758": {
      "op": "REVERT"
    },
    "4759": {
      "op": "JUMPDEST"
    },
    "4760": {
      "op": "POP"
    },
    "4761": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2934,
        2970
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4762": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4764": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4765": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4772": {
      "op": "SHL"
    },
    "4773": {
      "op": "SUB"
    },
    "4774": {
      "op": "NOT"
    },
    "4775": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "4777": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP6",
      "path": "12"
    },
    "4778": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4779": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SHL",
      "path": "12"
    },
    "4780": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "AND",
      "path": "12"
    },
    "4781": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4782": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4783": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4785": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4786": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "ADD",
      "path": "12"
    },
    "4787": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4788": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4789": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4790": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4791": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4792": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x24"
    },
    "4794": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4795": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4796": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "ADD",
      "path": "12"
    },
    "4797": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4800": {
      "op": "SWAP3"
    },
    "4801": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4802": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4803": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4804": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4805": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "SUB",
      "path": "12"
    },
    "4806": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "ADD",
      "path": "12"
    },
    "4807": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4808": {
      "op": "DUP4"
    },
    "4809": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP8",
      "path": "12"
    },
    "4810": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4811": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "4812": {
      "fn": "CurveYCRVVoter._withdrawAll",
      "offset": [
        2913,
        2971
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "4813": {
      "op": "DUP1"
    },
    "4814": {
      "op": "ISZERO"
    },
    "4815": {
      "op": "PUSH2",
      "value": "0xAED"
    },
    "4818": {
      "op": "JUMPI"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4821": {
      "op": "DUP1"
    },
    "4822": {
      "op": "REVERT"
    },
    "4823": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4824": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 41,
      "value": "0x12E9"
    },
    "4827": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4834": {
      "op": "SHL"
    },
    "4835": {
      "op": "SUB"
    },
    "4836": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "4837": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1526"
    },
    "4840": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4841": {
      "branch": 61,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4842": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133A"
    },
    "4845": {
      "branch": 61,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4846": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4848": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4849": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4856": {
      "op": "SHL"
    },
    "4857": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4858": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4859": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4861": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4863": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4864": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "4865": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4866": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4868": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4870": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4871": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "4872": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4873": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "4906": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "4908": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4909": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "4910": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4911": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4912": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4913": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4914": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4915": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4916": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "4917": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "4919": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "4920": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4921": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4922": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4923": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4925": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4927": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "op": "SUB"
    },
    "4936": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "4937": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4938": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4940": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4941": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4942": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4943": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4944": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4945": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4946": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4948": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "4949": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4950": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4951": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4952": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4953": {
      "op": "JUMPDEST"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4956": {
      "op": "DUP4"
    },
    "4957": {
      "op": "LT"
    },
    "4958": {
      "op": "PUSH2",
      "value": "0x1378"
    },
    "4961": {
      "op": "JUMPI"
    },
    "4962": {
      "op": "DUP1"
    },
    "4963": {
      "op": "MLOAD"
    },
    "4964": {
      "op": "DUP3"
    },
    "4965": {
      "op": "MSTORE"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4968": {
      "op": "NOT"
    },
    "4969": {
      "op": "SWAP1"
    },
    "4970": {
      "op": "SWAP3"
    },
    "4971": {
      "op": "ADD"
    },
    "4972": {
      "op": "SWAP2"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4975": {
      "op": "SWAP2"
    },
    "4976": {
      "op": "DUP3"
    },
    "4977": {
      "op": "ADD"
    },
    "4978": {
      "op": "SWAP2"
    },
    "4979": {
      "op": "ADD"
    },
    "4980": {
      "op": "PUSH2",
      "value": "0x1359"
    },
    "4983": {
      "op": "JUMP"
    },
    "4984": {
      "op": "JUMPDEST"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4987": {
      "op": "DUP4"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4990": {
      "op": "SUB"
    },
    "4991": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4994": {
      "op": "EXP"
    },
    "4995": {
      "op": "SUB"
    },
    "4996": {
      "op": "DUP1"
    },
    "4997": {
      "op": "NOT"
    },
    "4998": {
      "op": "DUP3"
    },
    "4999": {
      "op": "MLOAD"
    },
    "5000": {
      "op": "AND"
    },
    "5001": {
      "op": "DUP2"
    },
    "5002": {
      "op": "DUP5"
    },
    "5003": {
      "op": "MLOAD"
    },
    "5004": {
      "op": "AND"
    },
    "5005": {
      "op": "DUP1"
    },
    "5006": {
      "op": "DUP3"
    },
    "5007": {
      "op": "OR"
    },
    "5008": {
      "op": "DUP6"
    },
    "5009": {
      "op": "MSTORE"
    },
    "5010": {
      "op": "POP"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "op": "POP"
    },
    "5013": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5014": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5015": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5016": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5017": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5018": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "5019": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5020": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5021": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5022": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5024": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5026": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5027": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5028": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5029": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "5030": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5031": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5033": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5034": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "5035": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "5036": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5037": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5038": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5039": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "5040": {
      "op": "DUP1"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5043": {
      "op": "DUP2"
    },
    "5044": {
      "op": "EQ"
    },
    "5045": {
      "op": "PUSH2",
      "value": "0x13DA"
    },
    "5048": {
      "op": "JUMPI"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5051": {
      "op": "MLOAD"
    },
    "5052": {
      "op": "SWAP2"
    },
    "5053": {
      "op": "POP"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5056": {
      "op": "NOT"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5059": {
      "op": "RETURNDATASIZE"
    },
    "5060": {
      "op": "ADD"
    },
    "5061": {
      "op": "AND"
    },
    "5062": {
      "op": "DUP3"
    },
    "5063": {
      "op": "ADD"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5066": {
      "op": "MSTORE"
    },
    "5067": {
      "op": "RETURNDATASIZE"
    },
    "5068": {
      "op": "DUP3"
    },
    "5069": {
      "op": "MSTORE"
    },
    "5070": {
      "op": "RETURNDATASIZE"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5075": {
      "op": "DUP5"
    },
    "5076": {
      "op": "ADD"
    },
    "5077": {
      "op": "RETURNDATACOPY"
    },
    "5078": {
      "op": "PUSH2",
      "value": "0x13DF"
    },
    "5081": {
      "op": "JUMP"
    },
    "5082": {
      "op": "JUMPDEST"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5085": {
      "op": "SWAP2"
    },
    "5086": {
      "op": "POP"
    },
    "5087": {
      "op": "JUMPDEST"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5090": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5091": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5092": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "5093": {
      "branch": 62,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 42
    },
    "5094": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1436"
    },
    "5097": {
      "branch": 62,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5098": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5100": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5101": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5108": {
      "op": "SHL"
    },
    "5109": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5110": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5111": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5113": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5115": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5116": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "5117": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5118": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5119": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5120": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "5122": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5123": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "5124": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5125": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "5158": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "5160": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5161": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "5162": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5163": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5164": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5165": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5166": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5167": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5168": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "5169": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "5171": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "5172": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5173": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5174": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5175": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5176": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5177": {
      "branch": 63,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5178": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB01"
    },
    "5181": {
      "branch": 63,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5182": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 43
    },
    "5183": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5184": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5186": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "5187": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5188": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5191": {
      "op": "DUP2"
    },
    "5192": {
      "op": "LT"
    },
    "5193": {
      "op": "ISZERO"
    },
    "5194": {
      "op": "PUSH2",
      "value": "0x1452"
    },
    "5197": {
      "op": "JUMPI"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5200": {
      "op": "DUP1"
    },
    "5201": {
      "op": "REVERT"
    },
    "5202": {
      "op": "JUMPDEST"
    },
    "5203": {
      "op": "POP"
    },
    "5204": {
      "branch": 64,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5205": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB01"
    },
    "5208": {
      "branch": 64,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5209": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5211": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5212": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5218": {
      "op": "SHL"
    },
    "5219": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5220": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5221": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5223": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "5224": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5225": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5226": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5228": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "5229": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5230": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5231": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "5232": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5233": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5234": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "5236": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5237": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5238": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5240": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "5241": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5242": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1563"
    },
    "5245": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "5247": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5248": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "5249": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5251": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "5252": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5253": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "5254": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "5255": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5257": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5258": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5259": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5260": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "5261": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5262": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5263": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5264": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5266": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 44
    },
    "5267": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5268": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5269": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "5270": {
      "branch": 66,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5271": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151E"
    },
    "5274": {
      "branch": 66,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5275": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5277": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5284": {
      "op": "SHL"
    },
    "5285": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5286": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5287": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5289": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "5290": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5291": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5292": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5294": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "5295": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5296": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5297": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "5298": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5299": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5300": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5301": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5302": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5303": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5304": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5305": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5306": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5308": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "5309": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5310": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5311": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5312": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5313": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5314": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5316": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "5317": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5318": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5319": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5320": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5323": {
      "op": "JUMPDEST"
    },
    "5324": {
      "op": "DUP4"
    },
    "5325": {
      "op": "DUP2"
    },
    "5326": {
      "op": "LT"
    },
    "5327": {
      "op": "ISZERO"
    },
    "5328": {
      "op": "PUSH2",
      "value": "0x14E3"
    },
    "5331": {
      "op": "JUMPI"
    },
    "5332": {
      "op": "DUP2"
    },
    "5333": {
      "op": "DUP2"
    },
    "5334": {
      "op": "ADD"
    },
    "5335": {
      "op": "MLOAD"
    },
    "5336": {
      "op": "DUP4"
    },
    "5337": {
      "op": "DUP3"
    },
    "5338": {
      "op": "ADD"
    },
    "5339": {
      "op": "MSTORE"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5342": {
      "op": "ADD"
    },
    "5343": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "5346": {
      "op": "JUMP"
    },
    "5347": {
      "op": "JUMPDEST"
    },
    "5348": {
      "op": "POP"
    },
    "5349": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5350": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5351": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5352": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5353": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5354": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5355": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5356": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "5357": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5358": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5360": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "5361": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5362": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5363": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1510"
    },
    "5366": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5367": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5368": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5369": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "5370": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5371": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5372": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5374": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5375": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5377": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "5378": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5381": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "5382": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "5383": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "5384": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "5385": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5386": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5387": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5389": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "5390": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5391": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5392": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5393": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5394": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5395": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5396": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5397": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "5398": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5400": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5401": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5402": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5403": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "5404": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5405": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5406": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5407": {
      "op": "POP"
    },
    "5408": {
      "op": "POP"
    },
    "5409": {
      "op": "POP"
    },
    "5410": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5411": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "5412": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5413": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5414": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5415": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5417": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5418": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "5419": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "5452": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 45
    },
    "5453": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5454": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "5455": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5456": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5457": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5458": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x155A"
    },
    "5461": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5462": {
      "op": "POP"
    },
    "5463": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5464": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5465": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5466": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5467": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5468": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5469": {
      "op": "POP"
    },
    "5470": {
      "op": "POP"
    },
    "5471": {
      "op": "POP"
    },
    "5472": {
      "op": "POP"
    },
    "5473": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "773cca1d1f79ce85dd2a5692790ae8c3d0be401d",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../../interfaces/curve/Curve.sol\";\nimport \"../../interfaces/curve/Gauge.sol\";\nimport \"../../interfaces/curve/Mintr.sol\";\nimport \"../../interfaces/curve/VoteEscrow.sol\";\nimport \"../../interfaces/uniswap/Uni.sol\";\nimport \"../../interfaces/yearn/Token.sol\";\n\ncontract CurveYCRVVoter {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    address public constant want = address(0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8);\n    address public constant pool = address(0xFA712EE4788C042e2B7BB55E6cb8ec569C4530c1);\n    address public constant mintr = address(0xd061D61a4d941c39E5453435B6345Dc261C2fcE0);\n    address public constant crv = address(0xD533a949740bb3306d119CC777fa900bA034cd52);\n\n    address public constant escrow = address(0x5f3b5DfEb7B28CDbD7FAba78963EE202a494e2A2);\n\n    address public governance;\n    address public strategy;\n\n    constructor() public {\n        governance = msg.sender;\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"CurveYCRVVoter\";\n    }\n\n    function setStrategy(address _strategy) external {\n        require(msg.sender == governance, \"!governance\");\n        strategy = _strategy;\n    }\n\n    function deposit() public {\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            IERC20(want).safeApprove(pool, 0);\n            IERC20(want).safeApprove(pool, _want);\n            Gauge(pool).deposit(_want);\n        }\n    }\n\n    // Controller only function for creating additional rewards from dust\n    function withdraw(IERC20 _asset) external returns (uint256 balance) {\n        require(msg.sender == strategy, \"!controller\");\n        balance = _asset.balanceOf(address(this));\n        _asset.safeTransfer(strategy, balance);\n    }\n\n    // Withdraw partial funds, normally used with a vault withdrawal\n    function withdraw(uint256 _amount) external {\n        require(msg.sender == strategy, \"!controller\");\n        uint256 _balance = IERC20(want).balanceOf(address(this));\n        if (_balance < _amount) {\n            _amount = _withdrawSome(_amount.sub(_balance));\n            _amount = _amount.add(_balance);\n        }\n        IERC20(want).safeTransfer(strategy, _amount);\n    }\n\n    // Withdraw all funds, normally used when migrating strategies\n    function withdrawAll() external returns (uint256 balance) {\n        require(msg.sender == strategy, \"!controller\");\n        _withdrawAll();\n\n        balance = IERC20(want).balanceOf(address(this));\n        IERC20(want).safeTransfer(strategy, balance);\n    }\n\n    function _withdrawAll() internal {\n        Gauge(pool).withdraw(Gauge(pool).balanceOf(address(this)));\n    }\n\n    function createLock(uint256 _value, uint256 _unlockTime) external {\n        require(msg.sender == strategy || msg.sender == governance, \"!authorized\");\n        IERC20(crv).safeApprove(escrow, 0);\n        IERC20(crv).safeApprove(escrow, _value);\n        VoteEscrow(escrow).create_lock(_value, _unlockTime);\n    }\n\n    function increaseAmount(uint256 _value) external {\n        require(msg.sender == strategy || msg.sender == governance, \"!authorized\");\n        IERC20(crv).safeApprove(escrow, 0);\n        IERC20(crv).safeApprove(escrow, _value);\n        VoteEscrow(escrow).increase_amount(_value);\n    }\n\n    function release() external {\n        require(msg.sender == strategy || msg.sender == governance, \"!authorized\");\n        VoteEscrow(escrow).withdraw();\n    }\n\n    function _withdrawSome(uint256 _amount) internal returns (uint256) {\n        Gauge(pool).withdraw(_amount);\n        return _amount;\n    }\n\n    function balanceOfWant() public view returns (uint256) {\n        return IERC20(want).balanceOf(address(this));\n    }\n\n    function balanceOfPool() public view returns (uint256) {\n        return Gauge(pool).balanceOf(address(this));\n    }\n\n    function balanceOf() public view returns (uint256) {\n        return balanceOfWant().add(balanceOfPool());\n    }\n\n    function setGovernance(address _governance) external {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function execute(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bool, bytes memory) {\n        require(msg.sender == strategy || msg.sender == governance, \"!governance\");\n        (bool success, bytes memory result) = to.call.value(value)(data);\n\n        return (success, result);\n    }\n}\n",
  "sourceMap": "553:4199:12:-;;;1184:61;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1215:10:12;:23;;-1:-1:-1;;;;;;1215:23:12;1228:10;1215:23;;;553:4199;;;;;;",
  "sourcePath": "contracts/strategies/CurveYCRVVoter.sol",
  "type": "contract"
}