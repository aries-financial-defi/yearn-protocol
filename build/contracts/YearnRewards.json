{
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dailyOutput",
          "type": "uint256"
        }
      ],
      "name": "DailyOutputChanege",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DailyOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Halvetime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earnings_per_share",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPerBlockOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastblock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dailyOutput",
          "type": "uint256"
        }
      ],
      "name": "notifyRewardAmount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardDistribution",
          "type": "address"
        }
      ],
      "name": "setRewardDistribution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "starttime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "y",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "yfi",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/controllers/yCurveFiRewardsAddress.sol"
  },
  "ast": {
    "absolutePath": "contracts/controllers/yCurveFiRewardsAddress.sol",
    "exportedSymbols": {
      "Address": [
        1315
      ],
      "Context": [
        1054
      ],
      "IERC20": [
        1241
      ],
      "IFreeFromUpTo": [
        1577
      ],
      "IRewardDistributionRecipient": [
        1566
      ],
      "LPTokenWrapper": [
        1686
      ],
      "Math": [
        842
      ],
      "Ownable": [
        1166
      ],
      "SafeERC20": [
        1531
      ],
      "SafeMath": [
        1028
      ],
      "YearnRewards": [
        2083
      ]
    },
    "id": 2084,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 773,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1423:23:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Standard math utilities missing in the Solidity language.",
        "fullyImplemented": true,
        "id": 842,
        "linearizedBaseContracts": [
          842
        ],
        "name": "Math",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "1672:38:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 782,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "1689:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 783,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "1694:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1689:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 786,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "1702:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1689:14:10",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 785,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "1698:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 781,
                  "id": 788,
                  "nodeType": "Return",
                  "src": "1682:21:10"
                }
              ]
            },
            "documentation": "@dev Returns the largest of two numbers.",
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "max",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "1618:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "1629:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1617:22:10"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "1663:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1662:9:10"
            },
            "scope": 842,
            "src": "1605:105:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 806,
              "nodeType": "Block",
              "src": "1848:37:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 799,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "1865:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "1869:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1865:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 803,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "1877:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1865:13:10",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 802,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "1873:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 798,
                  "id": 805,
                  "nodeType": "Return",
                  "src": "1858:20:10"
                }
              ]
            },
            "documentation": "@dev Returns the smallest of two numbers.",
            "id": 807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1794:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 794,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1805:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1805:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1793:22:10"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "1839:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1838:9:10"
            },
            "scope": 842,
            "src": "1781:104:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "2069:123:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 816,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "2141:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2145:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "2141:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 819,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2140:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 820,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 811,
                              "src": "2151:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2155:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "2151:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 823,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2150:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2140:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 827,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 825,
                                        "name": "a",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 809,
                                        "src": "2163:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "%",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 826,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2167:1:10",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "2163:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 828,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2162:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 831,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 829,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 811,
                                        "src": "2173:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "%",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 830,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2177:1:10",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "2173:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 832,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2172:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2162:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 834,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2161:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2183:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2161:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 837,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2160:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2140:45:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 815,
                  "id": 839,
                  "nodeType": "Return",
                  "src": "2133:52:10"
                }
              ]
            },
            "documentation": "@dev Returns the average of two numbers. The result is rounded towards\nzero.",
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "average",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "2015:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "2026:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2014:22:10"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "2060:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2059:9:10"
            },
            "scope": 842,
            "src": "1998:194:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2084,
        "src": "1522:672:10"
      },
      {
        "id": 843,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "2248:23:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
        "fullyImplemented": true,
        "id": 1028,
        "linearizedBaseContracts": [
          1028
        ],
        "name": "SafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "3149:109:10",
              "statements": [
                {
                  "assignments": [
                    853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 853,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "3159:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 852,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3159:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 857,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 854,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 845,
                      "src": "3171:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 855,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "3175:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3171:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3159:17:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 859,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 853,
                          "src": "3194:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 860,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "3199:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3194:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3202:29:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        },
                        "value": "SafeMath: addition overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        }
                      ],
                      "id": 858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "3186:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:46:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 865,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 853,
                    "src": "3250:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 851,
                  "id": 866,
                  "nodeType": "Return",
                  "src": "3243:8:10"
                }
              ]
            },
            "documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
            "id": 868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "3095:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3095:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "3106:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3106:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3094:22:10"
            },
            "returnParameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "3140:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3139:9:10"
            },
            "scope": 1028,
            "src": "3082:176:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "3589:67:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 878,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "3610:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 879,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "3613:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3616:32:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        },
                        "value": "SafeMath: subtraction overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        }
                      ],
                      "id": 877,
                      "name": "sub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        884,
                        911
                      ],
                      "referencedDeclaration": 911,
                      "src": "3606:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 876,
                  "id": 882,
                  "nodeType": "Return",
                  "src": "3599:50:10"
                }
              ]
            },
            "documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "3535:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3535:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "3546:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3534:22:10"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "3580:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3580:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3579:9:10"
            },
            "scope": 1028,
            "src": "3522:134:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "4105:92:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 896,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 888,
                          "src": "4123:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 897,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 886,
                          "src": "4128:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4123:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 899,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "4131:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "4115:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4115:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "4115:29:10"
                },
                {
                  "assignments": [
                    903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 903,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 910,
                      "src": "4154:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 902,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4154:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 904,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 886,
                      "src": "4166:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 905,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "4170:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4166:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4154:17:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 908,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 903,
                    "src": "4189:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 894,
                  "id": 909,
                  "nodeType": "Return",
                  "src": "4182:8:10"
                }
              ]
            },
            "documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "4002:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4002:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "4021:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4021:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "4040:26:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3992:80:10"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "4096:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4096:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4095:9:10"
            },
            "scope": 1028,
            "src": "3980:217:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "4504:392:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 920,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "4736:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4741:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4736:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 926,
                  "nodeType": "IfStatement",
                  "src": "4732:45:10",
                  "trueBody": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "4744:33:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4765:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 919,
                        "id": 924,
                        "nodeType": "Return",
                        "src": "4758:8:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 928,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 944,
                      "src": "4787:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4787:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 932,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 929,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "4799:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 930,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "4803:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4799:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4787:17:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 934,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "4822:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 935,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 913,
                            "src": "4826:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4822:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 937,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "4831:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4822:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4834:35:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        },
                        "value": "SafeMath: multiplication overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        }
                      ],
                      "id": 933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "4814:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4814:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "4814:56:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 942,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 928,
                    "src": "4888:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 919,
                  "id": 943,
                  "nodeType": "Return",
                  "src": "4881:8:10"
                }
              ]
            },
            "documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "4450:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 915,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "4461:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4461:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4449:22:10"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 918,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "4495:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4494:9:10"
            },
            "scope": 1028,
            "src": "4437:459:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 960,
              "nodeType": "Block",
              "src": "5418:63:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 955,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "5439:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 956,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "5442:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                        "id": 957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5445:28:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        },
                        "value": "SafeMath: division by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        }
                      ],
                      "id": 954,
                      "name": "div",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        961,
                        988
                      ],
                      "referencedDeclaration": 988,
                      "src": "5435:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5435:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 953,
                  "id": 959,
                  "nodeType": "Return",
                  "src": "5428:46:10"
                }
              ]
            },
            "documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
            "id": 961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "5364:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5364:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "5375:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5375:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5363:22:10"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 952,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "5409:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5409:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5408:9:10"
            },
            "scope": 1028,
            "src": "5351:130:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 987,
              "nodeType": "Block",
              "src": "6121:243:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 973,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "6205:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6209:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6205:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 976,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "6212:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "6197:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6197:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "6197:28:10"
                },
                {
                  "assignments": [
                    980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 980,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 987,
                      "src": "6235:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 979,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6235:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 984,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 981,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "6247:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 982,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "6251:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6247:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6235:17:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 985,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 980,
                    "src": "6356:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 971,
                  "id": 986,
                  "nodeType": "Return",
                  "src": "6349:8:10"
                }
              ]
            },
            "documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
            "id": 988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 963,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "6018:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6018:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 965,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "6037:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6037:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 967,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "6056:26:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6008:80:10"
            },
            "returnParameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 970,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "6112:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6112:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6111:9:10"
            },
            "scope": 1028,
            "src": "5996:368:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1003,
              "nodeType": "Block",
              "src": "6875:61:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 998,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "6896:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 999,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 992,
                        "src": "6899:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6902:26:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        },
                        "value": "SafeMath: modulo by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        }
                      ],
                      "id": 997,
                      "name": "mod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1004,
                        1027
                      ],
                      "referencedDeclaration": 1027,
                      "src": "6892:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6892:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 996,
                  "id": 1002,
                  "nodeType": "Return",
                  "src": "6885:44:10"
                }
              ]
            },
            "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
            "id": 1004,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "6821:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6821:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 992,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "6832:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6832:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6820:22:10"
            },
            "returnParameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 995,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1004,
                  "src": "6866:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6866:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6865:9:10"
            },
            "scope": 1028,
            "src": "6808:128:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1026,
              "nodeType": "Block",
              "src": "7565:68:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1016,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "7583:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7588:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7583:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1019,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "7591:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "7575:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7575:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "7575:29:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1022,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "7621:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1023,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "7625:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7621:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1014,
                  "id": 1025,
                  "nodeType": "Return",
                  "src": "7614:12:10"
                }
              ]
            },
            "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
            "id": 1027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1006,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "7462:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7462:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1008,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "7481:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7481:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "7500:26:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7500:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7452:80:10"
            },
            "returnParameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "7556:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7556:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7555:9:10"
            },
            "scope": 1028,
            "src": "7440:193:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2084,
        "src": "2837:4798:10"
      },
      {
        "id": 1029,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "7687:23:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1054,
        "linearizedBaseContracts": [
          1054
        ],
        "name": "Context",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "8412:2:10",
              "statements": []
            },
            "documentation": null,
            "id": 1033,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8400:2:10"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8412:0:10"
            },
            "scope": 1054,
            "src": "8389:25:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1041,
              "nodeType": "Block",
              "src": "8536:34:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18752,
                      "src": "8553:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "8553:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 1037,
                  "id": 1040,
                  "nodeType": "Return",
                  "src": "8546:17:10"
                }
              ]
            },
            "documentation": null,
            "id": 1042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8493:2:10"
            },
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "8519:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8519:15:10",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8518:17:10"
            },
            "scope": 1054,
            "src": "8474:96:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1052,
              "nodeType": "Block",
              "src": "8633:165:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1047,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18796,
                    "src": "8643:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$1054",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "8643:4:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1049,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18752,
                      "src": "8783:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "8783:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 1046,
                  "id": 1051,
                  "nodeType": "Return",
                  "src": "8776:15:10"
                }
              ]
            },
            "documentation": null,
            "id": 1053,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8593:2:10"
            },
            "returnParameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1045,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1053,
                  "src": "8619:12:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8619:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8618:14:10"
            },
            "scope": 1054,
            "src": "8576:222:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2084,
        "src": "8212:588:10"
      },
      {
        "id": 1055,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "8858:23:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1056,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1054,
              "src": "9264:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$1054",
                "typeString": "contract Context"
              }
            },
            "id": 1057,
            "nodeType": "InheritanceSpecifier",
            "src": "9264:7:10"
          }
        ],
        "contractDependencies": [
          1054
        ],
        "contractKind": "contract",
        "documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
        "fullyImplemented": true,
        "id": 1166,
        "linearizedBaseContracts": [
          1166,
          1054
        ],
        "name": "Ownable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1059,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 1166,
            "src": "9278:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1058,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "9278:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1065,
            "name": "OwnershipTransferred",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1061,
                  "indexed": true,
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "9343:29:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9343:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "indexed": true,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1065,
                  "src": "9382:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9382:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9333:79:10"
            },
            "src": "9307:106:10"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "9538:93:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1068,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "9548:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1069,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "9557:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9557:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "9548:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "9548:21:10"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9613:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9605:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9605:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1077,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "9617:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1073,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "9584:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9584:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1079,
                  "nodeType": "EmitStatement",
                  "src": "9579:45:10"
                }
              ]
            },
            "documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
            "id": 1081,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9526:2:10"
            },
            "returnParameters": {
              "id": 1067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9538:0:10"
            },
            "scope": 1166,
            "src": "9515:116:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1088,
              "nodeType": "Block",
              "src": "9754:30:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1086,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1059,
                    "src": "9771:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1085,
                  "id": 1087,
                  "nodeType": "Return",
                  "src": "9764:13:10"
                }
              ]
            },
            "documentation": "@dev Returns the address of the current owner.",
            "id": 1089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9721:2:10"
            },
            "returnParameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1089,
                  "src": "9745:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9745:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9744:9:10"
            },
            "scope": 1166,
            "src": "9707:77:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1098,
              "nodeType": "Block",
              "src": "9893:82:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1092,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1110,
                          "src": "9911:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9911:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9922:34:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 1091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "9903:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9903:54:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1096,
                  "nodeType": "ExpressionStatement",
                  "src": "9903:54:10"
                },
                {
                  "id": 1097,
                  "nodeType": "PlaceholderStatement",
                  "src": "9967:1:10"
                }
              ]
            },
            "documentation": "@dev Throws if called by any account other than the owner.",
            "id": 1099,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9890:2:10"
            },
            "src": "9872:103:10",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1109,
              "nodeType": "Block",
              "src": "10104:46:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1104,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "10121:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10121:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1106,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "10137:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10121:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1103,
                  "id": 1108,
                  "nodeType": "Return",
                  "src": "10114:29:10"
                }
              ]
            },
            "documentation": "@dev Returns true if the caller is the current owner.",
            "id": 1110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10074:2:10"
            },
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "10098:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10098:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10097:6:10"
            },
            "scope": 1166,
            "src": "10058:92:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1128,
              "nodeType": "Block",
              "src": "10538:91:10",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1116,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "10574:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10590:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10582:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10582:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1115,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "10553:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10553:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "EmitStatement",
                  "src": "10548:45:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1122,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "10603:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10620:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10612:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10612:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "10603:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "10603:19:10"
                }
              ]
            },
            "documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
            "id": 1129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1113,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1112,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "10528:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10528:9:10"
              }
            ],
            "name": "renounceOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10518:2:10"
            },
            "returnParameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10538:0:10"
            },
            "scope": 1166,
            "src": "10492:137:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "10840:45:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1137,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1131,
                        "src": "10869:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1136,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1165,
                      "src": "10850:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10850:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "10850:28:10"
                }
              ]
            },
            "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
            "id": 1141,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1134,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1133,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "10830:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10830:9:10"
              }
            ],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1131,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "10805:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10805:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10804:18:10"
            },
            "returnParameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10840:0:10"
            },
            "scope": 1166,
            "src": "10778:107:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "11041:204:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "11072:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11092:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11084:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11084:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11072:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11108:40:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 1146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "11051:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11051:107:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1154,
                  "nodeType": "ExpressionStatement",
                  "src": "11051:107:10"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1156,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "11194:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1157,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1143,
                        "src": "11202:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1155,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "11173:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11173:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "EmitStatement",
                  "src": "11168:43:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1160,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "11221:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1161,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "11230:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11221:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "11221:17:10"
                }
              ]
            },
            "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "11014:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11014:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11013:18:10"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11041:0:10"
            },
            "scope": 1166,
            "src": "10986:259:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2084,
        "src": "9244:2003:10"
      },
      {
        "id": 1167,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "11306:23:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
        "fullyImplemented": false,
        "id": 1241,
        "linearizedBaseContracts": [
          1241
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Returns the amount of tokens in existence.",
            "id": 1172,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11596:2:10"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "11622:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11622:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11621:9:10"
            },
            "scope": 1241,
            "src": "11576:55:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the amount of tokens owned by `account`.",
            "id": 1179,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "11733:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11733:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11732:17:10"
            },
            "returnParameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "11773:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11773:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11772:9:10"
            },
            "scope": 1241,
            "src": "11714:68:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
            "id": 1188,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1181,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "12020:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12020:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1183,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "12039:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12039:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12019:35:10"
            },
            "returnParameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1186,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1188,
                  "src": "12089:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12089:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12088:6:10"
            },
            "scope": 1241,
            "src": "12002:93:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 1195,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "12123:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12123:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1192,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1195,
                  "src": "12140:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12140:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12122:33:10"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12164:0:10"
            },
            "scope": 1241,
            "src": "12109:56:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
            "id": 1204,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "12459:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12459:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1199,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "12474:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12474:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12458:32:10"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1204,
                  "src": "12538:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12538:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12537:9:10"
            },
            "scope": 1241,
            "src": "12440:107:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
            "id": 1213,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1206,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "13217:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13217:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1208,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "13234:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13234:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13216:33:10"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1211,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "13268:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13268:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13267:6:10"
            },
            "scope": 1241,
            "src": "13200:74:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
            "id": 1224,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1215,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "13612:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13612:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1217,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "13636:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13636:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1219,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "13663:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13663:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13602:81:10"
            },
            "returnParameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "13702:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13702:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13701:6:10"
            },
            "scope": 1241,
            "src": "13581:127:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
            "id": 1232,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1226,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "13892:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13892:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1228,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "13914:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13914:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1230,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "13934:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13934:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13891:57:10"
            },
            "src": "13877:72:10"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
            "id": 1240,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1234,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "14132:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14132:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1236,
                  "indexed": true,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "14163:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14163:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1238,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "14196:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14196:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14122:93:10"
            },
            "src": "14108:108:10"
          }
        ],
        "scope": 2084,
        "src": "11482:2736:10"
      },
      {
        "id": 1242,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "14272:23:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev Collection of functions related to the address type",
        "fullyImplemented": true,
        "id": 1315,
        "linearizedBaseContracts": [
          1315
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1266,
              "nodeType": "Block",
              "src": "14895:766:10",
              "statements": [
                {
                  "assignments": [
                    1250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1250,
                      "name": "codehash",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "15334:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1249,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15334:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15334:16:10"
                },
                {
                  "assignments": [
                    1253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1253,
                      "name": "accountHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "15366:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1252,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15366:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1255,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15397:66:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                      "typeString": "int_const 8947...(69 digits omitted)...1552"
                    },
                    "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15366:97:10"
                },
                {
                  "externalReferences": [
                    {
                      "account": {
                        "declaration": 1244,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15576:7:10",
                        "valueSize": 1
                      }
                    },
                    {
                      "codehash": {
                        "declaration": 1250,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15552:8:10",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1256,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    codehash := extcodehash(account)\n}",
                  "src": "15529:65:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1257,
                            "name": "codehash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "15611:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15623:3:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          },
                          "src": "15611:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1260,
                            "name": "codehash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "15630:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1261,
                            "name": "accountHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "15642:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "15630:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15611:42:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1264,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15610:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1248,
                  "id": 1265,
                  "nodeType": "Return",
                  "src": "15603:51:10"
                }
              ]
            },
            "documentation": "@dev Returns true if `account` is a contract.\n     * This test is non-exhaustive, and there may be false-negatives: during the\nexecution of a contract's constructor, its address will be reported as\nnot containing a contract.\n     * IMPORTANT: It is unsafe to assume that an address for which this\nfunction returns false is an externally-owned account (EOA) and not a\ncontract.",
            "id": 1267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1244,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "14849:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14849:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14848:17:10"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "14889:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14889:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14888:6:10"
            },
            "scope": 1315,
            "src": "14829:832:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1280,
              "nodeType": "Block",
              "src": "15974:49:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1276,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "16007:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15999:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": "uint160"
                        },
                        "id": 1277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15999:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 1274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15991:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15991:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 1273,
                  "id": 1279,
                  "nodeType": "Return",
                  "src": "15984:32:10"
                }
              ]
            },
            "documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._",
            "id": 1281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toPayable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1269,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "15889:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15889:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15888:17:10"
            },
            "returnParameters": {
              "id": 1273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1272,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "15953:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15953:15:10",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15952:17:10"
            },
            "scope": 1315,
            "src": "15870:153:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1313,
              "nodeType": "Block",
              "src": "17051:362:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1290,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18802,
                                "src": "17090:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$1315",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$1315",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 1289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17082:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17082:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "17082:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1293,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1285,
                          "src": "17107:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17082:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17127:31:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        },
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        }
                      ],
                      "id": 1288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "17061:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17061:107:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "17061:107:10"
                },
                {
                  "assignments": [
                    1299,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1299,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1313,
                      "src": "17234:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17234:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1307,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17281:2:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1303,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1285,
                          "src": "17273:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1300,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1283,
                            "src": "17252:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "17252:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "17252:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                        }
                      },
                      "id": 1304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17252:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17252:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17233:51:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1309,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "17315:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                        "id": 1310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17336:60:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        },
                        "value": "Address: unable to send value, recipient may have reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        }
                      ],
                      "id": 1308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "17294:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17294:112:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1312,
                  "nodeType": "ExpressionStatement",
                  "src": "17294:112:10"
                }
              ]
            },
            "documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     * _Available since v2.4.0._",
            "id": 1314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "16999:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16999:15:10",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1285,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "17026:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17026:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16998:43:10"
            },
            "returnParameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17051:0:10"
            },
            "scope": 1315,
            "src": "16980:433:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2084,
        "src": "14365:3050:10"
      },
      {
        "id": 1316,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "17477:23:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
        "fullyImplemented": true,
        "id": 1531,
        "linearizedBaseContracts": [
          1531
        ],
        "name": "SafeERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1319,
            "libraryName": {
              "contractScope": null,
              "id": 1317,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1028,
              "src": "17989:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1028",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "17983:27:10",
            "typeName": {
              "id": 1318,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "18002:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1322,
            "libraryName": {
              "contractScope": null,
              "id": 1320,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1315,
              "src": "18021:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$1315",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "18015:26:10",
            "typeName": {
              "id": 1321,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "18033:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 1343,
              "nodeType": "Block",
              "src": "18149:136:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1332,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "18191:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1335,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1324,
                                "src": "18233:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1241",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1188,
                              "src": "18233:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "18233:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1338,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1326,
                            "src": "18258:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1339,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "18262:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1333,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18739,
                            "src": "18210:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "18210:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18210:58:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1331,
                      "name": "callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1530,
                      "src": "18159:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1241_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18159:119:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "18159:119:10"
                }
              ]
            },
            "documentation": null,
            "id": 1344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1344,
                  "src": "18078:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1241",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1323,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1241,
                    "src": "18078:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1241",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1326,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1344,
                  "src": "18100:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18100:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1328,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1344,
                  "src": "18120:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18120:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18068:71:10"
            },
            "returnParameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18149:0:10"
            },
            "scope": 1531,
            "src": "18047:238:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1368,
              "nodeType": "Block",
              "src": "18419:146:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1356,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1346,
                        "src": "18461:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1359,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1346,
                                "src": "18503:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1241",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1224,
                              "src": "18503:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "18503:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1362,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1348,
                            "src": "18532:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1363,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "18538:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1364,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1352,
                            "src": "18542:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1357,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18739,
                            "src": "18480:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "18480:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18480:68:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1355,
                      "name": "callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1530,
                      "src": "18429:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1241_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18429:129:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1367,
                  "nodeType": "ExpressionStatement",
                  "src": "18429:129:10"
                }
              ]
            },
            "documentation": null,
            "id": 1369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1346,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "18326:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1241",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1345,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1241,
                    "src": "18326:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1241",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1348,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "18348:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18348:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1350,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "18370:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18370:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1352,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "18390:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18390:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18316:93:10"
            },
            "returnParameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18419:0:10"
            },
            "scope": 1531,
            "src": "18291:274:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1409,
              "nodeType": "Block",
              "src": "18677:583:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1379,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1375,
                                "src": "18979:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18988:1:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "18979:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1382,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "18978:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1386,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 18804,
                                        "src": "19019:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SafeERC20_$1531",
                                          "typeString": "library SafeERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SafeERC20_$1531",
                                          "typeString": "library SafeERC20"
                                        }
                                      ],
                                      "id": 1385,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19011:7:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 1387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19011:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1388,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1373,
                                    "src": "19026:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1383,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1371,
                                    "src": "18995:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1241",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1204,
                                  "src": "18995:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 1389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18995:39:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19038:1:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "18995:44:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1392,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "18994:46:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18978:62:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19054:56:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                          "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                        },
                        "value": "SafeERC20: approve from non-zero to non-zero allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                          "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                        }
                      ],
                      "id": 1378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "18957:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18957:163:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1396,
                  "nodeType": "ExpressionStatement",
                  "src": "18957:163:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1398,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "19162:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1401,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1371,
                                "src": "19204:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1241",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1213,
                              "src": "19204:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "19204:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1404,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "19228:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1405,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1375,
                            "src": "19237:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1399,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18739,
                            "src": "19181:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19181:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19181:62:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1397,
                      "name": "callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1530,
                      "src": "19130:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1241_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 1407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19130:123:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1408,
                  "nodeType": "ExpressionStatement",
                  "src": "19130:123:10"
                }
              ]
            },
            "documentation": null,
            "id": 1410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeApprove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1371,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "18601:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1241",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1370,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1241,
                    "src": "18601:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1241",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1373,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "18623:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18623:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1375,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "18648:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18648:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18591:76:10"
            },
            "returnParameters": {
              "id": 1377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18677:0:10"
            },
            "scope": 1531,
            "src": "18571:689:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "19382:314:10",
              "statements": [
                {
                  "assignments": [
                    1420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1420,
                      "name": "newAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1444,
                      "src": "19392:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19392:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1431,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1429,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "19472:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1424,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18804,
                                "src": "19439:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SafeERC20_$1531",
                                  "typeString": "library SafeERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SafeERC20_$1531",
                                  "typeString": "library SafeERC20"
                                }
                              ],
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19431:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19431:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1426,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1414,
                            "src": "19446:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1421,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "19415:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1241",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1204,
                          "src": "19415:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19415:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 868,
                      "src": "19415:43:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19415:72:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19392:95:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1433,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1412,
                        "src": "19529:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1436,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1412,
                                "src": "19588:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1241",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1213,
                              "src": "19588:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "19588:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1439,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1414,
                            "src": "19628:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1440,
                            "name": "newAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1420,
                            "src": "19653:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1434,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18739,
                            "src": "19548:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19548:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19548:131:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1432,
                      "name": "callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1530,
                      "src": "19497:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1241_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19497:192:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "19497:192:10"
                }
              ]
            },
            "documentation": null,
            "id": 1445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeIncreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1412,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "19306:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1241",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1411,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1241,
                    "src": "19306:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1241",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1414,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "19328:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19328:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1416,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "19353:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19353:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19296:76:10"
            },
            "returnParameters": {
              "id": 1418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19382:0:10"
            },
            "scope": 1531,
            "src": "19266:430:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1480,
              "nodeType": "Block",
              "src": "19818:371:10",
              "statements": [
                {
                  "assignments": [
                    1455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1455,
                      "name": "newAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1480,
                      "src": "19828:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1454,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19828:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1467,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1464,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1451,
                        "src": "19908:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19927:43:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                          "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                        },
                        "value": "SafeERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                          "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1459,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18804,
                                "src": "19875:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SafeERC20_$1531",
                                  "typeString": "library SafeERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SafeERC20_$1531",
                                  "typeString": "library SafeERC20"
                                }
                              ],
                              "id": 1458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19867:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19867:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1461,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1449,
                            "src": "19882:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1456,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1447,
                            "src": "19851:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1241",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1204,
                          "src": "19851:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19851:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 911,
                      "src": "19851:43:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19851:129:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19828:152:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "20022:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1472,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1447,
                                "src": "20081:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1241",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1213,
                              "src": "20081:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20081:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1475,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1449,
                            "src": "20121:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1476,
                            "name": "newAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "20146:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1470,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18739,
                            "src": "20041:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "20041:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20041:131:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1468,
                      "name": "callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1530,
                      "src": "19990:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1241_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,bytes memory)"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19990:192:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1479,
                  "nodeType": "ExpressionStatement",
                  "src": "19990:192:10"
                }
              ]
            },
            "documentation": null,
            "id": 1481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeDecreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1447,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "19742:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1241",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1446,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1241,
                    "src": "19742:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1241",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1449,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "19764:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19764:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1451,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1481,
                  "src": "19789:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19789:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19732:76:10"
            },
            "returnParameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19818:0:10"
            },
            "scope": 1531,
            "src": "19702:487:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1529,
              "nodeType": "Block",
              "src": "20641:1084:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1490,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1483,
                                "src": "21175:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1241",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1241",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 1489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21167:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21167:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1267,
                          "src": "21167:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21167:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 1494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21196:33:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
                          "typeString": "literal_string \"SafeERC20: call to non-contract\""
                        },
                        "value": "SafeERC20: call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
                          "typeString": "literal_string \"SafeERC20: call to non-contract\""
                        }
                      ],
                      "id": 1488,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "21159:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21159:71:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1496,
                  "nodeType": "ExpressionStatement",
                  "src": "21159:71:10"
                },
                {
                  "assignments": [
                    1498,
                    1500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1498,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1529,
                      "src": "21301:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1497,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "21301:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1500,
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "scope": 1529,
                      "src": "21315:23:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1499,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "21315:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1507,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1505,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "21362:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1502,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1483,
                            "src": "21350:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1241",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1241",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21342:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21342:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "21342:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21342:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21300:67:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1509,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1498,
                        "src": "21385:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
                        "id": 1510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21394:34:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                          "typeString": "literal_string \"SafeERC20: low-level call failed\""
                        },
                        "value": "SafeERC20: low-level call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                          "typeString": "literal_string \"SafeERC20: low-level call failed\""
                        }
                      ],
                      "id": 1508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "21377:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21377:52:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "21377:52:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1513,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1500,
                        "src": "21444:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "21444:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21464:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21444:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1528,
                  "nodeType": "IfStatement",
                  "src": "21440:279:10",
                  "trueBody": {
                    "id": 1527,
                    "nodeType": "Block",
                    "src": "21467:252:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1520,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1500,
                                  "src": "21613:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1521,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "21626:4:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      },
                                      "typeName": "bool"
                                    }
                                  ],
                                  "id": 1522,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "21625:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1518,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18739,
                                  "src": "21602:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "21602:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21602:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
                              "id": 1524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21650:44:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                              },
                              "value": "SafeERC20: ERC20 operation did not succeed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                              }
                            ],
                            "id": 1517,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              18755,
                              18756
                            ],
                            "referencedDeclaration": 18756,
                            "src": "21577:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21577:131:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1526,
                        "nodeType": "ExpressionStatement",
                        "src": "21577:131:10"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
            "id": 1530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callOptionalReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1483,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1530,
                  "src": "20600:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1241",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1482,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1241,
                    "src": "20600:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1241",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1485,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1530,
                  "src": "20614:17:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20614:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20599:33:10"
            },
            "returnParameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20641:0:10"
            },
            "scope": 1531,
            "src": "20572:1153:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 2084,
        "src": "17959:3768:10"
      },
      {
        "id": 1532,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "21782:23:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1533,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1166,
              "src": "21848:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1166",
                "typeString": "contract Ownable"
              }
            },
            "id": 1534,
            "nodeType": "InheritanceSpecifier",
            "src": "21848:7:10"
          }
        ],
        "contractDependencies": [
          1054,
          1166
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1566,
        "linearizedBaseContracts": [
          1566,
          1166,
          1054
        ],
        "name": "IRewardDistributionRecipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1536,
            "name": "rewardDistribution",
            "nodeType": "VariableDeclaration",
            "scope": 1566,
            "src": "21862:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1535,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "21862:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": null,
            "id": 1541,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "notifyRewardAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "21923:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21923:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21922:16:10"
            },
            "returnParameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21947:0:10"
            },
            "scope": 1566,
            "src": "21895:53:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "21988:142:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1544,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "22019:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22019:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1546,
                          "name": "rewardDistribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1536,
                          "src": "22035:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "22019:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f742072657761726420646973747269627574696f6e",
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22067:35:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaaffe5c21fa5c5738339a5c250428887dc295da86e97cc962477da488b4d856",
                          "typeString": "literal_string \"Caller is not reward distribution\""
                        },
                        "value": "Caller is not reward distribution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aaaffe5c21fa5c5738339a5c250428887dc295da86e97cc962477da488b4d856",
                          "typeString": "literal_string \"Caller is not reward distribution\""
                        }
                      ],
                      "id": 1543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "21998:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21998:114:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "21998:114:10"
                },
                {
                  "id": 1551,
                  "nodeType": "PlaceholderStatement",
                  "src": "22122:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 1553,
            "name": "onlyRewardDistribution",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21985:2:10"
            },
            "src": "21954:176:10",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1564,
              "nodeType": "Block",
              "src": "22235:57:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1560,
                      "name": "rewardDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1536,
                      "src": "22245:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1561,
                      "name": "_rewardDistribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "22266:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22245:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1563,
                  "nodeType": "ExpressionStatement",
                  "src": "22245:40:10"
                }
              ]
            },
            "documentation": null,
            "id": 1565,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1558,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1557,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "22221:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "22221:9:10"
              }
            ],
            "name": "setRewardDistribution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1555,
                  "name": "_rewardDistribution",
                  "nodeType": "VariableDeclaration",
                  "scope": 1565,
                  "src": "22167:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22167:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22166:29:10"
            },
            "returnParameters": {
              "id": 1559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22235:0:10"
            },
            "scope": 1566,
            "src": "22136:156:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2084,
        "src": "21807:487:10"
      },
      {
        "id": 1567,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "22334:23:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1577,
        "linearizedBaseContracts": [
          1577
        ],
        "name": "IFreeFromUpTo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 1576,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freeFromUpTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "22411:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22411:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "22425:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22425:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22410:29:10"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1574,
                  "name": "freed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "22474:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22474:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22473:15:10"
            },
            "scope": 1577,
            "src": "22389:100:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2084,
        "src": "22359:132:10"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1686,
        "linearizedBaseContracts": [
          1686
        ],
        "name": "LPTokenWrapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1580,
            "libraryName": {
              "contractScope": null,
              "id": 1578,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1028,
              "src": "22529:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1028",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "22523:27:10",
            "typeName": {
              "id": 1579,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "22542:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1583,
            "libraryName": {
              "contractScope": null,
              "id": 1581,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1531,
              "src": "22561:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$1531",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "22555:27:10",
            "typeName": {
              "contractScope": null,
              "id": 1582,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1241,
              "src": "22575:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1241",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 1588,
            "name": "y",
            "nodeType": "VariableDeclaration",
            "scope": 1686,
            "src": "22588:68:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1241",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1584,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1241,
              "src": "22588:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1241",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846336662364434613233393938314665333943333531343036413741623061383230353661374432",
                  "id": 1586,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "22613:42:10",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xF3fb6D4a239981Fe39C351406A7Ab0a82056a7D2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1585,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1241,
                "src": "22606:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1241_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 1587,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "22606:50:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1241",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1590,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 1686,
            "src": "22663:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1589,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "22663:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1594,
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 1686,
            "src": "22697:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1593,
              "keyType": {
                "id": 1591,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "22705:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "22697:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1592,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "22716:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1601,
              "nodeType": "Block",
              "src": "22802:36:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1599,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1590,
                    "src": "22819:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1598,
                  "id": 1600,
                  "nodeType": "Return",
                  "src": "22812:19:10"
                }
              ]
            },
            "documentation": null,
            "id": 1602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22769:2:10"
            },
            "returnParameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1597,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1602,
                  "src": "22793:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22793:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22792:9:10"
            },
            "scope": 1686,
            "src": "22749:89:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1613,
              "nodeType": "Block",
              "src": "22910:42:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1609,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1594,
                      "src": "22927:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1611,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1610,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "22937:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22927:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1608,
                  "id": 1612,
                  "nodeType": "Return",
                  "src": "22920:25:10"
                }
              ]
            },
            "documentation": null,
            "id": 1614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1604,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "22863:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22863:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22862:17:10"
            },
            "returnParameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1607,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "22901:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22901:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22900:9:10"
            },
            "scope": 1686,
            "src": "22844:108:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1650,
              "nodeType": "Block",
              "src": "22996:186:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1619,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1590,
                      "src": "23006:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1622,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1616,
                          "src": "23038:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1620,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1590,
                          "src": "23021:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 868,
                        "src": "23021:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23021:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23006:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1625,
                  "nodeType": "ExpressionStatement",
                  "src": "23006:39:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1626,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1594,
                        "src": "23055:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1629,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1627,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "23065:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "23065:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23055:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1635,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1616,
                          "src": "23105:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1630,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "23079:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1633,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1631,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "23089:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "23089:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23079:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 868,
                        "src": "23079:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23079:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23055:57:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1638,
                  "nodeType": "ExpressionStatement",
                  "src": "23055:57:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1642,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "23141:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "23141:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1645,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18810,
                            "src": "23161:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPTokenWrapper_$1686",
                              "typeString": "contract LPTokenWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LPTokenWrapper_$1686",
                              "typeString": "contract LPTokenWrapper"
                            }
                          ],
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23153:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23153:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1647,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1616,
                        "src": "23168:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1639,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1588,
                        "src": "23122:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1369,
                      "src": "23122:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1241_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1241_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23122:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1649,
                  "nodeType": "ExpressionStatement",
                  "src": "23122:53:10"
                }
              ]
            },
            "documentation": null,
            "id": 1651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1616,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "22973:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22973:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22972:16:10"
            },
            "returnParameters": {
              "id": 1618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22996:0:10"
            },
            "scope": 1686,
            "src": "22958:224:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1684,
              "nodeType": "Block",
              "src": "23229:167:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1656,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1590,
                      "src": "23239:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1659,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "23271:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1657,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1590,
                          "src": "23254:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 884,
                        "src": "23254:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23254:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23239:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1662,
                  "nodeType": "ExpressionStatement",
                  "src": "23239:39:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1663,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1594,
                        "src": "23288:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1666,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1664,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "23298:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "23298:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23288:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1672,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "23338:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1667,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "23312:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1670,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1668,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "23322:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "23322:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23312:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 884,
                        "src": "23312:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23312:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23288:57:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "23288:57:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1679,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "23370:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "23370:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1681,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1653,
                        "src": "23382:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1676,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1588,
                        "src": "23355:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1241",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1344,
                      "src": "23355:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1241_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1241_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23355:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1683,
                  "nodeType": "ExpressionStatement",
                  "src": "23355:34:10"
                }
              ]
            },
            "documentation": null,
            "id": 1685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1685,
                  "src": "23206:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23206:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23205:16:10"
            },
            "returnParameters": {
              "id": 1655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23229:0:10"
            },
            "scope": 1686,
            "src": "23188:208:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2084,
        "src": "22493:905:10"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1687,
              "name": "LPTokenWrapper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1686,
              "src": "23425:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LPTokenWrapper_$1686",
                "typeString": "contract LPTokenWrapper"
              }
            },
            "id": 1688,
            "nodeType": "InheritanceSpecifier",
            "src": "23425:14:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1689,
              "name": "IRewardDistributionRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1566,
              "src": "23441:28:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRewardDistributionRecipient_$1566",
                "typeString": "contract IRewardDistributionRecipient"
              }
            },
            "id": 1690,
            "nodeType": "InheritanceSpecifier",
            "src": "23441:28:10"
          }
        ],
        "contractDependencies": [
          1054,
          1166,
          1566,
          1686
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2083,
        "linearizedBaseContracts": [
          2083,
          1566,
          1166,
          1054,
          1686
        ],
        "name": "YearnRewards",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1695,
            "name": "yfi",
            "nodeType": "VariableDeclaration",
            "scope": 2083,
            "src": "23476:70:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1241",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1691,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1241,
              "src": "23476:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1241",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307842314562333036633534314433663839423044393037303664383833344244313334456562334363",
                  "id": 1693,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "23503:42:10",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xB1Eb306c541D3f89B0D90706d8834BD134Eeb3Cc"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1692,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1241,
                "src": "23496:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1241_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 1694,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "23496:50:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1241",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1698,
            "name": "DURATION",
            "nodeType": "VariableDeclaration",
            "scope": 2083,
            "src": "23552:41:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1696,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "23552:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "37",
              "id": 1697,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "23587:6:10",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1702,
            "name": "rewards",
            "nodeType": "VariableDeclaration",
            "scope": 2083,
            "src": "23600:42:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1701,
              "keyType": {
                "id": 1699,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "23608:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "23600:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1700,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "23619:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1704,
            "name": "earnings_per_share",
            "nodeType": "VariableDeclaration",
            "scope": 2083,
            "src": "24197:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1703,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24197:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1706,
            "name": "lastblock",
            "nodeType": "VariableDeclaration",
            "scope": 2083,
            "src": "24251:24:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1705,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24251:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1709,
            "name": "starttime",
            "nodeType": "VariableDeclaration",
            "scope": 2083,
            "src": "24317:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1707,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24317:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313131",
              "id": 1708,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "24344:3:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_111_by_1",
                "typeString": "int_const 111"
              },
              "value": "111"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1714,
            "name": "DailyOutput",
            "nodeType": "VariableDeclaration",
            "scope": 2083,
            "src": "24356:40:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1710,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24356:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1428000000000000000000_by_1",
                "typeString": "int_const 1428000000000000000000"
              },
              "id": 1713,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31343238",
                "id": 1711,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "24385:4:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1428_by_1",
                  "typeString": "int_const 1428"
                },
                "value": "1428"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "31653138",
                "id": 1712,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "24392:4:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1e18"
              },
              "src": "24385:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1428000000000000000000_by_1",
                "typeString": "int_const 1428000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1716,
            "name": "Halvetime",
            "nodeType": "VariableDeclaration",
            "scope": 2083,
            "src": "24412:24:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1715,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24412:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1720,
            "name": "DailyOutputChanege",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "indexed": false,
                  "name": "dailyOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 1720,
                  "src": "24486:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24486:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24485:21:10"
            },
            "src": "24461:46:10"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1726,
            "name": "Staked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1722,
                  "indexed": true,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1726,
                  "src": "24525:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24525:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1724,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1726,
                  "src": "24547:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24547:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24524:38:10"
            },
            "src": "24512:51:10"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1732,
            "name": "Withdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1728,
                  "indexed": true,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1732,
                  "src": "24584:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24584:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1730,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1732,
                  "src": "24606:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24606:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24583:38:10"
            },
            "src": "24568:54:10"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1738,
            "name": "RewardPaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1734,
                  "indexed": true,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "24644:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24644:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1736,
                  "indexed": false,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 1738,
                  "src": "24666:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24666:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24643:38:10"
            },
            "src": "24627:55:10"
          },
          {
            "body": {
              "id": 1748,
              "nodeType": "Block",
              "src": "25087:55:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1741,
                      "name": "Halvetime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "25097:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1742,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18742,
                          "src": "25109:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "25109:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1744,
                        "name": "DURATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1698,
                        "src": "25127:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "25109:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25097:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1747,
                  "nodeType": "ExpressionStatement",
                  "src": "25097:38:10"
                }
              ]
            },
            "documentation": null,
            "id": 1749,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25079:2:10"
            },
            "returnParameters": {
              "id": 1740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25087:0:10"
            },
            "scope": 2083,
            "src": "25067:75:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "25251:131:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "36363436",
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25284:4:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6646_by_1",
                          "typeString": "int_const 6646"
                        },
                        "value": "6646"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_6646_by_1",
                          "typeString": "int_const 6646"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1754,
                        "name": "DailyOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "25268:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 961,
                      "src": "25268:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25268:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1753,
                  "id": 1758,
                  "nodeType": "Return",
                  "src": "25261:28:10"
                }
              ]
            },
            "documentation": null,
            "id": 1760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPerBlockOutput",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25218:2:10"
            },
            "returnParameters": {
              "id": 1753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1752,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "25242:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25242:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25241:9:10"
            },
            "scope": 2083,
            "src": "25192:190:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1818,
              "nodeType": "Block",
              "src": "25487:449:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1765,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18742,
                        "src": "25501:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "25501:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1767,
                      "name": "Halvetime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "25519:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25501:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1784,
                  "nodeType": "IfStatement",
                  "src": "25497:150:10",
                  "trueBody": {
                    "id": 1783,
                    "nodeType": "Block",
                    "src": "25529:118:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1769,
                            "name": "DailyOutput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1714,
                            "src": "25543:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25573:1:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1770,
                                "name": "DailyOutput",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1714,
                                "src": "25557:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 961,
                              "src": "25557:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25557:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25543:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1775,
                        "nodeType": "ExpressionStatement",
                        "src": "25543:32:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1776,
                            "name": "Halvetime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "25598:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1777,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18742,
                                "src": "25610:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "25610:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1779,
                              "name": "DURATION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1698,
                              "src": "25628:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "25610:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25598:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1782,
                        "nodeType": "ExpressionStatement",
                        "src": "25598:38:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1786,
                      "name": "new_blocknum",
                      "nodeType": "VariableDeclaration",
                      "scope": 1818,
                      "src": "25656:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1785,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25656:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1789,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1787,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18742,
                      "src": "25679:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "25679:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25656:35:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1790,
                      "name": "new_blocknum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1786,
                      "src": "25705:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1791,
                      "name": "lastblock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1706,
                      "src": "25721:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25705:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1796,
                  "nodeType": "IfStatement",
                  "src": "25701:64:10",
                  "trueBody": {
                    "id": 1795,
                    "nodeType": "Block",
                    "src": "25732:33:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25753:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1764,
                        "id": 1794,
                        "nodeType": "Return",
                        "src": "25746:8:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1798,
                      "name": "diff",
                      "nodeType": "VariableDeclaration",
                      "scope": 1818,
                      "src": "25774:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1797,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25774:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1803,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1801,
                        "name": "lastblock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1706,
                        "src": "25806:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1799,
                        "name": "new_blocknum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "25789:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 884,
                      "src": "25789:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25789:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25774:42:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1804,
                      "name": "lastblock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1706,
                      "src": "25826:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1805,
                      "name": "new_blocknum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1786,
                      "src": "25838:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25826:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "25826:24:10"
                },
                {
                  "assignments": [
                    1809
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1809,
                      "name": "profit",
                      "nodeType": "VariableDeclaration",
                      "scope": 1818,
                      "src": "25860:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1808,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25860:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1815,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1812,
                          "name": "getPerBlockOutput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1760,
                          "src": "25886:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25886:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1810,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1798,
                        "src": "25877:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 945,
                      "src": "25877:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25877:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25860:46:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1816,
                    "name": "profit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1809,
                    "src": "25923:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1764,
                  "id": 1817,
                  "nodeType": "Return",
                  "src": "25916:13:10"
                }
              ]
            },
            "documentation": null,
            "id": 1819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getprofit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25458:2:10"
            },
            "returnParameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1819,
                  "src": "25478:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25478:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25477:9:10"
            },
            "scope": 2083,
            "src": "25440:496:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1863,
              "nodeType": "Block",
              "src": "25965:378:10",
              "statements": [
                {
                  "assignments": [
                    1822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1822,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1863,
                      "src": "25975:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1821,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25975:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1825,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1823,
                      "name": "getprofit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1819,
                      "src": "25992:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 1824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25992:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25975:28:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1826,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1822,
                      "src": "26017:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26026:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26017:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1861,
                  "nodeType": "IfStatement",
                  "src": "26013:313:10",
                  "trueBody": {
                    "id": 1860,
                    "nodeType": "Block",
                    "src": "26029:297:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1833,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18812,
                                  "src": "26060:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_YearnRewards_$2083",
                                    "typeString": "contract YearnRewards"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_YearnRewards_$2083",
                                    "typeString": "contract YearnRewards"
                                  }
                                ],
                                "id": 1832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "26052:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26052:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1835,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1822,
                              "src": "26067:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1829,
                              "name": "yfi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1695,
                              "src": "26043:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1241",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1195,
                            "src": "26043:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26043:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1837,
                        "nodeType": "ExpressionStatement",
                        "src": "26043:31:10"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1838,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1602,
                              "src": "26092:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26092:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26109:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "26092:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1858,
                          "nodeType": "Block",
                          "src": "26170:133:10",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1847,
                                  "name": "earnings_per_share",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1704,
                                  "src": "26188:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 1852,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1602,
                                            "src": "26260:11:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view returns (uint256)"
                                            }
                                          },
                                          "id": 1853,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "26260:13:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1850,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1822,
                                          "src": "26249:6:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1851,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 961,
                                        "src": "26249:10:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1854,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "26249:25:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1848,
                                      "name": "earnings_per_share",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1704,
                                      "src": "26209:18:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 868,
                                    "src": "26209:22:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26209:79:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26188:100:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1857,
                              "nodeType": "ExpressionStatement",
                              "src": "26188:100:10"
                            }
                          ]
                        },
                        "id": 1859,
                        "nodeType": "IfStatement",
                        "src": "26088:215:10",
                        "trueBody": {
                          "id": 1846,
                          "nodeType": "Block",
                          "src": "26111:55:10",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1842,
                                  "name": "earnings_per_share",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1704,
                                  "src": "26129:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "26150:1:10",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "26129:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1845,
                              "nodeType": "ExpressionStatement",
                              "src": "26129:22:10"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1862,
                  "nodeType": "PlaceholderStatement",
                  "src": "26335:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 1864,
            "name": "make_profit",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25962:2:10"
            },
            "src": "25942:401:10",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1899,
              "nodeType": "Block",
              "src": "26412:215:10",
              "statements": [
                {
                  "assignments": [
                    1872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1872,
                      "name": "_cal",
                      "nodeType": "VariableDeclaration",
                      "scope": 1899,
                      "src": "26422:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1871,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26422:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1879,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1876,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1866,
                            "src": "26470:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1875,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "26460:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26460:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1873,
                        "name": "earnings_per_share",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1704,
                        "src": "26437:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 945,
                      "src": "26437:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26437:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26422:57:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1880,
                      "name": "_cal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1872,
                      "src": "26493:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1881,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "26500:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1884,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "26508:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "26508:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26500:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26493:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1897,
                    "nodeType": "Block",
                    "src": "26560:61:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1891,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1702,
                                "src": "26590:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1894,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1892,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18752,
                                  "src": "26598:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "26598:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "26590:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1889,
                              "name": "_cal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1872,
                              "src": "26581:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 884,
                            "src": "26581:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26581:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1870,
                        "id": 1896,
                        "nodeType": "Return",
                        "src": "26574:36:10"
                      }
                    ]
                  },
                  "id": 1898,
                  "nodeType": "IfStatement",
                  "src": "26489:132:10",
                  "trueBody": {
                    "id": 1888,
                    "nodeType": "Block",
                    "src": "26521:33:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26542:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1870,
                        "id": 1887,
                        "nodeType": "Return",
                        "src": "26535:8:10"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earned",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1866,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1900,
                  "src": "26365:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26365:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26364:17:10"
            },
            "returnParameters": {
              "id": 1870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1869,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1900,
                  "src": "26403:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26403:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26402:9:10"
            },
            "scope": 2083,
            "src": "26349:278:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1963,
              "nodeType": "Block",
              "src": "26766:402:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1908,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18742,
                            "src": "26784:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "26784:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1910,
                          "name": "starttime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1709,
                          "src": "26801:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26784:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74207374617274",
                        "id": 1912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26811:11:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05a61bf4ad0a2ecc872598ad9bcae2317a8f7dc93c1273ab3bb8547e34d56975",
                          "typeString": "literal_string \"not start\""
                        },
                        "value": "not start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05a61bf4ad0a2ecc872598ad9bcae2317a8f7dc93c1273ab3bb8547e34d56975",
                          "typeString": "literal_string \"not start\""
                        }
                      ],
                      "id": 1907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "26776:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26776:47:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1914,
                  "nodeType": "ExpressionStatement",
                  "src": "26776:47:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1916,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1902,
                          "src": "26841:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26850:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26841:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207374616b652030",
                        "id": 1919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26853:16:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                          "typeString": "literal_string \"Cannot stake 0\""
                        },
                        "value": "Cannot stake 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                          "typeString": "literal_string \"Cannot stake 0\""
                        }
                      ],
                      "id": 1915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "26833:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26833:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1921,
                  "nodeType": "ExpressionStatement",
                  "src": "26833:37:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1922,
                      "name": "earnings_per_share",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1704,
                      "src": "26884:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26906:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26884:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1949,
                    "nodeType": "Block",
                    "src": "26960:132:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1933,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1702,
                              "src": "26974:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1936,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1934,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18752,
                                "src": "26982:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "26982:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "26974:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1944,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1902,
                                    "src": "27060:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1942,
                                    "name": "earnings_per_share",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1704,
                                    "src": "27037:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1943,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 945,
                                  "src": "27037:22:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27037:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1937,
                                  "name": "rewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1702,
                                  "src": "26996:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1940,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1938,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18752,
                                    "src": "27004:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "27004:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "26996:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 868,
                              "src": "26996:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26996:85:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26974:107:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1948,
                        "nodeType": "ExpressionStatement",
                        "src": "26974:107:10"
                      }
                    ]
                  },
                  "id": 1950,
                  "nodeType": "IfStatement",
                  "src": "26880:212:10",
                  "trueBody": {
                    "id": 1932,
                    "nodeType": "Block",
                    "src": "26908:48:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1925,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1702,
                              "src": "26922:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1928,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1926,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18752,
                                "src": "26930:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "26930:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "26922:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26944:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "26922:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1931,
                        "nodeType": "ExpressionStatement",
                        "src": "26922:23:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1954,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1902,
                        "src": "27113:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1951,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18813,
                        "src": "27101:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_YearnRewards_$2083",
                          "typeString": "contract super YearnRewards"
                        }
                      },
                      "id": 1953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1651,
                      "src": "27101:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27101:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1956,
                  "nodeType": "ExpressionStatement",
                  "src": "27101:19:10"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1958,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "27142:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "27142:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1960,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1902,
                        "src": "27154:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1957,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1726,
                      "src": "27135:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27135:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1962,
                  "nodeType": "EmitStatement",
                  "src": "27130:31:10"
                }
              ]
            },
            "documentation": null,
            "id": 1964,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1905,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1904,
                  "name": "make_profit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1864,
                  "src": "26753:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26753:11:10"
              }
            ],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1902,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1964,
                  "src": "26730:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26730:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26729:16:10"
            },
            "returnParameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26766:0:10"
            },
            "scope": 2083,
            "src": "26715:453:10",
            "stateMutability": "nonpayable",
            "superFunction": 1651,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "27232:264:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1972,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1966,
                          "src": "27250:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27259:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "27250:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f742077697468647261772030",
                        "id": 1975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27262:19:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
                          "typeString": "literal_string \"Cannot withdraw 0\""
                        },
                        "value": "Cannot withdraw 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
                          "typeString": "literal_string \"Cannot withdraw 0\""
                        }
                      ],
                      "id": 1971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "27242:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27242:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1977,
                  "nodeType": "ExpressionStatement",
                  "src": "27242:40:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1978,
                      "name": "getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2066,
                      "src": "27292:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27292:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "27292:11:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1981,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "27314:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1984,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1982,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "27322:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "27322:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "27314:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1992,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1966,
                              "src": "27396:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1990,
                              "name": "earnings_per_share",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1704,
                              "src": "27373:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 945,
                            "src": "27373:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27373:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1985,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1702,
                            "src": "27336:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1988,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1986,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "27344:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "27344:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27336:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 884,
                        "src": "27336:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27336:77:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27314:99:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1996,
                  "nodeType": "ExpressionStatement",
                  "src": "27314:99:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2000,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1966,
                        "src": "27438:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1997,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18813,
                        "src": "27423:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_YearnRewards_$2083",
                          "typeString": "contract super YearnRewards"
                        }
                      },
                      "id": 1999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1685,
                      "src": "27423:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27423:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "27423:22:10"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2004,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "27470:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "27470:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2006,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1966,
                        "src": "27482:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2003,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1732,
                      "src": "27460:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27460:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2008,
                  "nodeType": "EmitStatement",
                  "src": "27455:34:10"
                }
              ]
            },
            "documentation": null,
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1969,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1968,
                  "name": "make_profit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1864,
                  "src": "27215:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "27215:11:10"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1966,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "27192:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27192:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27191:16:10"
            },
            "returnParameters": {
              "id": 1970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27232:0:10"
            },
            "scope": 2083,
            "src": "27174:322:10",
            "stateMutability": "nonpayable",
            "superFunction": 1685,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2020,
              "nodeType": "Block",
              "src": "27527:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2015,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "27556:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "27556:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2014,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "27546:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27546:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2013,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2010
                      ],
                      "referencedDeclaration": 2010,
                      "src": "27537:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27537:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2019,
                  "nodeType": "ExpressionStatement",
                  "src": "27537:31:10"
                }
              ]
            },
            "documentation": null,
            "id": 2021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27515:2:10"
            },
            "returnParameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27527:0:10"
            },
            "scope": 2083,
            "src": "27502:73:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2065,
              "nodeType": "Block",
              "src": "27622:268:10",
              "statements": [
                {
                  "assignments": [
                    2027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2027,
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 2065,
                      "src": "27632:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27632:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2032,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2029,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "27656:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "27656:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2028,
                      "name": "earned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "27649:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27649:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27632:35:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2033,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2027,
                      "src": "27681:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27690:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "27681:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2064,
                  "nodeType": "IfStatement",
                  "src": "27677:207:10",
                  "trueBody": {
                    "id": 2063,
                    "nodeType": "Block",
                    "src": "27693:191:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2036,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1702,
                              "src": "27707:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2039,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2037,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18752,
                                "src": "27715:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "27715:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "27707:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2043,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 18752,
                                      "src": "27762:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2044,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "27762:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 2042,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1614,
                                  "src": "27752:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 2045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27752:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2040,
                                "name": "earnings_per_share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1704,
                                "src": "27729:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 945,
                              "src": "27729:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27729:45:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27707:67:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2048,
                        "nodeType": "ExpressionStatement",
                        "src": "27707:67:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2052,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18752,
                                "src": "27805:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "27805:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2054,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2027,
                              "src": "27817:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2049,
                              "name": "yfi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1695,
                              "src": "27788:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1241",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1344,
                            "src": "27788:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1241_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1241_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27788:36:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2056,
                        "nodeType": "ExpressionStatement",
                        "src": "27788:36:10"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2058,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18752,
                                "src": "27854:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "27854:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2060,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2027,
                              "src": "27866:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2057,
                            "name": "RewardPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "27843:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27843:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2062,
                        "nodeType": "EmitStatement",
                        "src": "27838:35:10"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2066,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2024,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2023,
                  "name": "make_profit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1864,
                  "src": "27609:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "27609:11:10"
              }
            ],
            "name": "getReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27599:2:10"
            },
            "returnParameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27622:0:10"
            },
            "scope": 2083,
            "src": "27581:309:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2081,
              "nodeType": "Block",
              "src": "27998:90:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2073,
                      "name": "DailyOutput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1714,
                      "src": "28008:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2074,
                      "name": "_dailyOutput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2068,
                      "src": "28022:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28008:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2076,
                  "nodeType": "ExpressionStatement",
                  "src": "28008:26:10"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2078,
                        "name": "_dailyOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2068,
                        "src": "28068:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2077,
                      "name": "DailyOutputChanege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "28049:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28049:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2080,
                  "nodeType": "EmitStatement",
                  "src": "28044:37:10"
                }
              ]
            },
            "documentation": null,
            "id": 2082,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2071,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2070,
                  "name": "onlyRewardDistribution",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1553,
                  "src": "27971:22:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "27971:22:10"
              }
            ],
            "name": "notifyRewardAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "name": "_dailyOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 2082,
                  "src": "27924:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27924:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27923:22:10"
            },
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27998:0:10"
            },
            "scope": 2083,
            "src": "27896:192:10",
            "stateMutability": "nonpayable",
            "superFunction": 1541,
            "visibility": "external"
          }
        ],
        "scope": 2084,
        "src": "23400:4690:10"
      }
    ],
    "src": "1423:26668:10"
  },
  "bytecode": "",
  "bytecodeSha1": "1ca7e1b0c53fa29e018964b3e7860c735120a509",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "YearnRewards",
  "coverageMap": {
    "branches": {
      "10": {
        "Ownable._transferOwnership": {
          "69": [
            11072,
            11094,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "63": [
            9911,
            9920,
            true
          ]
        },
        "SafeERC20.callOptionalReturn": {
          "72": [
            21167,
            21194,
            true
          ],
          "73": [
            21385,
            21392,
            true
          ],
          "74": [
            21444,
            21465,
            false
          ],
          "75": [
            21602,
            21632,
            true
          ]
        },
        "SafeMath.add": {
          "68": [
            3194,
            3200,
            true
          ]
        },
        "SafeMath.div": {
          "71": [
            6205,
            6210,
            true
          ]
        },
        "SafeMath.mul": {
          "64": [
            4736,
            4742,
            false
          ],
          "65": [
            4822,
            4832,
            true
          ]
        },
        "SafeMath.sub": {
          "70": [
            4123,
            4129,
            true
          ]
        },
        "YearnRewards.earned": {
          "56": [
            26493,
            26519,
            false
          ]
        },
        "YearnRewards.getReward": {
          "59": [
            27681,
            27691,
            false
          ]
        },
        "YearnRewards.getprofit": {
          "66": [
            25501,
            25528,
            false
          ],
          "67": [
            25705,
            25730,
            false
          ]
        },
        "YearnRewards.notifyRewardAmount": {
          "58": [
            22019,
            22053,
            true
          ]
        },
        "YearnRewards.stake": {
          "60": [
            26017,
            26027,
            false
          ],
          "61": [
            26784,
            26810,
            true
          ],
          "62": [
            26841,
            26851,
            true
          ]
        },
        "YearnRewards.withdraw": {
          "57": [
            27250,
            27260,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {
        "Address.isContract": {
          "55": [
            15603,
            15654
          ]
        },
        "Context._msgSender": {
          "41": [
            8546,
            8563
          ]
        },
        "IRewardDistributionRecipient.setRewardDistribution": {
          "2": [
            22245,
            22285
          ]
        },
        "LPTokenWrapper.balanceOf": {
          "15": [
            22920,
            22945
          ]
        },
        "LPTokenWrapper.stake": {
          "43": [
            23006,
            23045
          ],
          "44": [
            23055,
            23112
          ],
          "45": [
            23122,
            23175
          ]
        },
        "LPTokenWrapper.totalSupply": {
          "3": [
            22812,
            22831
          ]
        },
        "LPTokenWrapper.withdraw": {
          "38": [
            23239,
            23278
          ],
          "39": [
            23288,
            23345
          ],
          "40": [
            23355,
            23389
          ]
        },
        "Ownable._transferOwnership": {
          "46": [
            11051,
            11158
          ],
          "47": [
            11168,
            11211
          ],
          "48": [
            11221,
            11238
          ]
        },
        "Ownable.isOwner": {
          "19": [
            10114,
            10143
          ]
        },
        "Ownable.owner": {
          "18": [
            9764,
            9777
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            10548,
            10593
          ],
          "17": [
            10603,
            10622
          ]
        },
        "Ownable.transferOwnership": {
          "27": [
            10850,
            10878
          ]
        },
        "SafeERC20.callOptionalReturn": {
          "51": [
            21159,
            21230
          ],
          "52": [
            21377,
            21429
          ],
          "53": [
            21577,
            21708
          ]
        },
        "SafeERC20.safeTransfer": {
          "42": [
            18159,
            18278
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "54": [
            18429,
            18558
          ]
        },
        "SafeMath.add": {
          "37": [
            3186,
            3232
          ]
        },
        "SafeMath.div": {
          "32": [
            5428,
            5474
          ],
          "50": [
            6197,
            6225
          ]
        },
        "SafeMath.mul": {
          "28": [
            4758,
            4766
          ],
          "29": [
            4814,
            4870
          ],
          "30": [
            4881,
            4889
          ]
        },
        "SafeMath.sub": {
          "31": [
            3599,
            3649
          ],
          "49": [
            4115,
            4144
          ]
        },
        "YearnRewards.earned": {
          "0": [
            26535,
            26543
          ],
          "1": [
            26574,
            26610
          ]
        },
        "YearnRewards.exit": {
          "26": [
            27537,
            27568
          ]
        },
        "YearnRewards.getPerBlockOutput": {
          "4": [
            25261,
            25289
          ]
        },
        "YearnRewards.getReward": {
          "12": [
            27707,
            27774
          ],
          "13": [
            27788,
            27824
          ],
          "14": [
            27838,
            27873
          ]
        },
        "YearnRewards.getprofit": {
          "33": [
            25543,
            25575
          ],
          "34": [
            25598,
            25636
          ],
          "35": [
            25746,
            25754
          ],
          "36": [
            25826,
            25850
          ]
        },
        "YearnRewards.notifyRewardAmount": {
          "10": [
            28008,
            28034
          ],
          "11": [
            28044,
            28081
          ]
        },
        "YearnRewards.stake": {
          "20": [
            26776,
            26823
          ],
          "21": [
            26833,
            26870
          ],
          "22": [
            26922,
            26945
          ],
          "23": [
            26974,
            27081
          ],
          "24": [
            27101,
            27120
          ],
          "25": [
            27130,
            27161
          ]
        },
        "YearnRewards.withdraw": {
          "5": [
            27242,
            27282
          ],
          "6": [
            27292,
            27303
          ],
          "7": [
            27314,
            27413
          ],
          "8": [
            27423,
            27445
          ],
          "9": [
            27455,
            27489
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IRewardDistributionRecipient",
    "LPTokenWrapper",
    "Ownable",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "23400:4690:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23400:4690:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26349:278;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26349:278:10;-1:-1:-1;;;;;26349:278:10;;:::i;:::-;;;;;;;;;;;;;;;;23600:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23600:42:10;-1:-1:-1;;;;;23600:42:10;;:::i;22136:156::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22136:156:10;-1:-1:-1;;;;;22136:156:10;;:::i;:::-;;24197:33;;;:::i;22749:89::-;;;:::i;23552:41::-;;;:::i;25192:190::-;;;:::i;27174:322::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27174:322:10;;:::i;27896:192::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27896:192:10;;:::i;27581:309::-;;;:::i;22844:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22844:108:10;-1:-1:-1;;;;;22844:108:10;;:::i;10492:137::-;;;:::i;24251:24::-;;;:::i;24317:30::-;;;:::i;9707:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;9707:77:10;;;;;;;;;;;;;;10058:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;22588:68;;;:::i;26715:453::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26715:453:10;;:::i;24412:24::-;;;:::i;23476:70::-;;;:::i;24356:40::-;;;:::i;27502:73::-;;;:::i;10778:107::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10778:107:10;-1:-1:-1;;;;;10778:107:10;;:::i;26349:278::-;26403:7;26422:12;26437:42;26460:18;26470:7;26460:9;:18::i;:::-;26437;;;:42;:22;:42;:::i;:::-;26508:10;26500:19;;;;:7;:19;;;;;;26422:57;;-1:-1:-1;26493:26:10;;26489:132;;;26542:1;26535:8;;;;;26489:132;26598:10;26590:19;;;;:7;:19;;;;;;26581:29;;:4;;:29;:8;:29;:::i;:::-;26574:36;;;26349:278;;;;:::o;23600:42::-;;;;;;;;;;;;;:::o;22136:156::-;9911:9;:7;:9::i;:::-;9903:54;;;;;-1:-1:-1;;;9903:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22245:18;:40;;-1:-1:-1;;;;;;22245:40:10;-1:-1:-1;;;;;22245:40:10;;;;;;;;;;22136:156::o;24197:33::-;;;;:::o;22749:89::-;22819:12;;22749:89;;:::o;23552:41::-;23587:6;23552:41;:::o;25192:190::-;25268:11;;25242:7;;25268:21;;25284:4;25268:21;:15;:21;:::i;:::-;25261:28;;25192:190;:::o;27174:322::-;25975:14;25992:11;:9;:11::i;:::-;25975:28;-1:-1:-1;26017:10:10;;26013:313;;26043:3;;:31;;;-1:-1:-1;;;26043:31:10;;26060:4;26043:31;;;;;;;;;;;;-1:-1:-1;;;;;26043:3:10;;;;:8;;:31;;;;;:3;;:31;;;;;;;;:3;;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;26043:31:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26043:31:10;;;;26092:13;:11;:13::i;:::-;26088:215;;26150:1;26129:18;:22;26088:215;;;26209:79;26249:25;26260:13;:11;:13::i;:::-;26249:6;;:25;:10;:25;:::i;:::-;26209:18;;;:79;:22;:79;:::i;:::-;26188:18;:100;26088:215;27259:1;27250:6;:10;27242:40;;;;;-1:-1:-1;;;27242:40:10;;;;;;;;;;;;-1:-1:-1;;;27242:40:10;;;;;;;;;;;;;;;27292:11;:9;:11::i;:::-;27373:18;;27336:77;;27373:30;;27396:6;27373:30;:22;:30;:::i;:::-;27344:10;27336:19;;;;:7;:19;;;;;;;:77;:23;:77;:::i;:::-;27322:10;27314:19;;;;:7;:19;;;;;:99;27423:22;27438:6;27423:14;:22::i;:::-;27460:29;;;;;;;;27470:10;;27460:29;;;;;;;;;;27174:322;;:::o;27896:192::-;22035:18;;-1:-1:-1;;;;;22035:18:10;22019:12;:10;:12::i;:::-;-1:-1:-1;;;;;22019:34:10;;21998:114;;;;-1:-1:-1;;;21998:114:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28008:11;:26;;;28049:32;;;;;;;;;;;;;;;;;27896:192;:::o;27581:309::-;25975:14;25992:11;:9;:11::i;:::-;25975:28;-1:-1:-1;26017:10:10;;26013:313;;26043:3;;:31;;;-1:-1:-1;;;26043:31:10;;26060:4;26043:31;;;;;;;;;;;;-1:-1:-1;;;;;26043:3:10;;;;:8;;:31;;;;;:3;;:31;;;;;;;;:3;;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;26043:31:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26043:31:10;;;;26092:13;:11;:13::i;:::-;26088:215;;26150:1;26129:18;:22;26088:215;;;26209:79;26249:25;26260:13;:11;:13::i;26209:79::-;26188:18;:100;26088:215;27632:14;27649:18;27656:10;27649:6;:18::i;:::-;27632:35;-1:-1:-1;27681:10:10;;27677:207;;27729:45;27752:21;27762:10;27752:9;:21::i;27729:45::-;27715:10;27707:19;;;;:7;:19;;;;;:67;;;;27788:3;;:36;;-1:-1:-1;;;;;27788:3:10;;;;27817:6;27788:16;:36::i;:::-;27843:30;;;;;;;;27854:10;;27843:30;;;;;;;;;;27677:207;26335:1;27581:309;:::o;22844:108::-;-1:-1:-1;;;;;22927:18:10;22901:7;22927:18;;;:9;:18;;;;;;;22844:108::o;10492:137::-;9911:9;:7;:9::i;:::-;9903:54;;;;;-1:-1:-1;;;9903:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10574:6;;10553:40;;10590:1;;-1:-1:-1;;;;;10574:6:10;;10553:40;;10590:1;;10553:40;10603:6;:19;;-1:-1:-1;;;;;;10603:19:10;;;10492:137::o;24251:24::-;;;;:::o;24317:30::-;;;;:::o;9707:77::-;9771:6;;-1:-1:-1;;;;;9771:6:10;9707:77;:::o;10058:92::-;10137:6;;10098:4;;-1:-1:-1;;;;;10137:6:10;10121:12;:10;:12::i;:::-;-1:-1:-1;;;;;10121:22:10;;10114:29;;10058:92;:::o;22588:68::-;;;-1:-1:-1;;;;;22588:68:10;;:::o;26715:453::-;25975:14;25992:11;:9;:11::i;:::-;25975:28;-1:-1:-1;26017:10:10;;26013:313;;26043:3;;:31;;;-1:-1:-1;;;26043:31:10;;26060:4;26043:31;;;;;;;;;;;;-1:-1:-1;;;;;26043:3:10;;;;:8;;:31;;;;;:3;;:31;;;;;;;;:3;;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;26043:31:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26043:31:10;;;;26092:13;:11;:13::i;:::-;26088:215;;26150:1;26129:18;:22;26088:215;;;26209:79;26249:25;26260:13;:11;:13::i;26209:79::-;26188:18;:100;26088:215;26801:9;;26784:15;:26;26776:47;;;;;-1:-1:-1;;;26776:47:10;;;;;;;;;;;;-1:-1:-1;;;26776:47:10;;;;;;;;;;;;;;;26850:1;26841:6;:10;26833:37;;;;;-1:-1:-1;;;26833:37:10;;;;;;;;;;;;-1:-1:-1;;;26833:37:10;;;;;;;;;;;;;;;26884:18;;26880:212;;26930:10;26944:1;26922:19;;;:7;:19;;;;;:23;26880:212;;;27037:18;;26996:85;;27037:30;;27060:6;27037:30;:22;:30;:::i;:::-;27004:10;26996:19;;;;:7;:19;;;;;;;:85;:23;:85;:::i;:::-;26982:10;26974:19;;;;:7;:19;;;;;:107;26880:212;27101:19;27113:6;27101:11;:19::i;:::-;27135:26;;;;;;;;27142:10;;27135:26;;;;;;;;;;26715:453;;:::o;24412:24::-;;;;:::o;23476:70::-;;;-1:-1:-1;;;;;23476:70:10;;:::o;24356:40::-;;;;:::o;27502:73::-;27537:31;27546:21;27556:10;27546:9;:21::i;:::-;27537:8;:31::i;:::-;27502:73::o;10778:107::-;9911:9;:7;:9::i;:::-;9903:54;;;;;-1:-1:-1;;;9903:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10850:28;10869:8;10850:18;:28::i;:::-;10778:107;:::o;4437:459::-;4495:7;4736:6;4732:45;;-1:-1:-1;4765:1:10;4758:8;;4732:45;4799:5;;;4803:1;4799;:5;:1;4822:5;;;;;:10;4814:56;;;;-1:-1:-1;;;4814:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4888:1;-1:-1:-1;4437:459:10;;;;;:::o;3522:134::-;3580:7;3606:43;3610:1;3613;3606:43;;;;;;;;;;;;;;;;;:3;:43::i;5351:130::-;5409:7;5435:39;5439:1;5442;5435:39;;;;;;;;;;;;;;;;;:3;:39::i;25440:496::-;25478:7;25519:9;;25501:15;:27;25497:150;;;25557:11;;:18;;25573:1;25557:18;:15;:18;:::i;:::-;25543:11;:32;25610:15;23587:6;25610:26;25598:9;:38;25497:150;25721:9;;25679:12;;25705:25;;25701:64;;25753:1;25746:8;;;;;25701:64;25774:12;25789:27;25806:9;;25789:12;:16;;:27;;;;:::i;:::-;25826:9;:24;;;25774:42;-1:-1:-1;25860:14:10;25877:29;25886:19;:17;:19::i;:::-;25877:4;;:29;:8;:29;:::i;:::-;25860:46;-1:-1:-1;;;;25440:496:10;:::o;3082:176::-;3140:7;3171:5;;;3194:6;;;;3186:46;;;;;-1:-1:-1;;;3186:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;23188:208;23254:12;;:24;;23271:6;23254:24;:16;:24;:::i;:::-;23239:12;:39;23322:10;23312:21;;;;:9;:21;;;;;;:33;;23338:6;23312:33;:25;:33;:::i;:::-;23298:10;23288:21;;;;:9;:21;;;;;:57;;;;23355:1;;:34;;-1:-1:-1;;;;;23355:1:10;;;;23382:6;23355:14;:34::i;8474:96::-;8553:10;8474:96;:::o;18047:238::-;18210:58;;;-1:-1:-1;;;;;18210:58:10;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;18210:58:10;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;18159:119:10;;18191:5;;18159:18;:119::i;:::-;18047:238;;;:::o;22958:224::-;23021:12;;:24;;23038:6;23021:24;:16;:24;:::i;:::-;23006:12;:39;23089:10;23079:21;;;;:9;:21;;;;;;:33;;23105:6;23079:33;:25;:33;:::i;:::-;23065:10;23055:21;;;;:9;:21;;;;;:57;;;;23122:1;;:53;;-1:-1:-1;;;;;23122:1:10;;;;23161:4;23168:6;23122:18;:53::i;10986:259::-;-1:-1:-1;;;;;11072:22:10;;11051:107;;;;-1:-1:-1;;;11051:107:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11194:6;;11173:38;;-1:-1:-1;;;;;11173:38:10;;;;11194:6;;11173:38;;11194:6;;11173:38;11221:6;:17;;-1:-1:-1;;;;;;11221:17:10;-1:-1:-1;;;;;11221:17:10;;;;;;;;;;10986:259::o;3980:217::-;4096:7;4131:12;4123:6;;;;4115:29;;;;-1:-1:-1;;;4115:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4115:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4166:5:10;;;3980:217::o;5996:368::-;6112:7;6212:12;6205:5;6197:28;;;;-1:-1:-1;;;6197:28:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;6197:28:10;;6235:9;6251:1;6247;:5;;;;;;;5996:368;-1:-1:-1;;;;;5996:368:10:o;20572:1153::-;21167:27;21175:5;-1:-1:-1;;;;;21167:25:10;;:27::i;:::-;21159:71;;;;;-1:-1:-1;;;21159:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;21301:12;21315:23;21350:5;-1:-1:-1;;;;;21342:19:10;21362:4;21342:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;21342:25:10;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;21300:67:10;;;;21385:7;21377:52;;;;;-1:-1:-1;;;21377:52:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21444:17;;:21;21440:279;;21613:10;21602:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21602:30:10;21577:131;;;;-1:-1:-1;;;21577:131:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20572:1153;;;;:::o;18291:274::-;18480:68;;;-1:-1:-1;;;;;18480:68:10;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;18480:68:10;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;18429:129:10;;18461:5;;18429:18;:129::i;14829:832::-;14889:4;15564:20;;15397:66;15611:15;;;;;:42;;;15642:11;15630:8;:23;;15611:42;15603:51;14829:832;-1:-1:-1;;;;14829:832:10:o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "offset": [
    23400,
    28090
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xBC0C4A47 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xE310FA5D EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xE653CE8C EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2FC JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x827D1BAE EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x8DA58897 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xA56DFE4A EQ PUSH2 0x2B7 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x1BE05289 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x1BE05289 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x24232628 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x239 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xD68B761 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xF933E90 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38E JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x177 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x42F JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x177 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x177 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x27F PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x177 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x331 DUP5 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB14 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x389 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x385 SWAP1 DUP3 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB76 AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x3F9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x447 SWAP1 PUSH2 0x19F6 PUSH4 0xFFFFFFFF PUSH2 0xBB8 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 PUSH2 0xBFA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x50D JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4D1 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x4DF JUMPI PUSH1 0x0 PUSH1 0x7 SSTORE PUSH2 0x50D JUMP JUMPDEST PUSH2 0x509 PUSH2 0x4FA PUSH2 0x4ED PUSH2 0x421 JUMP JUMPDEST DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xBB8 AND JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC7C AND JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x556 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x55E PUSH2 0x678 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x591 SWAP1 PUSH2 0x575 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xB14 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB76 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x5AA DUP3 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5F8 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x122D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x1702529777B8EACA0E71284C63404E87C78645F2E8D0E92A8130F6A8326200C SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 PUSH2 0xBFA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x71D JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6FD PUSH2 0x421 JUMP JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x0 PUSH1 0x7 SSTORE PUSH2 0x71D JUMP JUMPDEST PUSH2 0x719 PUSH2 0x4FA PUSH2 0x4ED PUSH2 0x421 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x728 CALLER PUSH2 0x322 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x79F JUMPI PUSH2 0x73C PUSH2 0x331 CALLER PUSH2 0x7A3 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0x768 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7C6 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x817 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x893 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BB PUSH2 0xBFA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x40C10F19 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x936 PUSH2 0x421 JUMP JUMPDEST PUSH2 0x944 JUMPI PUSH1 0x0 PUSH1 0x7 SSTORE PUSH2 0x956 JUMP JUMPDEST PUSH2 0x952 PUSH2 0x4FA PUSH2 0x4ED PUSH2 0x421 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP GT PUSH2 0x998 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1B9BDD081CDD185C9D PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x9FA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xA2D SWAP1 PUSH2 0xA11 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xB14 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC7C AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xA47 DUP3 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAAD PUSH2 0xAA8 CALLER PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAB7 PUSH2 0x87C JUMP JUMPDEST PUSH2 0xB08 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB11 DUP2 PUSH2 0xDF4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB23 JUMPI POP PUSH1 0x0 PUSH2 0xB70 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xB30 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xB6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x120C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD TIMESTAMP GT ISZERO PUSH2 0xC27 JUMPI PUSH1 0xA SLOAD PUSH2 0xC1A SWAP1 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xBB8 AND JUMP JUMPDEST PUSH1 0xA SSTORE TIMESTAMP PUSH3 0x93A80 ADD PUSH1 0xB SSTORE JUMPDEST PUSH1 0x8 SLOAD NUMBER SWAP1 DUP2 GT PUSH2 0xC3C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x425 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC53 PUSH1 0x8 SLOAD DUP4 PUSH2 0xB76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP4 SWAP1 SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0xC74 PUSH2 0xC67 PUSH2 0x42F JUMP JUMPDEST DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB14 AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB6D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCE9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB76 AND JUMP JUMPDEST PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD0C SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB76 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0xB11 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xD3B JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xD8D SWAP1 DUP5 SWAP1 PUSH2 0xF91 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xDA5 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC7C AND JUMP JUMPDEST PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDC8 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xC7C AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0xB11 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP5 PUSH2 0x114F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11E6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEE9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xED1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF16 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xEE9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xED1 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xF87 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFA3 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0xFF4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1032 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1094 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x10F0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1149 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1149 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x124E PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1149 SWAP1 DUP6 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11DD JUMPI POP DUP1 DUP3 EQ ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F7743616C6C6572206973206E PUSH16 0x74207265776172642064697374726962 PUSH22 0x74696F6E5361666545524332303A204552433230206F PUSH17 0x65726174696F6E20646964206E6F742073 PUSH22 0x6363656564A265627A7A72315820B21B0BF941B616E4 NUMBER 0xCC 0xC0 SSTORE LT 0x27 POP 0xD8 GT PUSH25 0x1B762B3AACD535815A12456E8AC864736F6C63430005110032 ",
  "pcMap": {
    "0": {
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        23400,
        28090
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "25": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA694FC3A"
    },
    "49": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA694FC3A"
    },
    "60": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BF"
    },
    "64": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xBC0C4A47"
    },
    "71": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DC"
    },
    "75": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE310FA5D"
    },
    "82": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E4"
    },
    "86": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE653CE8C"
    },
    "93": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2EC"
    },
    "97": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE9FAD8EE"
    },
    "104": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F4"
    },
    "108": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "116": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FC"
    },
    "119": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "120": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "123": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMP",
      "path": "10"
    },
    "124": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25F"
    },
    "135": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x827D1BAE"
    },
    "142": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x267"
    },
    "146": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA58897"
    },
    "153": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "154": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F"
    },
    "157": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "164": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "165": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x277"
    },
    "168": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "169": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8F32D59B"
    },
    "175": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "176": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29B"
    },
    "179": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "180": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA56DFE4A"
    },
    "186": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "187": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B7"
    },
    "190": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "191": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "194": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMP",
      "path": "10"
    },
    "195": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "197": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1BE05289"
    },
    "202": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "GT",
      "path": "10"
    },
    "203": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1BE05289"
    },
    "213": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "214": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E7"
    },
    "217": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "218": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x24232628"
    },
    "224": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "225": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EF"
    },
    "228": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "229": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "230": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2E1A7D4D"
    },
    "235": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "236": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F7"
    },
    "239": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "240": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "241": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3C6B16AB"
    },
    "246": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "247": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x214"
    },
    "250": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "251": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "252": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3D18B912"
    },
    "257": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "258": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x231"
    },
    "261": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "262": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "263": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "268": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "269": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x239"
    },
    "272": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "273": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "276": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMP",
      "path": "10"
    },
    "277": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "278": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "279": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x8CC262"
    },
    "283": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "284": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x151"
    },
    "287": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "288": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "289": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x700037D"
    },
    "294": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "295": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x189"
    },
    "298": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "299": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "300": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD68B761"
    },
    "305": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "306": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AF"
    },
    "309": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "310": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "311": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF933E90"
    },
    "316": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "317": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D7"
    },
    "320": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "321": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "322": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "327": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "EQ",
      "path": "10"
    },
    "328": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DF"
    },
    "331": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "332": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "333": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "335": {
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "336": {
      "first_revert": true,
      "fn": null,
      "offset": [
        23400,
        28090
      ],
      "op": "REVERT",
      "path": "10"
    },
    "337": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "338": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "341": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "343": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "DUP1",
      "path": "10"
    },
    "344": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "345": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "SUB",
      "path": "10"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "348": {
      "op": "DUP2"
    },
    "349": {
      "op": "LT"
    },
    "350": {
      "op": "ISZERO"
    },
    "351": {
      "op": "PUSH2",
      "value": "0x167"
    },
    "354": {
      "op": "JUMPI"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "357": {
      "op": "DUP1"
    },
    "358": {
      "op": "REVERT"
    },
    "359": {
      "op": "JUMPDEST"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "368": {
      "op": "SHL"
    },
    "369": {
      "op": "SUB"
    },
    "370": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "AND",
      "path": "10"
    },
    "371": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x322"
    },
    "374": {
      "fn": "YearnRewards.earned",
      "jump": "i",
      "offset": [
        26349,
        26627
      ],
      "op": "JUMP",
      "path": "10"
    },
    "375": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "376": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "378": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "DUP1",
      "path": "10"
    },
    "379": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "380": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "381": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "DUP3",
      "path": "10"
    },
    "382": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "383": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "384": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "385": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "DUP2",
      "path": "10"
    },
    "386": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "387": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "SUB",
      "path": "10"
    },
    "388": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "390": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "ADD",
      "path": "10"
    },
    "391": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "392": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "RETURN",
      "path": "10"
    },
    "393": {
      "offset": [
        23600,
        23642
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "394": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "397": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "399": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "DUP1",
      "path": "10"
    },
    "400": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "401": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "SUB",
      "path": "10"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "404": {
      "op": "DUP2"
    },
    "405": {
      "op": "LT"
    },
    "406": {
      "op": "ISZERO"
    },
    "407": {
      "op": "PUSH2",
      "value": "0x19F"
    },
    "410": {
      "op": "JUMPI"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "413": {
      "op": "DUP1"
    },
    "414": {
      "op": "REVERT"
    },
    "415": {
      "op": "JUMPDEST"
    },
    "416": {
      "op": "POP"
    },
    "417": {
      "offset": [
        23600,
        23642
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "424": {
      "op": "SHL"
    },
    "425": {
      "op": "SUB"
    },
    "426": {
      "offset": [
        23600,
        23642
      ],
      "op": "AND",
      "path": "10"
    },
    "427": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38E"
    },
    "430": {
      "fn": "YearnRewards.earned",
      "jump": "i",
      "offset": [
        23600,
        23642
      ],
      "op": "JUMP",
      "path": "10"
    },
    "431": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "432": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "435": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "437": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "DUP1",
      "path": "10"
    },
    "438": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "439": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "SUB",
      "path": "10"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "442": {
      "op": "DUP2"
    },
    "443": {
      "op": "LT"
    },
    "444": {
      "op": "ISZERO"
    },
    "445": {
      "op": "PUSH2",
      "value": "0x1C5"
    },
    "448": {
      "op": "JUMPI"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "451": {
      "op": "DUP1"
    },
    "452": {
      "op": "REVERT"
    },
    "453": {
      "op": "JUMPDEST"
    },
    "454": {
      "op": "POP"
    },
    "455": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "462": {
      "op": "SHL"
    },
    "463": {
      "op": "SUB"
    },
    "464": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "AND",
      "path": "10"
    },
    "465": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A0"
    },
    "468": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "jump": "i",
      "offset": [
        22136,
        22292
      ],
      "op": "JUMP",
      "path": "10"
    },
    "469": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "470": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "STOP",
      "path": "10"
    },
    "471": {
      "offset": [
        24197,
        24230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "472": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        24197,
        24230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "475": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        24197,
        24230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41B"
    },
    "478": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "jump": "i",
      "offset": [
        24197,
        24230
      ],
      "op": "JUMP",
      "path": "10"
    },
    "479": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        22749,
        22838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "480": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        22749,
        22838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "483": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        22749,
        22838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x421"
    },
    "486": {
      "fn": "LPTokenWrapper.totalSupply",
      "jump": "i",
      "offset": [
        22749,
        22838
      ],
      "op": "JUMP",
      "path": "10"
    },
    "487": {
      "offset": [
        23552,
        23593
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "488": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        23552,
        23593
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "491": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        23552,
        23593
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x428"
    },
    "494": {
      "fn": "LPTokenWrapper.totalSupply",
      "jump": "i",
      "offset": [
        23552,
        23593
      ],
      "op": "JUMP",
      "path": "10"
    },
    "495": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25192,
        25382
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "496": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25192,
        25382
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "499": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25192,
        25382
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42F"
    },
    "502": {
      "fn": "YearnRewards.getPerBlockOutput",
      "jump": "i",
      "offset": [
        25192,
        25382
      ],
      "op": "JUMP",
      "path": "10"
    },
    "503": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "504": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "507": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "509": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "DUP1",
      "path": "10"
    },
    "510": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "511": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "SUB",
      "path": "10"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "514": {
      "op": "DUP2"
    },
    "515": {
      "op": "LT"
    },
    "516": {
      "op": "ISZERO"
    },
    "517": {
      "op": "PUSH2",
      "value": "0x20D"
    },
    "520": {
      "op": "JUMPI"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "523": {
      "op": "DUP1"
    },
    "524": {
      "op": "REVERT"
    },
    "525": {
      "op": "JUMPDEST"
    },
    "526": {
      "op": "POP"
    },
    "527": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "528": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44C"
    },
    "531": {
      "fn": "YearnRewards.withdraw",
      "jump": "i",
      "offset": [
        27174,
        27496
      ],
      "op": "JUMP",
      "path": "10"
    },
    "532": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "533": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "536": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "538": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "DUP1",
      "path": "10"
    },
    "539": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "540": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "SUB",
      "path": "10"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "543": {
      "op": "DUP2"
    },
    "544": {
      "op": "LT"
    },
    "545": {
      "op": "ISZERO"
    },
    "546": {
      "op": "PUSH2",
      "value": "0x22A"
    },
    "549": {
      "op": "JUMPI"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "552": {
      "op": "DUP1"
    },
    "553": {
      "op": "REVERT"
    },
    "554": {
      "op": "JUMPDEST"
    },
    "555": {
      "op": "POP"
    },
    "556": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "557": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5E4"
    },
    "560": {
      "fn": "YearnRewards.notifyRewardAmount",
      "jump": "i",
      "offset": [
        27896,
        28088
      ],
      "op": "JUMP",
      "path": "10"
    },
    "561": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27581,
        27890
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "562": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27581,
        27890
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "565": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27581,
        27890
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x678"
    },
    "568": {
      "fn": "YearnRewards.getReward",
      "jump": "i",
      "offset": [
        27581,
        27890
      ],
      "op": "JUMP",
      "path": "10"
    },
    "569": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "570": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "573": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "575": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "DUP1",
      "path": "10"
    },
    "576": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "577": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "SUB",
      "path": "10"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "580": {
      "op": "DUP2"
    },
    "581": {
      "op": "LT"
    },
    "582": {
      "op": "ISZERO"
    },
    "583": {
      "op": "PUSH2",
      "value": "0x24F"
    },
    "586": {
      "op": "JUMPI"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "589": {
      "op": "DUP1"
    },
    "590": {
      "op": "REVERT"
    },
    "591": {
      "op": "JUMPDEST"
    },
    "592": {
      "op": "POP"
    },
    "593": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "600": {
      "op": "SHL"
    },
    "601": {
      "op": "SUB"
    },
    "602": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "AND",
      "path": "10"
    },
    "603": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A3"
    },
    "606": {
      "fn": "LPTokenWrapper.balanceOf",
      "jump": "i",
      "offset": [
        22844,
        22952
      ],
      "op": "JUMP",
      "path": "10"
    },
    "607": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10492,
        10629
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "608": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10492,
        10629
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "611": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10492,
        10629
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7BE"
    },
    "614": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        10492,
        10629
      ],
      "op": "JUMP",
      "path": "10"
    },
    "615": {
      "offset": [
        24251,
        24275
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24251,
        24275
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "619": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24251,
        24275
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x861"
    },
    "622": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        24251,
        24275
      ],
      "op": "JUMP",
      "path": "10"
    },
    "623": {
      "offset": [
        24317,
        24347
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "624": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24317,
        24347
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "627": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24317,
        24347
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x867"
    },
    "630": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        24317,
        24347
      ],
      "op": "JUMP",
      "path": "10"
    },
    "631": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "632": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27F"
    },
    "635": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x86D"
    },
    "638": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        9707,
        9784
      ],
      "op": "JUMP",
      "path": "10"
    },
    "639": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "640": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "642": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "DUP1",
      "path": "10"
    },
    "643": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "op": "SUB"
    },
    "652": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "653": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "654": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "AND",
      "path": "10"
    },
    "655": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "DUP3",
      "path": "10"
    },
    "656": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "657": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "658": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "659": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "DUP2",
      "path": "10"
    },
    "660": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "661": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "SUB",
      "path": "10"
    },
    "662": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "664": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "ADD",
      "path": "10"
    },
    "665": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "666": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "RETURN",
      "path": "10"
    },
    "667": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "668": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A3"
    },
    "671": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x87C"
    },
    "674": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        10058,
        10150
      ],
      "op": "JUMP",
      "path": "10"
    },
    "675": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "676": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "678": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "DUP1",
      "path": "10"
    },
    "679": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "680": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "681": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "682": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "683": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "DUP3",
      "path": "10"
    },
    "684": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "685": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "686": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "687": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "DUP2",
      "path": "10"
    },
    "688": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "689": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "SUB",
      "path": "10"
    },
    "690": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "692": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "ADD",
      "path": "10"
    },
    "693": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "694": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "RETURN",
      "path": "10"
    },
    "695": {
      "offset": [
        22588,
        22656
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "696": {
      "fn": "Ownable.isOwner",
      "offset": [
        22588,
        22656
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27F"
    },
    "699": {
      "fn": "Ownable.isOwner",
      "offset": [
        22588,
        22656
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A2"
    },
    "702": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        22588,
        22656
      ],
      "op": "JUMP",
      "path": "10"
    },
    "703": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "704": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "707": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "709": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "DUP1",
      "path": "10"
    },
    "710": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "711": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "SUB",
      "path": "10"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "714": {
      "op": "DUP2"
    },
    "715": {
      "op": "LT"
    },
    "716": {
      "op": "ISZERO"
    },
    "717": {
      "op": "PUSH2",
      "value": "0x2D5"
    },
    "720": {
      "op": "JUMPI"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "723": {
      "op": "DUP1"
    },
    "724": {
      "op": "REVERT"
    },
    "725": {
      "op": "JUMPDEST"
    },
    "726": {
      "op": "POP"
    },
    "727": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "728": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8B1"
    },
    "731": {
      "fn": "YearnRewards.stake",
      "jump": "i",
      "offset": [
        26715,
        27168
      ],
      "op": "JUMP",
      "path": "10"
    },
    "732": {
      "offset": [
        24412,
        24436
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "733": {
      "fn": "YearnRewards.stake",
      "offset": [
        24412,
        24436
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "736": {
      "fn": "YearnRewards.stake",
      "offset": [
        24412,
        24436
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA81"
    },
    "739": {
      "fn": "YearnRewards.stake",
      "jump": "i",
      "offset": [
        24412,
        24436
      ],
      "op": "JUMP",
      "path": "10"
    },
    "740": {
      "offset": [
        23476,
        23546
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "741": {
      "fn": "YearnRewards.stake",
      "offset": [
        23476,
        23546
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27F"
    },
    "744": {
      "fn": "YearnRewards.stake",
      "offset": [
        23476,
        23546
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA87"
    },
    "747": {
      "fn": "YearnRewards.stake",
      "jump": "i",
      "offset": [
        23476,
        23546
      ],
      "op": "JUMP",
      "path": "10"
    },
    "748": {
      "offset": [
        24356,
        24396
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "749": {
      "fn": "YearnRewards.stake",
      "offset": [
        24356,
        24396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "752": {
      "fn": "YearnRewards.stake",
      "offset": [
        24356,
        24396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA96"
    },
    "755": {
      "fn": "YearnRewards.stake",
      "jump": "i",
      "offset": [
        24356,
        24396
      ],
      "op": "JUMP",
      "path": "10"
    },
    "756": {
      "fn": "YearnRewards.exit",
      "offset": [
        27502,
        27575
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "757": {
      "fn": "YearnRewards.exit",
      "offset": [
        27502,
        27575
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "760": {
      "fn": "YearnRewards.exit",
      "offset": [
        27502,
        27575
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA9C"
    },
    "763": {
      "fn": "YearnRewards.exit",
      "jump": "i",
      "offset": [
        27502,
        27575
      ],
      "op": "JUMP",
      "path": "10"
    },
    "764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D5"
    },
    "768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "DUP1",
      "path": "10"
    },
    "771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "SUB",
      "path": "10"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "775": {
      "op": "DUP2"
    },
    "776": {
      "op": "LT"
    },
    "777": {
      "op": "ISZERO"
    },
    "778": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "781": {
      "op": "JUMPI"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "784": {
      "op": "DUP1"
    },
    "785": {
      "op": "REVERT"
    },
    "786": {
      "op": "JUMPDEST"
    },
    "787": {
      "op": "POP"
    },
    "788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "AND",
      "path": "10"
    },
    "798": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAAF"
    },
    "801": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        10778,
        10885
      ],
      "op": "JUMP",
      "path": "10"
    },
    "802": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "803": {
      "fn": "YearnRewards.earned",
      "offset": [
        26403,
        26410
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "805": {
      "fn": "YearnRewards.earned",
      "offset": [
        26422,
        26434
      ],
      "op": "DUP1",
      "path": "10"
    },
    "806": {
      "fn": "YearnRewards.earned",
      "offset": [
        26437,
        26479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x340"
    },
    "809": {
      "fn": "YearnRewards.earned",
      "offset": [
        26460,
        26478
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x331"
    },
    "812": {
      "fn": "YearnRewards.earned",
      "offset": [
        26470,
        26477
      ],
      "op": "DUP5",
      "path": "10"
    },
    "813": {
      "fn": "YearnRewards.earned",
      "offset": [
        26460,
        26469
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A3"
    },
    "816": {
      "fn": "YearnRewards.earned",
      "jump": "i",
      "offset": [
        26460,
        26478
      ],
      "op": "JUMP",
      "path": "10"
    },
    "817": {
      "fn": "YearnRewards.earned",
      "offset": [
        26460,
        26478
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "818": {
      "fn": "YearnRewards.earned",
      "offset": [
        26437,
        26455
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "820": {
      "fn": "YearnRewards.earned",
      "offset": [
        26437,
        26455
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "821": {
      "fn": "YearnRewards.earned",
      "offset": [
        26437,
        26455
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "822": {
      "fn": "YearnRewards.earned",
      "offset": [
        26437,
        26479
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "827": {
      "fn": "YearnRewards.earned",
      "offset": [
        26437,
        26459
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB14"
    },
    "830": {
      "fn": "YearnRewards.earned",
      "offset": [
        26437,
        26479
      ],
      "op": "AND",
      "path": "10"
    },
    "831": {
      "fn": "YearnRewards.earned",
      "jump": "i",
      "offset": [
        26437,
        26479
      ],
      "op": "JUMP",
      "path": "10"
    },
    "832": {
      "fn": "YearnRewards.earned",
      "offset": [
        26437,
        26479
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "833": {
      "fn": "YearnRewards.earned",
      "offset": [
        26508,
        26518
      ],
      "op": "CALLER",
      "path": "10"
    },
    "834": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "836": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "837": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "DUP2",
      "path": "10"
    },
    "838": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "839": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26507
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "841": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "843": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "844": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "846": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "847": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "848": {
      "fn": "YearnRewards.earned",
      "offset": [
        26500,
        26519
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "849": {
      "fn": "YearnRewards.earned",
      "offset": [
        26422,
        26479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "850": {
      "fn": "YearnRewards.earned",
      "offset": [
        26422,
        26479
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "fn": "YearnRewards.earned",
      "offset": [
        26493,
        26519
      ],
      "op": "DUP2",
      "path": "10"
    },
    "853": {
      "branch": 56,
      "fn": "YearnRewards.earned",
      "offset": [
        26493,
        26519
      ],
      "op": "LT",
      "path": "10"
    },
    "854": {
      "fn": "YearnRewards.earned",
      "offset": [
        26489,
        26621
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "855": {
      "fn": "YearnRewards.earned",
      "offset": [
        26489,
        26621
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x364"
    },
    "858": {
      "branch": 56,
      "fn": "YearnRewards.earned",
      "offset": [
        26489,
        26621
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "859": {
      "fn": "YearnRewards.earned",
      "offset": [
        26542,
        26543
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x0"
    },
    "861": {
      "fn": "YearnRewards.earned",
      "offset": [
        26535,
        26543
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "862": {
      "fn": "YearnRewards.earned",
      "offset": [
        26535,
        26543
      ],
      "op": "POP",
      "path": "10"
    },
    "863": {
      "fn": "YearnRewards.earned",
      "offset": [
        26535,
        26543
      ],
      "op": "POP",
      "path": "10"
    },
    "864": {
      "fn": "YearnRewards.earned",
      "offset": [
        26535,
        26543
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x389"
    },
    "867": {
      "fn": "YearnRewards.earned",
      "offset": [
        26535,
        26543
      ],
      "op": "JUMP",
      "path": "10"
    },
    "868": {
      "fn": "YearnRewards.earned",
      "offset": [
        26489,
        26621
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "869": {
      "fn": "YearnRewards.earned",
      "offset": [
        26598,
        26608
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 1
    },
    "870": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "872": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "873": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "DUP2",
      "path": "10"
    },
    "874": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "875": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26597
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "877": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "879": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "880": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "882": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "883": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "884": {
      "fn": "YearnRewards.earned",
      "offset": [
        26590,
        26609
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "885": {
      "fn": "YearnRewards.earned",
      "offset": [
        26581,
        26610
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x385"
    },
    "888": {
      "fn": "YearnRewards.earned",
      "offset": [
        26581,
        26610
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "889": {
      "fn": "YearnRewards.earned",
      "offset": [
        26581,
        26585
      ],
      "op": "DUP3",
      "path": "10"
    },
    "890": {
      "fn": "YearnRewards.earned",
      "offset": [
        26581,
        26585
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "891": {
      "fn": "YearnRewards.earned",
      "offset": [
        26581,
        26610
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "896": {
      "fn": "YearnRewards.earned",
      "offset": [
        26581,
        26589
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB76"
    },
    "899": {
      "fn": "YearnRewards.earned",
      "offset": [
        26581,
        26610
      ],
      "op": "AND",
      "path": "10"
    },
    "900": {
      "fn": "YearnRewards.earned",
      "jump": "i",
      "offset": [
        26581,
        26610
      ],
      "op": "JUMP",
      "path": "10"
    },
    "901": {
      "fn": "YearnRewards.earned",
      "offset": [
        26581,
        26610
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "902": {
      "fn": "YearnRewards.earned",
      "offset": [
        26574,
        26610
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "903": {
      "fn": "YearnRewards.earned",
      "offset": [
        26574,
        26610
      ],
      "op": "POP",
      "path": "10"
    },
    "904": {
      "fn": "YearnRewards.earned",
      "offset": [
        26574,
        26610
      ],
      "op": "POP",
      "path": "10"
    },
    "905": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "906": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "907": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "908": {
      "fn": "YearnRewards.earned",
      "offset": [
        26349,
        26627
      ],
      "op": "POP",
      "path": "10"
    },
    "909": {
      "fn": "YearnRewards.earned",
      "jump": "o",
      "offset": [
        26349,
        26627
      ],
      "op": "JUMP",
      "path": "10"
    },
    "910": {
      "offset": [
        23600,
        23642
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "911": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "913": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "915": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "916": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "918": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "919": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "DUP2",
      "path": "10"
    },
    "920": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "921": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "923": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "924": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "925": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "926": {
      "fn": "YearnRewards.earned",
      "offset": [
        23600,
        23642
      ],
      "op": "DUP2",
      "path": "10"
    },
    "927": {
      "fn": "YearnRewards.earned",
      "jump": "o",
      "offset": [
        23600,
        23642
      ],
      "op": "JUMP",
      "path": "10"
    },
    "928": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22136,
        22292
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "929": {
      "offset": [
        9911,
        9920
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A8"
    },
    "932": {
      "offset": [
        9911,
        9918
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x87C"
    },
    "935": {
      "jump": "i",
      "offset": [
        9911,
        9920
      ],
      "op": "JUMP",
      "path": "10"
    },
    "936": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9911,
        9920
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "937": {
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F9"
    },
    "940": {
      "offset": [
        9903,
        9957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "941": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "943": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "944": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "945": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "949": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "951": {
      "op": "SHL"
    },
    "952": {
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "953": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "954": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "956": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "958": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "959": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "960": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "961": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "962": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "963": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "965": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "966": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "967": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "968": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1001": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1003": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1004": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "1005": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1006": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1007": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1008": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1009": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1010": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1011": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "SUB",
      "path": "10"
    },
    "1012": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1014": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "1015": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1016": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1017": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        9903,
        9957
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1018": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22263
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 2,
      "value": "0x4"
    },
    "1020": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1021": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1028": {
      "op": "SHL"
    },
    "1029": {
      "op": "SUB"
    },
    "1030": {
      "op": "NOT"
    },
    "1031": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "AND",
      "path": "10"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1041": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1042": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1043": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "AND",
      "path": "10"
    },
    "1044": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1045": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1046": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1047": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "OR",
      "path": "10"
    },
    "1048": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1049": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        22245,
        22285
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1050": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "jump": "o",
      "offset": [
        22136,
        22292
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1051": {
      "offset": [
        24197,
        24230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1052": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        24197,
        24230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1054": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        24197,
        24230
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1055": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "offset": [
        24197,
        24230
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1056": {
      "fn": "IRewardDistributionRecipient.setRewardDistribution",
      "jump": "o",
      "offset": [
        24197,
        24230
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1057": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        22749,
        22838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1058": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        22819,
        22831
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x1"
    },
    "1060": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        22819,
        22831
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1061": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        22749,
        22838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1062": {
      "fn": "LPTokenWrapper.totalSupply",
      "offset": [
        22749,
        22838
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1063": {
      "fn": "LPTokenWrapper.totalSupply",
      "jump": "o",
      "offset": [
        22749,
        22838
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1064": {
      "offset": [
        23552,
        23593
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1065": {
      "offset": [
        23587,
        23593
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x93A80"
    },
    "1069": {
      "offset": [
        23552,
        23593
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1070": {
      "fn": "LPTokenWrapper.totalSupply",
      "jump": "o",
      "offset": [
        23552,
        23593
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1071": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25192,
        25382
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1072": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25268,
        25279
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0xA"
    },
    "1074": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25268,
        25279
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1075": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25242,
        25249
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1077": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25242,
        25249
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1078": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25268,
        25289
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x447"
    },
    "1081": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25268,
        25289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1082": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25284,
        25288
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19F6"
    },
    "1085": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25268,
        25289
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1090": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25268,
        25283
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBB8"
    },
    "1093": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25268,
        25289
      ],
      "op": "AND",
      "path": "10"
    },
    "1094": {
      "fn": "YearnRewards.getPerBlockOutput",
      "jump": "i",
      "offset": [
        25268,
        25289
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1095": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25268,
        25289
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1096": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25261,
        25289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1097": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25261,
        25289
      ],
      "op": "POP",
      "path": "10"
    },
    "1098": {
      "fn": "YearnRewards.getPerBlockOutput",
      "offset": [
        25192,
        25382
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1099": {
      "fn": "YearnRewards.getPerBlockOutput",
      "jump": "o",
      "offset": [
        25192,
        25382
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1100": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1101": {
      "offset": [
        25975,
        25989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1103": {
      "offset": [
        25992,
        26003
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x456"
    },
    "1106": {
      "offset": [
        25992,
        26001
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBFA"
    },
    "1109": {
      "jump": "i",
      "offset": [
        25992,
        26003
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1110": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        25992,
        26003
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1111": {
      "offset": [
        25975,
        26003
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1112": {
      "op": "POP"
    },
    "1113": {
      "offset": [
        26017,
        26027
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1114": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26017,
        26027
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1115": {
      "offset": [
        26013,
        26326
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x50D"
    },
    "1118": {
      "offset": [
        26013,
        26326
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1119": {
      "offset": [
        26043,
        26046
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1121": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26046
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1122": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1124": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1125": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1126": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1135": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1136": {
      "offset": [
        26060,
        26064
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "1137": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1139": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1140": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "1141": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1142": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1144": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1145": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "1146": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1147": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1148": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1149": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1150": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1157": {
      "op": "SHL"
    },
    "1158": {
      "op": "SUB"
    },
    "1159": {
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1160": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1161": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26046
      ],
      "op": "AND",
      "path": "10"
    },
    "1162": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1163": {
      "offset": [
        26043,
        26051
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x40C10F19"
    },
    "1168": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26051
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1169": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1171": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1172": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1173": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "1174": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1175": {
      "offset": [
        26043,
        26046
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1177": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1178": {
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1179": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1180": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1181": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1182": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1183": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "SUB",
      "path": "10"
    },
    "1184": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "1185": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1186": {
      "offset": [
        26043,
        26046
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1187": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26046
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1188": {
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1189": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1190": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1191": {
      "op": "DUP1"
    },
    "1192": {
      "op": "ISZERO"
    },
    "1193": {
      "op": "PUSH2",
      "value": "0x4B1"
    },
    "1196": {
      "op": "JUMPI"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1199": {
      "op": "DUP1"
    },
    "1200": {
      "op": "REVERT"
    },
    "1201": {
      "op": "JUMPDEST"
    },
    "1202": {
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1203": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "GAS",
      "path": "10"
    },
    "1204": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "CALL",
      "path": "10"
    },
    "1205": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1206": {
      "op": "DUP1"
    },
    "1207": {
      "op": "ISZERO"
    },
    "1208": {
      "op": "PUSH2",
      "value": "0x4C5"
    },
    "1211": {
      "op": "JUMPI"
    },
    "1212": {
      "op": "RETURNDATASIZE"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1215": {
      "op": "DUP1"
    },
    "1216": {
      "op": "RETURNDATACOPY"
    },
    "1217": {
      "op": "RETURNDATASIZE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1220": {
      "op": "REVERT"
    },
    "1221": {
      "op": "JUMPDEST"
    },
    "1222": {
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1223": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1224": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1225": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1226": {
      "offset": [
        26092,
        26105
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4D1"
    },
    "1229": {
      "offset": [
        26092,
        26103
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x421"
    },
    "1232": {
      "jump": "i",
      "offset": [
        26092,
        26105
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1233": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26092,
        26105
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1234": {
      "offset": [
        26088,
        26303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4DF"
    },
    "1237": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1238": {
      "offset": [
        26150,
        26151
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1240": {
      "offset": [
        26129,
        26147
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1242": {
      "offset": [
        26129,
        26151
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1243": {
      "offset": [
        26088,
        26303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x50D"
    },
    "1246": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1247": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1248": {
      "offset": [
        26209,
        26288
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x509"
    },
    "1251": {
      "offset": [
        26249,
        26274
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4FA"
    },
    "1254": {
      "offset": [
        26260,
        26273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4ED"
    },
    "1257": {
      "offset": [
        26260,
        26271
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x421"
    },
    "1260": {
      "jump": "i",
      "offset": [
        26260,
        26273
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1261": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26260,
        26273
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1262": {
      "offset": [
        26249,
        26255
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1263": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26249,
        26255
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1264": {
      "offset": [
        26249,
        26274
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1269": {
      "offset": [
        26249,
        26259
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBB8"
    },
    "1272": {
      "offset": [
        26249,
        26274
      ],
      "op": "AND",
      "path": "10"
    },
    "1273": {
      "fn": "YearnRewards.withdraw",
      "jump": "i",
      "offset": [
        26249,
        26274
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1274": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26249,
        26274
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1275": {
      "offset": [
        26209,
        26227
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1277": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26209,
        26227
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1278": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26209,
        26227
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1279": {
      "offset": [
        26209,
        26288
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1284": {
      "offset": [
        26209,
        26231
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC7C"
    },
    "1287": {
      "offset": [
        26209,
        26288
      ],
      "op": "AND",
      "path": "10"
    },
    "1288": {
      "fn": "YearnRewards.withdraw",
      "jump": "i",
      "offset": [
        26209,
        26288
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1289": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        26209,
        26288
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1290": {
      "offset": [
        26188,
        26206
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1292": {
      "offset": [
        26188,
        26288
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1293": {
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1294": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27259,
        27260
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 5,
      "value": "0x0"
    },
    "1296": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27250,
        27256
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1297": {
      "branch": 57,
      "fn": "YearnRewards.withdraw",
      "offset": [
        27250,
        27260
      ],
      "op": "GT",
      "path": "10"
    },
    "1298": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x556"
    },
    "1301": {
      "branch": 57,
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1302": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1304": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1305": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1306": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1312": {
      "op": "SHL"
    },
    "1313": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1314": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1315": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1317": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1319": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1320": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "ADD",
      "path": "10"
    },
    "1321": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1322": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x11"
    },
    "1324": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1326": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1327": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "ADD",
      "path": "10"
    },
    "1328": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1329": {
      "op": "PUSH17",
      "value": "0x43616E6E6F74207769746864726177203"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1352": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1353": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "ADD",
      "path": "10"
    },
    "1354": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1355": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1356": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1357": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1358": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1359": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1360": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "SUB",
      "path": "10"
    },
    "1361": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1363": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "ADD",
      "path": "10"
    },
    "1364": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1365": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1366": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27242,
        27282
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1367": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27292,
        27303
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 6,
      "value": "0x55E"
    },
    "1370": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27292,
        27301
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x678"
    },
    "1373": {
      "fn": "YearnRewards.withdraw",
      "jump": "i",
      "offset": [
        27292,
        27303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1374": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27292,
        27303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1375": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27373,
        27391
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x7"
    },
    "1377": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27373,
        27391
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1378": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27413
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x591"
    },
    "1381": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27413
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1382": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27373,
        27403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x575"
    },
    "1385": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27373,
        27403
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1386": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27396,
        27402
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1387": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27373,
        27403
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1392": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27373,
        27395
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB14"
    },
    "1395": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27373,
        27403
      ],
      "op": "AND",
      "path": "10"
    },
    "1396": {
      "fn": "YearnRewards.withdraw",
      "jump": "i",
      "offset": [
        27373,
        27403
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1397": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27373,
        27403
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1398": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27344,
        27354
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1399": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1401": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1402": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1403": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1404": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27343
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1406": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1408": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1409": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1411": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1412": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1413": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1414": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27355
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1415": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27413
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1420": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27359
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB76"
    },
    "1423": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27413
      ],
      "op": "AND",
      "path": "10"
    },
    "1424": {
      "fn": "YearnRewards.withdraw",
      "jump": "i",
      "offset": [
        27336,
        27413
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1425": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27336,
        27413
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1426": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27322,
        27332
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1427": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1429": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1430": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1431": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1432": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27321
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1434": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1436": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1437": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1439": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1440": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27333
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1441": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27314,
        27413
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1442": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27423,
        27445
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 8,
      "value": "0x5AA"
    },
    "1445": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27438,
        27444
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1446": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27423,
        27437
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCD6"
    },
    "1449": {
      "fn": "YearnRewards.withdraw",
      "jump": "i",
      "offset": [
        27423,
        27445
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1450": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27423,
        27445
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1451": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 9,
      "value": "0x40"
    },
    "1453": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1454": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1455": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1456": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1457": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1458": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1459": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1460": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27470,
        27480
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1461": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27470,
        27480
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1462": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
    },
    "1495": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1496": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1497": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1498": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1499": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "SUB",
      "path": "10"
    },
    "1500": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1502": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "ADD",
      "path": "10"
    },
    "1503": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1504": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27460,
        27489
      ],
      "op": "LOG2",
      "path": "10"
    },
    "1505": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "POP",
      "path": "10"
    },
    "1506": {
      "fn": "YearnRewards.withdraw",
      "offset": [
        27174,
        27496
      ],
      "op": "POP",
      "path": "10"
    },
    "1507": {
      "fn": "YearnRewards.withdraw",
      "jump": "o",
      "offset": [
        27174,
        27496
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1508": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1509": {
      "offset": [
        22035,
        22053
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1511": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        22035,
        22053
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1518": {
      "op": "SHL"
    },
    "1519": {
      "op": "SUB"
    },
    "1520": {
      "offset": [
        22035,
        22053
      ],
      "op": "AND",
      "path": "10"
    },
    "1521": {
      "offset": [
        22019,
        22031
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F8"
    },
    "1524": {
      "offset": [
        22019,
        22029
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD37"
    },
    "1527": {
      "jump": "i",
      "offset": [
        22019,
        22031
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1528": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        22019,
        22031
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "op": "SUB"
    },
    "1537": {
      "offset": [
        22019,
        22053
      ],
      "op": "AND",
      "path": "10"
    },
    "1538": {
      "branch": 58,
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        22019,
        22053
      ],
      "op": "EQ",
      "path": "10"
    },
    "1539": {
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x63D"
    },
    "1542": {
      "branch": 58,
      "offset": [
        21998,
        22112
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1543": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1545": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "offset": [
        21998,
        22112
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1554": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1555": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1557": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "ADD",
      "path": "10"
    },
    "1558": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1559": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1560": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1562": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "ADD",
      "path": "10"
    },
    "1563": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1564": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1565": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "SUB",
      "path": "10"
    },
    "1566": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1567": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1568": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x21"
    },
    "1570": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1571": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1572": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1574": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "ADD",
      "path": "10"
    },
    "1575": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1576": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x122D"
    },
    "1579": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x21"
    },
    "1581": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1582": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1583": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1585": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "ADD",
      "path": "10"
    },
    "1586": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1587": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "POP",
      "path": "10"
    },
    "1588": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "POP",
      "path": "10"
    },
    "1589": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1591": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1592": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1593": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1594": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "SUB",
      "path": "10"
    },
    "1595": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1596": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1597": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        21998,
        22112
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1598": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28008,
        28019
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 10,
      "value": "0xA"
    },
    "1600": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28008,
        28034
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1601": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28008,
        28034
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1602": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28008,
        28034
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1603": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 11,
      "value": "0x40"
    },
    "1605": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1606": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1607": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1608": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1609": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1610": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1611": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1612": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x1702529777B8EACA0E71284C63404E87C78645F2E8D0E92A8130F6A8326200C"
    },
    "1645": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1646": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1647": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1648": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "SUB",
      "path": "10"
    },
    "1649": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1651": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "ADD",
      "path": "10"
    },
    "1652": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1653": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        28049,
        28081
      ],
      "op": "LOG1",
      "path": "10"
    },
    "1654": {
      "fn": "YearnRewards.notifyRewardAmount",
      "offset": [
        27896,
        28088
      ],
      "op": "POP",
      "path": "10"
    },
    "1655": {
      "fn": "YearnRewards.notifyRewardAmount",
      "jump": "o",
      "offset": [
        27896,
        28088
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1656": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27581,
        27890
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1657": {
      "offset": [
        25975,
        25989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1659": {
      "offset": [
        25992,
        26003
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x682"
    },
    "1662": {
      "offset": [
        25992,
        26001
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBFA"
    },
    "1665": {
      "jump": "i",
      "offset": [
        25992,
        26003
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1666": {
      "fn": "YearnRewards.getReward",
      "offset": [
        25992,
        26003
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1667": {
      "offset": [
        25975,
        26003
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "offset": [
        26017,
        26027
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1670": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26017,
        26027
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1671": {
      "offset": [
        26013,
        26326
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71D"
    },
    "1674": {
      "offset": [
        26013,
        26326
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1675": {
      "offset": [
        26043,
        26046
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1677": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26046
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1678": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1680": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1681": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1682": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1689": {
      "op": "SHL"
    },
    "1690": {
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1691": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1692": {
      "offset": [
        26060,
        26064
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "1693": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1695": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1696": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "1697": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1698": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1700": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1701": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "1702": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1703": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1704": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1705": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1706": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "op": "SUB"
    },
    "1715": {
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1716": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1717": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26046
      ],
      "op": "AND",
      "path": "10"
    },
    "1718": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1719": {
      "offset": [
        26043,
        26051
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x40C10F19"
    },
    "1724": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26051
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1725": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1727": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1728": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1729": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "1730": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1731": {
      "offset": [
        26043,
        26046
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1733": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1734": {
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1735": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1736": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1737": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1738": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1739": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "SUB",
      "path": "10"
    },
    "1740": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "1741": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1742": {
      "offset": [
        26043,
        26046
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1743": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26046
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1744": {
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1745": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1746": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1747": {
      "op": "DUP1"
    },
    "1748": {
      "op": "ISZERO"
    },
    "1749": {
      "op": "PUSH2",
      "value": "0x6DD"
    },
    "1752": {
      "op": "JUMPI"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1755": {
      "op": "DUP1"
    },
    "1756": {
      "op": "REVERT"
    },
    "1757": {
      "op": "JUMPDEST"
    },
    "1758": {
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1759": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "GAS",
      "path": "10"
    },
    "1760": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "CALL",
      "path": "10"
    },
    "1761": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1762": {
      "op": "DUP1"
    },
    "1763": {
      "op": "ISZERO"
    },
    "1764": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1767": {
      "op": "JUMPI"
    },
    "1768": {
      "op": "RETURNDATASIZE"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1771": {
      "op": "DUP1"
    },
    "1772": {
      "op": "RETURNDATACOPY"
    },
    "1773": {
      "op": "RETURNDATASIZE"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1776": {
      "op": "REVERT"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1779": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1780": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1781": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "1782": {
      "offset": [
        26092,
        26105
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FD"
    },
    "1785": {
      "offset": [
        26092,
        26103
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x421"
    },
    "1788": {
      "jump": "i",
      "offset": [
        26092,
        26105
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1789": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26092,
        26105
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1790": {
      "offset": [
        26088,
        26303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x70B"
    },
    "1793": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1794": {
      "offset": [
        26150,
        26151
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1796": {
      "offset": [
        26129,
        26147
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1798": {
      "offset": [
        26129,
        26151
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1799": {
      "offset": [
        26088,
        26303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71D"
    },
    "1802": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1803": {
      "fn": "YearnRewards.getReward",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1804": {
      "offset": [
        26209,
        26288
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x719"
    },
    "1807": {
      "offset": [
        26249,
        26274
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4FA"
    },
    "1810": {
      "offset": [
        26260,
        26273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4ED"
    },
    "1813": {
      "offset": [
        26260,
        26271
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x421"
    },
    "1816": {
      "jump": "i",
      "offset": [
        26260,
        26273
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1817": {
      "offset": [
        26209,
        26288
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1818": {
      "offset": [
        26188,
        26206
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1820": {
      "offset": [
        26188,
        26288
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1821": {
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1822": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27632,
        27646
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1824": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27649,
        27667
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x728"
    },
    "1827": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27656,
        27666
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1828": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27649,
        27655
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x322"
    },
    "1831": {
      "fn": "YearnRewards.getReward",
      "jump": "i",
      "offset": [
        27649,
        27667
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1832": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27649,
        27667
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1833": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27632,
        27667
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27681,
        27691
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1836": {
      "branch": 59,
      "fn": "YearnRewards.getReward",
      "offset": [
        27681,
        27691
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1837": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27677,
        27884
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x79F"
    },
    "1840": {
      "branch": 59,
      "fn": "YearnRewards.getReward",
      "offset": [
        27677,
        27884
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1841": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27729,
        27774
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 12,
      "value": "0x73C"
    },
    "1844": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27752,
        27773
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x331"
    },
    "1847": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27762,
        27772
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1848": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27752,
        27761
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A3"
    },
    "1851": {
      "fn": "YearnRewards.getReward",
      "jump": "i",
      "offset": [
        27752,
        27773
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1852": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27729,
        27774
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1853": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27715,
        27725
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1854": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1856": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1857": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1858": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1859": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1861": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1863": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1864": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1866": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1867": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27726
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1868": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27774
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1869": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1870": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27774
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1871": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27707,
        27774
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1872": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27791
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 13,
      "value": "0x5"
    },
    "1874": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27791
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1875": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27824
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x768"
    },
    "1878": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27824
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "op": "SUB"
    },
    "1887": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27791
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1888": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27791
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1889": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27791
      ],
      "op": "AND",
      "path": "10"
    },
    "1890": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27791
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1891": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27817,
        27823
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1892": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27804
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD3B"
    },
    "1895": {
      "fn": "YearnRewards.getReward",
      "jump": "i",
      "offset": [
        27788,
        27824
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1896": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27788,
        27824
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1897": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 14,
      "value": "0x40"
    },
    "1899": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1900": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1901": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1902": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1903": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1904": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1905": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1906": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27854,
        27864
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1907": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27854,
        27864
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1908": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
    },
    "1941": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1942": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1943": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1944": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1945": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "SUB",
      "path": "10"
    },
    "1946": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1948": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "ADD",
      "path": "10"
    },
    "1949": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1950": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27843,
        27873
      ],
      "op": "LOG2",
      "path": "10"
    },
    "1951": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27677,
        27884
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1952": {
      "offset": [
        26335,
        26336
      ],
      "op": "POP",
      "path": "10"
    },
    "1953": {
      "fn": "YearnRewards.getReward",
      "offset": [
        27581,
        27890
      ],
      "op": "POP",
      "path": "10"
    },
    "1954": {
      "fn": "YearnRewards.getReward",
      "jump": "o",
      "offset": [
        27581,
        27890
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1955": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22844,
        22952
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "op": "SUB"
    },
    "1964": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "AND",
      "path": "10",
      "statement": 15
    },
    "1965": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22901,
        22908
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1967": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1968": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1969": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1970": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22936
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1972": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1974": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1975": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1977": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1978": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1979": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1980": {
      "fn": "LPTokenWrapper.balanceOf",
      "offset": [
        22927,
        22945
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1981": {
      "fn": "LPTokenWrapper.balanceOf",
      "jump": "o",
      "offset": [
        22844,
        22952
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1982": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10492,
        10629
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1983": {
      "offset": [
        9911,
        9920
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C6"
    },
    "1986": {
      "offset": [
        9911,
        9918
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x87C"
    },
    "1989": {
      "jump": "i",
      "offset": [
        9911,
        9920
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1990": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9911,
        9920
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1991": {
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x817"
    },
    "1994": {
      "offset": [
        9903,
        9957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1995": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1997": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1998": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1999": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2005": {
      "op": "SHL"
    },
    "2006": {
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2007": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2008": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2010": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2012": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2013": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "2014": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2015": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2016": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2017": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2019": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2020": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "2021": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2022": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2055": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2057": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2058": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "2059": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2060": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2061": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2062": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2063": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2064": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2065": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SUB",
      "path": "10"
    },
    "2066": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2068": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "2069": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2070": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2071": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2072": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10574,
        10580
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 16,
      "value": "0x3"
    },
    "2074": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10574,
        10580
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2075": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10553,
        10593
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2077": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10553,
        10593
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2078": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10590,
        10591
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2080": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10590,
        10591
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "SUB"
    },
    "2089": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10574,
        10580
      ],
      "op": "AND",
      "path": "10"
    },
    "2090": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10574,
        10580
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2091": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10553,
        10593
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2124": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10553,
        10593
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2125": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10590,
        10591
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2126": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10590,
        10591
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2127": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10553,
        10593
      ],
      "op": "LOG3",
      "path": "10"
    },
    "2128": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10603,
        10609
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 17,
      "value": "0x3"
    },
    "2130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10603,
        10622
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10603,
        10622
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "op": "NOT"
    },
    "2141": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10603,
        10622
      ],
      "op": "AND",
      "path": "10"
    },
    "2142": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10603,
        10622
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2143": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        10603,
        10622
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2144": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        10492,
        10629
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2145": {
      "offset": [
        24251,
        24275
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2146": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24251,
        24275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "2148": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24251,
        24275
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2149": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24251,
        24275
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2150": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        24251,
        24275
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2151": {
      "offset": [
        24317,
        24347
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2152": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24317,
        24347
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "2154": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24317,
        24347
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2155": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        24317,
        24347
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2156": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        24317,
        24347
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2157": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2158": {
      "fn": "Ownable.owner",
      "offset": [
        9771,
        9777
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 18,
      "value": "0x3"
    },
    "2160": {
      "fn": "Ownable.owner",
      "offset": [
        9771,
        9777
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2167": {
      "op": "SHL"
    },
    "2168": {
      "op": "SUB"
    },
    "2169": {
      "fn": "Ownable.owner",
      "offset": [
        9771,
        9777
      ],
      "op": "AND",
      "path": "10"
    },
    "2170": {
      "fn": "Ownable.owner",
      "offset": [
        9707,
        9784
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2171": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        9707,
        9784
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2172": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2173": {
      "fn": "Ownable.isOwner",
      "offset": [
        10137,
        10143
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 19,
      "value": "0x3"
    },
    "2175": {
      "fn": "Ownable.isOwner",
      "offset": [
        10137,
        10143
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2176": {
      "fn": "Ownable.isOwner",
      "offset": [
        10098,
        10102
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2178": {
      "fn": "Ownable.isOwner",
      "offset": [
        10098,
        10102
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2185": {
      "op": "SHL"
    },
    "2186": {
      "op": "SUB"
    },
    "2187": {
      "fn": "Ownable.isOwner",
      "offset": [
        10137,
        10143
      ],
      "op": "AND",
      "path": "10"
    },
    "2188": {
      "fn": "Ownable.isOwner",
      "offset": [
        10121,
        10133
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x893"
    },
    "2191": {
      "fn": "Ownable.isOwner",
      "offset": [
        10121,
        10131
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD37"
    },
    "2194": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        10121,
        10133
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2195": {
      "fn": "Ownable.isOwner",
      "offset": [
        10121,
        10133
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "op": "SUB"
    },
    "2204": {
      "fn": "Ownable.isOwner",
      "offset": [
        10121,
        10143
      ],
      "op": "AND",
      "path": "10"
    },
    "2205": {
      "fn": "Ownable.isOwner",
      "offset": [
        10121,
        10143
      ],
      "op": "EQ",
      "path": "10"
    },
    "2206": {
      "fn": "Ownable.isOwner",
      "offset": [
        10114,
        10143
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2207": {
      "fn": "Ownable.isOwner",
      "offset": [
        10114,
        10143
      ],
      "op": "POP",
      "path": "10"
    },
    "2208": {
      "fn": "Ownable.isOwner",
      "offset": [
        10058,
        10150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2209": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        10058,
        10150
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2210": {
      "offset": [
        22588,
        22656
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2211": {
      "fn": "Ownable.isOwner",
      "offset": [
        22588,
        22656
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2213": {
      "fn": "Ownable.isOwner",
      "offset": [
        22588,
        22656
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "op": "SUB"
    },
    "2222": {
      "offset": [
        22588,
        22656
      ],
      "op": "AND",
      "path": "10"
    },
    "2223": {
      "fn": "Ownable.isOwner",
      "offset": [
        22588,
        22656
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2224": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        22588,
        22656
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2225": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2226": {
      "offset": [
        25975,
        25989
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2228": {
      "offset": [
        25992,
        26003
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8BB"
    },
    "2231": {
      "offset": [
        25992,
        26001
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBFA"
    },
    "2234": {
      "jump": "i",
      "offset": [
        25992,
        26003
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2235": {
      "fn": "YearnRewards.stake",
      "offset": [
        25992,
        26003
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2236": {
      "offset": [
        25975,
        26003
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2237": {
      "op": "POP"
    },
    "2238": {
      "offset": [
        26017,
        26027
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2239": {
      "branch": 60,
      "fn": "YearnRewards.stake",
      "offset": [
        26017,
        26027
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2240": {
      "offset": [
        26013,
        26326
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x956"
    },
    "2243": {
      "branch": 60,
      "offset": [
        26013,
        26326
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2244": {
      "offset": [
        26043,
        26046
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2246": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26046
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2247": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2249": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2250": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2251": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2260": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2261": {
      "offset": [
        26060,
        26064
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "2262": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2264": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2265": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "2266": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2267": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2269": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2270": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "2271": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2272": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2273": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2274": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2275": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "op": "SUB"
    },
    "2284": {
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2285": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2286": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26046
      ],
      "op": "AND",
      "path": "10"
    },
    "2287": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2288": {
      "offset": [
        26043,
        26051
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x40C10F19"
    },
    "2293": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26051
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2294": {
      "offset": [
        26043,
        26074
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2296": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2297": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2298": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "2299": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2300": {
      "offset": [
        26043,
        26046
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2302": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26046
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2303": {
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2304": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2305": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2306": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2307": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2308": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "SUB",
      "path": "10"
    },
    "2309": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "ADD",
      "path": "10"
    },
    "2310": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2311": {
      "offset": [
        26043,
        26046
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2312": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26046
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2313": {
      "offset": [
        26043,
        26074
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2314": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "2315": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2316": {
      "op": "DUP1"
    },
    "2317": {
      "op": "ISZERO"
    },
    "2318": {
      "op": "PUSH2",
      "value": "0x916"
    },
    "2321": {
      "op": "JUMPI"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2324": {
      "op": "DUP1"
    },
    "2325": {
      "op": "REVERT"
    },
    "2326": {
      "op": "JUMPDEST"
    },
    "2327": {
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "2328": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "GAS",
      "path": "10"
    },
    "2329": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "CALL",
      "path": "10"
    },
    "2330": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2331": {
      "op": "DUP1"
    },
    "2332": {
      "op": "ISZERO"
    },
    "2333": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "2336": {
      "op": "JUMPI"
    },
    "2337": {
      "op": "RETURNDATASIZE"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2340": {
      "op": "DUP1"
    },
    "2341": {
      "op": "RETURNDATACOPY"
    },
    "2342": {
      "op": "RETURNDATASIZE"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2345": {
      "op": "REVERT"
    },
    "2346": {
      "op": "JUMPDEST"
    },
    "2347": {
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "2348": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "2349": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "2350": {
      "fn": "YearnRewards.stake",
      "offset": [
        26043,
        26074
      ],
      "op": "POP",
      "path": "10"
    },
    "2351": {
      "offset": [
        26092,
        26105
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x936"
    },
    "2354": {
      "offset": [
        26092,
        26103
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x421"
    },
    "2357": {
      "jump": "i",
      "offset": [
        26092,
        26105
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2358": {
      "fn": "YearnRewards.stake",
      "offset": [
        26092,
        26105
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2359": {
      "offset": [
        26088,
        26303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x944"
    },
    "2362": {
      "fn": "YearnRewards.stake",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2363": {
      "offset": [
        26150,
        26151
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2365": {
      "offset": [
        26129,
        26147
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2367": {
      "offset": [
        26129,
        26151
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2368": {
      "offset": [
        26088,
        26303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x956"
    },
    "2371": {
      "fn": "YearnRewards.stake",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2372": {
      "fn": "YearnRewards.stake",
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2373": {
      "offset": [
        26209,
        26288
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x952"
    },
    "2376": {
      "offset": [
        26249,
        26274
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4FA"
    },
    "2379": {
      "offset": [
        26260,
        26273
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4ED"
    },
    "2382": {
      "offset": [
        26260,
        26271
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x421"
    },
    "2385": {
      "jump": "i",
      "offset": [
        26260,
        26273
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2386": {
      "offset": [
        26209,
        26288
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2387": {
      "offset": [
        26188,
        26206
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2389": {
      "offset": [
        26188,
        26288
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2390": {
      "offset": [
        26088,
        26303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2391": {
      "fn": "YearnRewards.stake",
      "offset": [
        26801,
        26810
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 20,
      "value": "0x9"
    },
    "2393": {
      "fn": "YearnRewards.stake",
      "offset": [
        26801,
        26810
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2394": {
      "fn": "YearnRewards.stake",
      "offset": [
        26784,
        26799
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "2395": {
      "branch": 61,
      "fn": "YearnRewards.stake",
      "offset": [
        26784,
        26810
      ],
      "op": "GT",
      "path": "10"
    },
    "2396": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x998"
    },
    "2399": {
      "branch": 61,
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2400": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2402": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2403": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2410": {
      "op": "SHL"
    },
    "2411": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2412": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2413": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2415": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2417": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2418": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "ADD",
      "path": "10"
    },
    "2419": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2420": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "2422": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2424": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2425": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "ADD",
      "path": "10"
    },
    "2426": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2427": {
      "op": "PUSH9",
      "value": "0x1B9BDD081CDD185C9D"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2442": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2443": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "ADD",
      "path": "10"
    },
    "2444": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2445": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2446": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2447": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2448": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2449": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2450": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "SUB",
      "path": "10"
    },
    "2451": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2453": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "ADD",
      "path": "10"
    },
    "2454": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2455": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2456": {
      "fn": "YearnRewards.stake",
      "offset": [
        26776,
        26823
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2457": {
      "fn": "YearnRewards.stake",
      "offset": [
        26850,
        26851
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 21,
      "value": "0x0"
    },
    "2459": {
      "fn": "YearnRewards.stake",
      "offset": [
        26841,
        26847
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2460": {
      "branch": 62,
      "fn": "YearnRewards.stake",
      "offset": [
        26841,
        26851
      ],
      "op": "GT",
      "path": "10"
    },
    "2461": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9DE"
    },
    "2464": {
      "branch": 62,
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2465": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2467": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2468": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2477": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2478": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2480": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2482": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2483": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "ADD",
      "path": "10"
    },
    "2484": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2485": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE"
    },
    "2487": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2489": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2490": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "ADD",
      "path": "10"
    },
    "2491": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2492": {
      "op": "PUSH14",
      "value": "0x43616E6E6F74207374616B65203"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "2509": {
      "op": "SHL"
    },
    "2510": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2512": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2513": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "ADD",
      "path": "10"
    },
    "2514": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2515": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2516": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2517": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2518": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2519": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2520": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "SUB",
      "path": "10"
    },
    "2521": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2523": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "ADD",
      "path": "10"
    },
    "2524": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2525": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2526": {
      "fn": "YearnRewards.stake",
      "offset": [
        26833,
        26870
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2527": {
      "fn": "YearnRewards.stake",
      "offset": [
        26884,
        26902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2529": {
      "fn": "YearnRewards.stake",
      "offset": [
        26884,
        26902
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2530": {
      "fn": "YearnRewards.stake",
      "offset": [
        26880,
        27092
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9FA"
    },
    "2533": {
      "fn": "YearnRewards.stake",
      "offset": [
        26880,
        27092
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2534": {
      "fn": "YearnRewards.stake",
      "offset": [
        26930,
        26940
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 22
    },
    "2535": {
      "fn": "YearnRewards.stake",
      "offset": [
        26944,
        26945
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2537": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26941
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2538": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2539": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26941
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2540": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26929
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2542": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2544": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26941
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2545": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2547": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2548": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26941
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2549": {
      "fn": "YearnRewards.stake",
      "offset": [
        26922,
        26945
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2550": {
      "fn": "YearnRewards.stake",
      "offset": [
        26880,
        27092
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA3E"
    },
    "2553": {
      "fn": "YearnRewards.stake",
      "offset": [
        26880,
        27092
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2554": {
      "fn": "YearnRewards.stake",
      "offset": [
        26880,
        27092
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2555": {
      "fn": "YearnRewards.stake",
      "offset": [
        27037,
        27055
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 23,
      "value": "0x7"
    },
    "2557": {
      "fn": "YearnRewards.stake",
      "offset": [
        27037,
        27055
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2558": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27081
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA2D"
    },
    "2561": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27081
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2562": {
      "fn": "YearnRewards.stake",
      "offset": [
        27037,
        27067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA11"
    },
    "2565": {
      "fn": "YearnRewards.stake",
      "offset": [
        27037,
        27067
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2566": {
      "fn": "YearnRewards.stake",
      "offset": [
        27060,
        27066
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2567": {
      "fn": "YearnRewards.stake",
      "offset": [
        27037,
        27067
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2572": {
      "fn": "YearnRewards.stake",
      "offset": [
        27037,
        27059
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB14"
    },
    "2575": {
      "fn": "YearnRewards.stake",
      "offset": [
        27037,
        27067
      ],
      "op": "AND",
      "path": "10"
    },
    "2576": {
      "fn": "YearnRewards.stake",
      "jump": "i",
      "offset": [
        27037,
        27067
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2577": {
      "fn": "YearnRewards.stake",
      "offset": [
        27037,
        27067
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2578": {
      "fn": "YearnRewards.stake",
      "offset": [
        27004,
        27014
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2579": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2581": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2582": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2583": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2584": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27003
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2586": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2588": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2589": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2591": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2592": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2593": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2594": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27015
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2595": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27081
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2600": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27019
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC7C"
    },
    "2603": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27081
      ],
      "op": "AND",
      "path": "10"
    },
    "2604": {
      "fn": "YearnRewards.stake",
      "jump": "i",
      "offset": [
        26996,
        27081
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2605": {
      "fn": "YearnRewards.stake",
      "offset": [
        26996,
        27081
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2606": {
      "fn": "YearnRewards.stake",
      "offset": [
        26982,
        26992
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2607": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2609": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2610": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2611": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2612": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26981
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2614": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2616": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2617": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2619": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2620": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        26993
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2621": {
      "fn": "YearnRewards.stake",
      "offset": [
        26974,
        27081
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2622": {
      "fn": "YearnRewards.stake",
      "offset": [
        26880,
        27092
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2623": {
      "fn": "YearnRewards.stake",
      "offset": [
        27101,
        27120
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 24,
      "value": "0xA47"
    },
    "2626": {
      "fn": "YearnRewards.stake",
      "offset": [
        27113,
        27119
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2627": {
      "fn": "YearnRewards.stake",
      "offset": [
        27101,
        27112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD92"
    },
    "2630": {
      "fn": "YearnRewards.stake",
      "jump": "i",
      "offset": [
        27101,
        27120
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2631": {
      "fn": "YearnRewards.stake",
      "offset": [
        27101,
        27120
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2632": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 25,
      "value": "0x40"
    },
    "2634": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2635": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2636": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2637": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2638": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2639": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2640": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2641": {
      "fn": "YearnRewards.stake",
      "offset": [
        27142,
        27152
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2642": {
      "fn": "YearnRewards.stake",
      "offset": [
        27142,
        27152
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2643": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
    },
    "2676": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2677": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2678": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2679": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2680": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "SUB",
      "path": "10"
    },
    "2681": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2683": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "ADD",
      "path": "10"
    },
    "2684": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2685": {
      "fn": "YearnRewards.stake",
      "offset": [
        27135,
        27161
      ],
      "op": "LOG2",
      "path": "10"
    },
    "2686": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "POP",
      "path": "10"
    },
    "2687": {
      "fn": "YearnRewards.stake",
      "offset": [
        26715,
        27168
      ],
      "op": "POP",
      "path": "10"
    },
    "2688": {
      "fn": "YearnRewards.stake",
      "jump": "o",
      "offset": [
        26715,
        27168
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2689": {
      "offset": [
        24412,
        24436
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2690": {
      "fn": "YearnRewards.stake",
      "offset": [
        24412,
        24436
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "2692": {
      "fn": "YearnRewards.stake",
      "offset": [
        24412,
        24436
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2693": {
      "fn": "YearnRewards.stake",
      "offset": [
        24412,
        24436
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2694": {
      "fn": "YearnRewards.stake",
      "jump": "o",
      "offset": [
        24412,
        24436
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2695": {
      "offset": [
        23476,
        23546
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2696": {
      "fn": "YearnRewards.stake",
      "offset": [
        23476,
        23546
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2698": {
      "fn": "YearnRewards.stake",
      "offset": [
        23476,
        23546
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "op": "SUB"
    },
    "2707": {
      "offset": [
        23476,
        23546
      ],
      "op": "AND",
      "path": "10"
    },
    "2708": {
      "fn": "YearnRewards.stake",
      "offset": [
        23476,
        23546
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2709": {
      "fn": "YearnRewards.stake",
      "jump": "o",
      "offset": [
        23476,
        23546
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2710": {
      "offset": [
        24356,
        24396
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2711": {
      "fn": "YearnRewards.stake",
      "offset": [
        24356,
        24396
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "2713": {
      "fn": "YearnRewards.stake",
      "offset": [
        24356,
        24396
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2714": {
      "fn": "YearnRewards.stake",
      "offset": [
        24356,
        24396
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2715": {
      "fn": "YearnRewards.stake",
      "jump": "o",
      "offset": [
        24356,
        24396
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2716": {
      "fn": "YearnRewards.exit",
      "offset": [
        27502,
        27575
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2717": {
      "fn": "YearnRewards.exit",
      "offset": [
        27537,
        27568
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 26,
      "value": "0xAAD"
    },
    "2720": {
      "fn": "YearnRewards.exit",
      "offset": [
        27546,
        27567
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAA8"
    },
    "2723": {
      "fn": "YearnRewards.exit",
      "offset": [
        27556,
        27566
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2724": {
      "fn": "YearnRewards.exit",
      "offset": [
        27546,
        27555
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A3"
    },
    "2727": {
      "fn": "YearnRewards.exit",
      "jump": "i",
      "offset": [
        27546,
        27567
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2728": {
      "fn": "YearnRewards.exit",
      "offset": [
        27546,
        27567
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2729": {
      "fn": "YearnRewards.exit",
      "offset": [
        27537,
        27545
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44C"
    },
    "2732": {
      "fn": "YearnRewards.exit",
      "jump": "i",
      "offset": [
        27537,
        27568
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2733": {
      "fn": "YearnRewards.exit",
      "offset": [
        27537,
        27568
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2734": {
      "fn": "YearnRewards.exit",
      "jump": "o",
      "offset": [
        27502,
        27575
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2735": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2736": {
      "offset": [
        9911,
        9920
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAB7"
    },
    "2739": {
      "offset": [
        9911,
        9918
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x87C"
    },
    "2742": {
      "jump": "i",
      "offset": [
        9911,
        9920
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2743": {
      "branch": 63,
      "fn": "Ownable.transferOwnership",
      "offset": [
        9911,
        9920
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2744": {
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB08"
    },
    "2747": {
      "branch": 63,
      "offset": [
        9903,
        9957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "2767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "2774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2808": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "2812": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2813": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2817": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2818": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SUB",
      "path": "10"
    },
    "2819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "ADD",
      "path": "10"
    },
    "2822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        9903,
        9957
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10850,
        10878
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 27,
      "value": "0xB11"
    },
    "2828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10869,
        10877
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10850,
        10868
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDF4"
    },
    "2832": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        10850,
        10878
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10850,
        10878
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        10778,
        10885
      ],
      "op": "POP",
      "path": "10"
    },
    "2835": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        10778,
        10885
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2836": {
      "fn": "SafeMath.mul",
      "offset": [
        4437,
        4896
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2837": {
      "fn": "SafeMath.mul",
      "offset": [
        4495,
        4502
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2839": {
      "branch": 64,
      "fn": "SafeMath.mul",
      "offset": [
        4736,
        4742
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2840": {
      "fn": "SafeMath.mul",
      "offset": [
        4732,
        4777
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB23"
    },
    "2843": {
      "branch": 64,
      "fn": "SafeMath.mul",
      "offset": [
        4732,
        4777
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "fn": "SafeMath.mul",
      "offset": [
        4765,
        4766
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 28,
      "value": "0x0"
    },
    "2847": {
      "fn": "SafeMath.mul",
      "offset": [
        4758,
        4766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB70"
    },
    "2850": {
      "fn": "SafeMath.mul",
      "offset": [
        4758,
        4766
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2851": {
      "fn": "SafeMath.mul",
      "offset": [
        4732,
        4777
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2852": {
      "fn": "SafeMath.mul",
      "offset": [
        4799,
        4804
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2853": {
      "fn": "SafeMath.mul",
      "offset": [
        4799,
        4804
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2854": {
      "fn": "SafeMath.mul",
      "offset": [
        4799,
        4804
      ],
      "op": "MUL",
      "path": "10"
    },
    "2855": {
      "fn": "SafeMath.mul",
      "offset": [
        4803,
        4804
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2856": {
      "fn": "SafeMath.mul",
      "offset": [
        4799,
        4800
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2857": {
      "fn": "SafeMath.mul",
      "offset": [
        4799,
        4804
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2858": {
      "fn": "SafeMath.mul",
      "offset": [
        4799,
        4800
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2859": {
      "fn": "SafeMath.mul",
      "offset": [
        4822,
        4827
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 29,
      "value": "0xB30"
    },
    "2862": {
      "fn": "SafeMath.mul",
      "offset": [
        4822,
        4827
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2863": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        4822,
        4827
      ],
      "op": "INVALID",
      "path": "10"
    },
    "2864": {
      "fn": "SafeMath.mul",
      "offset": [
        4822,
        4827
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2865": {
      "fn": "SafeMath.mul",
      "offset": [
        4822,
        4827
      ],
      "op": "DIV",
      "path": "10"
    },
    "2866": {
      "branch": 65,
      "fn": "SafeMath.mul",
      "offset": [
        4822,
        4832
      ],
      "op": "EQ",
      "path": "10"
    },
    "2867": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6D"
    },
    "2870": {
      "branch": 65,
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2871": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2873": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2882": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2883": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2885": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "ADD",
      "path": "10"
    },
    "2886": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2887": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2888": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2890": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "ADD",
      "path": "10"
    },
    "2891": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2892": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2893": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "SUB",
      "path": "10"
    },
    "2894": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2895": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2896": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x21"
    },
    "2898": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2899": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2900": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2902": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "ADD",
      "path": "10"
    },
    "2903": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2904": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x120C"
    },
    "2907": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x21"
    },
    "2909": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2910": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "2911": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2913": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "ADD",
      "path": "10"
    },
    "2914": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2915": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "POP",
      "path": "10"
    },
    "2916": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "POP",
      "path": "10"
    },
    "2917": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2919": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2920": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2921": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2922": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "SUB",
      "path": "10"
    },
    "2923": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2924": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2925": {
      "fn": "SafeMath.mul",
      "offset": [
        4814,
        4870
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2926": {
      "fn": "SafeMath.mul",
      "offset": [
        4888,
        4889
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 30
    },
    "2927": {
      "op": "POP"
    },
    "2928": {
      "fn": "SafeMath.mul",
      "offset": [
        4437,
        4896
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2929": {
      "fn": "SafeMath.mul",
      "offset": [
        4437,
        4896
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2930": {
      "fn": "SafeMath.mul",
      "offset": [
        4437,
        4896
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2931": {
      "fn": "SafeMath.mul",
      "offset": [
        4437,
        4896
      ],
      "op": "POP",
      "path": "10"
    },
    "2932": {
      "fn": "SafeMath.mul",
      "offset": [
        4437,
        4896
      ],
      "op": "POP",
      "path": "10"
    },
    "2933": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        4437,
        4896
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2934": {
      "fn": "SafeMath.sub",
      "offset": [
        3522,
        3656
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2935": {
      "fn": "SafeMath.sub",
      "offset": [
        3580,
        3587
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2937": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 31,
      "value": "0xB6D"
    },
    "2940": {
      "fn": "SafeMath.sub",
      "offset": [
        3610,
        3611
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2941": {
      "fn": "SafeMath.sub",
      "offset": [
        3613,
        3614
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2942": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2944": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2945": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2946": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2948": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "ADD",
      "path": "10"
    },
    "2949": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2951": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2952": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2953": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1E"
    },
    "2955": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2956": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2957": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2959": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "ADD",
      "path": "10"
    },
    "2960": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2993": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2994": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2995": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3649
      ],
      "op": "POP",
      "path": "10"
    },
    "2996": {
      "fn": "SafeMath.sub",
      "offset": [
        3606,
        3609
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE95"
    },
    "2999": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3606,
        3649
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3000": {
      "fn": "SafeMath.div",
      "offset": [
        5351,
        5481
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3001": {
      "fn": "SafeMath.div",
      "offset": [
        5409,
        5416
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3003": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 32,
      "value": "0xB6D"
    },
    "3006": {
      "fn": "SafeMath.div",
      "offset": [
        5439,
        5440
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3007": {
      "fn": "SafeMath.div",
      "offset": [
        5442,
        5443
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3008": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3010": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3011": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3012": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3014": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "ADD",
      "path": "10"
    },
    "3015": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3017": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3018": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3019": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1A"
    },
    "3021": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3022": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3023": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3025": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "ADD",
      "path": "10"
    },
    "3026": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "3059": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3060": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3061": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5474
      ],
      "op": "POP",
      "path": "10"
    },
    "3062": {
      "fn": "SafeMath.div",
      "offset": [
        5435,
        5438
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF2C"
    },
    "3065": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        5435,
        5474
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3066": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25440,
        25936
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3067": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25478,
        25485
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3069": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25519,
        25528
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "3071": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25519,
        25528
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3072": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25501,
        25516
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "3073": {
      "branch": 66,
      "fn": "YearnRewards.getprofit",
      "offset": [
        25501,
        25528
      ],
      "op": "GT",
      "path": "10"
    },
    "3074": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25497,
        25647
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3075": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25497,
        25647
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC27"
    },
    "3078": {
      "branch": 66,
      "fn": "YearnRewards.getprofit",
      "offset": [
        25497,
        25647
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3079": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25557,
        25568
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 33,
      "value": "0xA"
    },
    "3081": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25557,
        25568
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3082": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25557,
        25575
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC1A"
    },
    "3085": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25557,
        25575
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3086": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25573,
        25574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3088": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25557,
        25575
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3093": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25557,
        25572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBB8"
    },
    "3096": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25557,
        25575
      ],
      "op": "AND",
      "path": "10"
    },
    "3097": {
      "fn": "YearnRewards.getprofit",
      "jump": "i",
      "offset": [
        25557,
        25575
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3098": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25557,
        25575
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3099": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25543,
        25554
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "3101": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25543,
        25575
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3102": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25610,
        25625
      ],
      "op": "TIMESTAMP",
      "path": "10",
      "statement": 34
    },
    "3103": {
      "offset": [
        23587,
        23593
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x93A80"
    },
    "3107": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25610,
        25636
      ],
      "op": "ADD",
      "path": "10"
    },
    "3108": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25598,
        25607
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "3110": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25598,
        25636
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3111": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25497,
        25647
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3112": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25721,
        25730
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "3114": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25721,
        25730
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3115": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25679,
        25691
      ],
      "op": "NUMBER",
      "path": "10"
    },
    "3116": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25679,
        25691
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3117": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25705,
        25730
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3118": {
      "branch": 67,
      "fn": "YearnRewards.getprofit",
      "offset": [
        25705,
        25730
      ],
      "op": "GT",
      "path": "10"
    },
    "3119": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25701,
        25765
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3C"
    },
    "3122": {
      "branch": 67,
      "fn": "YearnRewards.getprofit",
      "offset": [
        25701,
        25765
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3123": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25753,
        25754
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 35,
      "value": "0x0"
    },
    "3125": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25746,
        25754
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3126": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25746,
        25754
      ],
      "op": "POP",
      "path": "10"
    },
    "3127": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25746,
        25754
      ],
      "op": "POP",
      "path": "10"
    },
    "3128": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25746,
        25754
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x425"
    },
    "3131": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25746,
        25754
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3132": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25701,
        25765
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3133": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25774,
        25786
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3135": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25816
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC53"
    },
    "3138": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25806,
        25815
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "3140": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25806,
        25815
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3141": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25801
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3142": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25805
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB76"
    },
    "3145": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25805
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3146": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25816
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3147": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25816
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3148": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25816
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3153": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25816
      ],
      "op": "AND",
      "path": "10"
    },
    "3154": {
      "fn": "YearnRewards.getprofit",
      "jump": "i",
      "offset": [
        25789,
        25816
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3155": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25789,
        25816
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3156": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25826,
        25835
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 36,
      "value": "0x8"
    },
    "3158": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25826,
        25850
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3159": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25826,
        25850
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3160": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25826,
        25850
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3161": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25774,
        25816
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3162": {
      "op": "POP"
    },
    "3163": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25860,
        25874
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3165": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25877,
        25906
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC74"
    },
    "3168": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25886,
        25905
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC67"
    },
    "3171": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25886,
        25903
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42F"
    },
    "3174": {
      "fn": "YearnRewards.getprofit",
      "jump": "i",
      "offset": [
        25886,
        25905
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3175": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25886,
        25905
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3176": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25877,
        25881
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3177": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25877,
        25881
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3178": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25877,
        25906
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3183": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25877,
        25885
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB14"
    },
    "3186": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25877,
        25906
      ],
      "op": "AND",
      "path": "10"
    },
    "3187": {
      "fn": "YearnRewards.getprofit",
      "jump": "i",
      "offset": [
        25877,
        25906
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3188": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25877,
        25906
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3189": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25860,
        25906
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3190": {
      "op": "POP"
    },
    "3191": {
      "op": "POP"
    },
    "3192": {
      "op": "POP"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "fn": "YearnRewards.getprofit",
      "offset": [
        25440,
        25936
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3195": {
      "fn": "YearnRewards.getprofit",
      "jump": "o",
      "offset": [
        25440,
        25936
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3196": {
      "fn": "SafeMath.add",
      "offset": [
        3082,
        3258
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3197": {
      "fn": "SafeMath.add",
      "offset": [
        3140,
        3147
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3199": {
      "fn": "SafeMath.add",
      "offset": [
        3171,
        3176
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3200": {
      "fn": "SafeMath.add",
      "offset": [
        3171,
        3176
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3201": {
      "fn": "SafeMath.add",
      "offset": [
        3171,
        3176
      ],
      "op": "ADD",
      "path": "10"
    },
    "3202": {
      "fn": "SafeMath.add",
      "offset": [
        3194,
        3200
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 37
    },
    "3203": {
      "fn": "SafeMath.add",
      "offset": [
        3194,
        3200
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3204": {
      "fn": "SafeMath.add",
      "offset": [
        3194,
        3200
      ],
      "op": "LT",
      "path": "10"
    },
    "3205": {
      "branch": 68,
      "fn": "SafeMath.add",
      "offset": [
        3194,
        3200
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3206": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6D"
    },
    "3209": {
      "branch": 68,
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3210": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3212": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3213": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3220": {
      "op": "SHL"
    },
    "3221": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3222": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3223": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3225": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3227": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3228": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "ADD",
      "path": "10"
    },
    "3229": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3230": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1B"
    },
    "3232": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "3234": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3235": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "ADD",
      "path": "10"
    },
    "3236": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3237": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3270": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "3272": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3273": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "ADD",
      "path": "10"
    },
    "3274": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3275": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3276": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3277": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3278": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3279": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3280": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "SUB",
      "path": "10"
    },
    "3281": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "3283": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "ADD",
      "path": "10"
    },
    "3284": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3285": {
      "fn": "SafeMath.add",
      "offset": [
        3186,
        3232
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3286": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23188,
        23396
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3287": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23254,
        23266
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 38,
      "value": "0x1"
    },
    "3289": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23254,
        23266
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3290": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23254,
        23278
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCE9"
    },
    "3293": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23254,
        23278
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3294": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23271,
        23277
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3295": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23254,
        23278
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3300": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23254,
        23270
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB76"
    },
    "3303": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23254,
        23278
      ],
      "op": "AND",
      "path": "10"
    },
    "3304": {
      "fn": "LPTokenWrapper.withdraw",
      "jump": "i",
      "offset": [
        23254,
        23278
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3305": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23254,
        23278
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3306": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23239,
        23251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3308": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23239,
        23278
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3309": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23322,
        23332
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 39
    },
    "3310": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3312": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3313": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3314": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3315": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23321
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3317": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3319": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3320": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3322": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3323": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3324": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23333
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3325": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23345
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD0C"
    },
    "3328": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23345
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3329": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23338,
        23344
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3330": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23345
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3335": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23337
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB76"
    },
    "3338": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23345
      ],
      "op": "AND",
      "path": "10"
    },
    "3339": {
      "fn": "LPTokenWrapper.withdraw",
      "jump": "i",
      "offset": [
        23312,
        23345
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3340": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23312,
        23345
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3341": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23298,
        23308
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3342": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3344": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3345": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3346": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3347": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23297
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3349": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3351": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3352": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3354": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3355": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23309
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3356": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23345
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3357": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23345
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3358": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23345
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3359": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23288,
        23345
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3360": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23356
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 40
    },
    "3361": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23356
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3362": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23389
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB11"
    },
    "3365": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23389
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3372": {
      "op": "SHL"
    },
    "3373": {
      "op": "SUB"
    },
    "3374": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23356
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3375": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23356
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3376": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23356
      ],
      "op": "AND",
      "path": "10"
    },
    "3377": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23356
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3378": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23382,
        23388
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3379": {
      "fn": "LPTokenWrapper.withdraw",
      "offset": [
        23355,
        23369
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD3B"
    },
    "3382": {
      "fn": "LPTokenWrapper.withdraw",
      "jump": "i",
      "offset": [
        23355,
        23389
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3383": {
      "fn": "Context._msgSender",
      "offset": [
        8474,
        8570
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3384": {
      "fn": "Context._msgSender",
      "offset": [
        8553,
        8563
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 41
    },
    "3385": {
      "fn": "Context._msgSender",
      "offset": [
        8474,
        8570
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3386": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        8474,
        8570
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3387": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18047,
        18285
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3388": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 42,
      "value": "0x40"
    },
    "3390": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3391": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "op": "SUB"
    },
    "3400": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3401": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "AND",
      "path": "10"
    },
    "3402": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "3404": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3405": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "ADD",
      "path": "10"
    },
    "3406": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3407": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "3409": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3410": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3411": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "ADD",
      "path": "10"
    },
    "3412": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3413": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3414": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3415": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3416": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3417": {
      "op": "DUP1"
    },
    "3418": {
      "op": "DUP4"
    },
    "3419": {
      "op": "SUB"
    },
    "3420": {
      "op": "SWAP1"
    },
    "3421": {
      "op": "SWAP2"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "op": "DUP2"
    },
    "3424": {
      "op": "MSTORE"
    },
    "3425": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "3427": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3428": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3429": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "ADD",
      "path": "10"
    },
    "3430": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3431": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3432": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3433": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18210,
        18268
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3435": {
      "op": "DUP2"
    },
    "3436": {
      "op": "ADD"
    },
    "3437": {
      "op": "DUP1"
    },
    "3438": {
      "op": "MLOAD"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3445": {
      "op": "SHL"
    },
    "3446": {
      "op": "SUB"
    },
    "3447": {
      "op": "AND"
    },
    "3448": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "OR"
    },
    "3457": {
      "op": "SWAP1"
    },
    "3458": {
      "op": "MSTORE"
    },
    "3459": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18159,
        18278
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD8D"
    },
    "3462": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18159,
        18278
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3463": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18191,
        18196
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3464": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18191,
        18196
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3465": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18159,
        18177
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF91"
    },
    "3468": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        18159,
        18278
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3469": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18159,
        18278
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3470": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18047,
        18285
      ],
      "op": "POP",
      "path": "10"
    },
    "3471": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18047,
        18285
      ],
      "op": "POP",
      "path": "10"
    },
    "3472": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        18047,
        18285
      ],
      "op": "POP",
      "path": "10"
    },
    "3473": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        18047,
        18285
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3474": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        22958,
        23182
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3475": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23021,
        23033
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 43,
      "value": "0x1"
    },
    "3477": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23021,
        23033
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3478": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23021,
        23045
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDA5"
    },
    "3481": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23021,
        23045
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3482": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23038,
        23044
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3483": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23021,
        23045
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3488": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23021,
        23037
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC7C"
    },
    "3491": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23021,
        23045
      ],
      "op": "AND",
      "path": "10"
    },
    "3492": {
      "fn": "LPTokenWrapper.stake",
      "jump": "i",
      "offset": [
        23021,
        23045
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3493": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23021,
        23045
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3494": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23006,
        23018
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3496": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23006,
        23045
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3497": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23089,
        23099
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 44
    },
    "3498": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3500": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3501": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3502": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3503": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23088
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3505": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3507": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3508": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3510": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3511": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3512": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23100
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3513": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC8"
    },
    "3516": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23112
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3517": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23105,
        23111
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3518": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23112
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3523": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23104
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC7C"
    },
    "3526": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23112
      ],
      "op": "AND",
      "path": "10"
    },
    "3527": {
      "fn": "LPTokenWrapper.stake",
      "jump": "i",
      "offset": [
        23079,
        23112
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3528": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23079,
        23112
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3529": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23065,
        23075
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3530": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3532": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3533": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3534": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3535": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23064
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3537": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3539": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3540": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3542": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3543": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23076
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3544": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23112
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3545": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23112
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3546": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23112
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3547": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23055,
        23112
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3548": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23123
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 45
    },
    "3549": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23123
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3550": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB11"
    },
    "3553": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23175
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "op": "SUB"
    },
    "3562": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23123
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3563": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23123
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3564": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23123
      ],
      "op": "AND",
      "path": "10"
    },
    "3565": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23123
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3566": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23161,
        23165
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "3567": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23168,
        23174
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3568": {
      "fn": "LPTokenWrapper.stake",
      "offset": [
        23122,
        23140
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x114F"
    },
    "3571": {
      "fn": "LPTokenWrapper.stake",
      "jump": "i",
      "offset": [
        23122,
        23175
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3572": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        10986,
        11245
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3579": {
      "op": "SHL"
    },
    "3580": {
      "op": "SUB"
    },
    "3581": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11072,
        11094
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 46
    },
    "3582": {
      "branch": 69,
      "fn": "Ownable._transferOwnership",
      "offset": [
        11072,
        11094
      ],
      "op": "AND",
      "path": "10"
    },
    "3583": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE39"
    },
    "3586": {
      "branch": 69,
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3587": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3589": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3596": {
      "op": "SHL"
    },
    "3597": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3598": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3599": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3601": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "ADD",
      "path": "10"
    },
    "3602": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3603": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3604": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3606": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "ADD",
      "path": "10"
    },
    "3607": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3608": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3609": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "SUB",
      "path": "10"
    },
    "3610": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3611": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3612": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x26"
    },
    "3614": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3615": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3616": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3618": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "ADD",
      "path": "10"
    },
    "3619": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3620": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11E6"
    },
    "3623": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x26"
    },
    "3625": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3626": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "3627": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3629": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "ADD",
      "path": "10"
    },
    "3630": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3631": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "POP",
      "path": "10"
    },
    "3632": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "POP",
      "path": "10"
    },
    "3633": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3635": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3636": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3637": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3638": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "SUB",
      "path": "10"
    },
    "3639": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3640": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3641": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11051,
        11158
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3642": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11194,
        11200
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 47,
      "value": "0x3"
    },
    "3644": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11194,
        11200
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3645": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3647": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3654": {
      "op": "SHL"
    },
    "3655": {
      "op": "SUB"
    },
    "3656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3657": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3658": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "AND",
      "path": "10"
    },
    "3659": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3660": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11194,
        11200
      ],
      "op": "AND",
      "path": "10"
    },
    "3661": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11194,
        11200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3662": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3695": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3696": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11194,
        11200
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3698": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11194,
        11200
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3699": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11173,
        11211
      ],
      "op": "LOG3",
      "path": "10"
    },
    "3700": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11227
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 48,
      "value": "0x3"
    },
    "3702": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3703": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3710": {
      "op": "SHL"
    },
    "3711": {
      "op": "SUB"
    },
    "3712": {
      "op": "NOT"
    },
    "3713": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "AND",
      "path": "10"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "op": "SUB"
    },
    "3722": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3723": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3724": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3725": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "AND",
      "path": "10"
    },
    "3726": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3727": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3728": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3729": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "OR",
      "path": "10"
    },
    "3730": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3731": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        11221,
        11238
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3732": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        10986,
        11245
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3733": {
      "fn": "SafeMath.sub",
      "offset": [
        3980,
        4197
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3734": {
      "fn": "SafeMath.sub",
      "offset": [
        4096,
        4103
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3736": {
      "fn": "SafeMath.sub",
      "offset": [
        4131,
        4143
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 49
    },
    "3737": {
      "fn": "SafeMath.sub",
      "offset": [
        4123,
        4129
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3738": {
      "fn": "SafeMath.sub",
      "offset": [
        4123,
        4129
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3739": {
      "fn": "SafeMath.sub",
      "offset": [
        4123,
        4129
      ],
      "op": "GT",
      "path": "10"
    },
    "3740": {
      "branch": 70,
      "fn": "SafeMath.sub",
      "offset": [
        4123,
        4129
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3741": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF24"
    },
    "3744": {
      "branch": 70,
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3745": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3747": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3756": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3757": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3759": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "ADD",
      "path": "10"
    },
    "3760": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3761": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3762": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3764": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "ADD",
      "path": "10"
    },
    "3765": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3766": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3767": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SUB",
      "path": "10"
    },
    "3768": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3769": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3770": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3771": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3772": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3773": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3774": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3775": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3776": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3778": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "ADD",
      "path": "10"
    },
    "3779": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3780": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3781": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3782": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3783": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3784": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3786": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "ADD",
      "path": "10"
    },
    "3787": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3788": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3789": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3790": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3793": {
      "op": "JUMPDEST"
    },
    "3794": {
      "op": "DUP4"
    },
    "3795": {
      "op": "DUP2"
    },
    "3796": {
      "op": "LT"
    },
    "3797": {
      "op": "ISZERO"
    },
    "3798": {
      "op": "PUSH2",
      "value": "0xEE9"
    },
    "3801": {
      "op": "JUMPI"
    },
    "3802": {
      "op": "DUP2"
    },
    "3803": {
      "op": "DUP2"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "op": "MLOAD"
    },
    "3806": {
      "op": "DUP4"
    },
    "3807": {
      "op": "DUP3"
    },
    "3808": {
      "op": "ADD"
    },
    "3809": {
      "op": "MSTORE"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3812": {
      "op": "ADD"
    },
    "3813": {
      "op": "PUSH2",
      "value": "0xED1"
    },
    "3816": {
      "op": "JUMP"
    },
    "3817": {
      "op": "JUMPDEST"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3820": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3821": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3822": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3823": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3824": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3825": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3826": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "ADD",
      "path": "10"
    },
    "3827": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3828": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3830": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "AND",
      "path": "10"
    },
    "3831": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3832": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3833": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF16"
    },
    "3836": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3837": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3838": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3839": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SUB",
      "path": "10"
    },
    "3840": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3841": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3842": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3844": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3845": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3847": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SUB",
      "path": "10"
    },
    "3848": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "3851": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "EXP",
      "path": "10"
    },
    "3852": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SUB",
      "path": "10"
    },
    "3853": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "NOT",
      "path": "10"
    },
    "3854": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "AND",
      "path": "10"
    },
    "3855": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3856": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3857": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3859": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "ADD",
      "path": "10"
    },
    "3860": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3861": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3862": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3863": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3864": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3865": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3866": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3867": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "POP",
      "path": "10"
    },
    "3868": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3870": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3871": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3872": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3873": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SUB",
      "path": "10"
    },
    "3874": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3875": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3876": {
      "fn": "SafeMath.sub",
      "offset": [
        4115,
        4144
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3877": {
      "op": "POP"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "fn": "SafeMath.sub",
      "offset": [
        4166,
        4171
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3881": {
      "fn": "SafeMath.sub",
      "offset": [
        4166,
        4171
      ],
      "op": "SUB",
      "path": "10"
    },
    "3882": {
      "fn": "SafeMath.sub",
      "offset": [
        4166,
        4171
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3883": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3980,
        4197
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3884": {
      "fn": "SafeMath.div",
      "offset": [
        5996,
        6364
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3885": {
      "fn": "SafeMath.div",
      "offset": [
        6112,
        6119
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3887": {
      "fn": "SafeMath.div",
      "offset": [
        6212,
        6224
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 50
    },
    "3888": {
      "branch": 71,
      "fn": "SafeMath.div",
      "offset": [
        6205,
        6210
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3889": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF7B"
    },
    "3892": {
      "branch": 71,
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3893": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3895": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3902": {
      "op": "SHL"
    },
    "3903": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3904": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3905": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3907": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3909": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3910": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "ADD",
      "path": "10"
    },
    "3911": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3912": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3913": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3914": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3915": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3916": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "3918": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3919": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "ADD",
      "path": "10"
    },
    "3920": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3921": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3922": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3923": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3924": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3925": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3926": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3927": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "3929": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3930": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3931": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "ADD",
      "path": "10"
    },
    "3932": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3933": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3934": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3935": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "ADD",
      "path": "10"
    },
    "3936": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3937": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3938": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3939": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3940": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3942": {
      "op": "DUP4"
    },
    "3943": {
      "op": "ISZERO"
    },
    "3944": {
      "op": "PUSH2",
      "value": "0xEE9"
    },
    "3947": {
      "op": "JUMPI"
    },
    "3948": {
      "op": "DUP2"
    },
    "3949": {
      "op": "DUP2"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "op": "MLOAD"
    },
    "3952": {
      "op": "DUP4"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "ADD"
    },
    "3955": {
      "op": "MSTORE"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3958": {
      "op": "ADD"
    },
    "3959": {
      "op": "PUSH2",
      "value": "0xED1"
    },
    "3962": {
      "op": "JUMP"
    },
    "3963": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3964": {
      "fn": "SafeMath.div",
      "offset": [
        6197,
        6225
      ],
      "op": "POP",
      "path": "10"
    },
    "3965": {
      "fn": "SafeMath.div",
      "offset": [
        6235,
        6244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3967": {
      "fn": "SafeMath.div",
      "offset": [
        6251,
        6252
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3968": {
      "fn": "SafeMath.div",
      "offset": [
        6247,
        6248
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3969": {
      "fn": "SafeMath.div",
      "offset": [
        6247,
        6252
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3970": {
      "fn": "SafeMath.div",
      "offset": [
        6247,
        6252
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF87"
    },
    "3973": {
      "fn": "SafeMath.div",
      "offset": [
        6247,
        6252
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3974": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        6247,
        6252
      ],
      "op": "INVALID",
      "path": "10"
    },
    "3975": {
      "fn": "SafeMath.div",
      "offset": [
        6247,
        6252
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3976": {
      "fn": "SafeMath.div",
      "offset": [
        6247,
        6252
      ],
      "op": "DIV",
      "path": "10"
    },
    "3977": {
      "fn": "SafeMath.div",
      "offset": [
        6247,
        6252
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "3978": {
      "fn": "SafeMath.div",
      "offset": [
        5996,
        6364
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3979": {
      "op": "POP"
    },
    "3980": {
      "op": "POP"
    },
    "3981": {
      "op": "POP"
    },
    "3982": {
      "op": "POP"
    },
    "3983": {
      "op": "POP"
    },
    "3984": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        5996,
        6364
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3985": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        20572,
        21725
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3986": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21167,
        21194
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 51,
      "value": "0xFA3"
    },
    "3989": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21175,
        21180
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3996": {
      "op": "SHL"
    },
    "3997": {
      "op": "SUB"
    },
    "3998": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21167,
        21192
      ],
      "op": "AND",
      "path": "10"
    },
    "3999": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21167,
        21192
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11A9"
    },
    "4002": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        21167,
        21194
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4003": {
      "branch": 72,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21167,
        21194
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4004": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFF4"
    },
    "4007": {
      "branch": 72,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4008": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4010": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4011": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4020": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4021": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4023": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4025": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4026": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "ADD",
      "path": "10"
    },
    "4027": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4028": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "4030": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "4032": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4033": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "ADD",
      "path": "10"
    },
    "4034": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4035": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "4068": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "4070": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4071": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "ADD",
      "path": "10"
    },
    "4072": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4073": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4074": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4075": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4076": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4077": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4078": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "SUB",
      "path": "10"
    },
    "4079": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "4081": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "ADD",
      "path": "10"
    },
    "4082": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4083": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4084": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21159,
        21230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4085": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21301,
        21313
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4087": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21315,
        21338
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "4089": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21350,
        21355
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4096": {
      "op": "SHL"
    },
    "4097": {
      "op": "SUB"
    },
    "4098": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21361
      ],
      "op": "AND",
      "path": "10"
    },
    "4099": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21362,
        21366
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4100": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4102": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4103": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4104": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4105": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4106": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4107": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4108": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4110": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "ADD",
      "path": "10"
    },
    "4111": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4112": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4113": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4114": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4115": {
      "op": "JUMPDEST"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4118": {
      "op": "DUP4"
    },
    "4119": {
      "op": "LT"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x1032"
    },
    "4123": {
      "op": "JUMPI"
    },
    "4124": {
      "op": "DUP1"
    },
    "4125": {
      "op": "MLOAD"
    },
    "4126": {
      "op": "DUP3"
    },
    "4127": {
      "op": "MSTORE"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4130": {
      "op": "NOT"
    },
    "4131": {
      "op": "SWAP1"
    },
    "4132": {
      "op": "SWAP3"
    },
    "4133": {
      "op": "ADD"
    },
    "4134": {
      "op": "SWAP2"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4137": {
      "op": "SWAP2"
    },
    "4138": {
      "op": "DUP3"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "SWAP2"
    },
    "4141": {
      "op": "ADD"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4145": {
      "op": "JUMP"
    },
    "4146": {
      "op": "JUMPDEST"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4149": {
      "op": "DUP4"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4152": {
      "op": "SUB"
    },
    "4153": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4156": {
      "op": "EXP"
    },
    "4157": {
      "op": "SUB"
    },
    "4158": {
      "op": "DUP1"
    },
    "4159": {
      "op": "NOT"
    },
    "4160": {
      "op": "DUP3"
    },
    "4161": {
      "op": "MLOAD"
    },
    "4162": {
      "op": "AND"
    },
    "4163": {
      "op": "DUP2"
    },
    "4164": {
      "op": "DUP5"
    },
    "4165": {
      "op": "MLOAD"
    },
    "4166": {
      "op": "AND"
    },
    "4167": {
      "op": "DUP1"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "OR"
    },
    "4170": {
      "op": "DUP6"
    },
    "4171": {
      "op": "MSTORE"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "op": "POP"
    },
    "4175": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4176": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4177": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4178": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4179": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4180": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "ADD",
      "path": "10"
    },
    "4181": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4182": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4183": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4184": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4186": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4188": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4189": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4190": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4191": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "SUB",
      "path": "10"
    },
    "4192": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4193": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4195": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4196": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "GAS",
      "path": "10"
    },
    "4197": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "CALL",
      "path": "10"
    },
    "4198": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4199": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4200": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4201": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21342,
        21367
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4202": {
      "op": "DUP1"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4205": {
      "op": "DUP2"
    },
    "4206": {
      "op": "EQ"
    },
    "4207": {
      "op": "PUSH2",
      "value": "0x1094"
    },
    "4210": {
      "op": "JUMPI"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4213": {
      "op": "MLOAD"
    },
    "4214": {
      "op": "SWAP2"
    },
    "4215": {
      "op": "POP"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4218": {
      "op": "NOT"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4221": {
      "op": "RETURNDATASIZE"
    },
    "4222": {
      "op": "ADD"
    },
    "4223": {
      "op": "AND"
    },
    "4224": {
      "op": "DUP3"
    },
    "4225": {
      "op": "ADD"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "RETURNDATASIZE"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "RETURNDATASIZE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4237": {
      "op": "DUP5"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "RETURNDATACOPY"
    },
    "4240": {
      "op": "PUSH2",
      "value": "0x1099"
    },
    "4243": {
      "op": "JUMP"
    },
    "4244": {
      "op": "JUMPDEST"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4247": {
      "op": "SWAP2"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "op": "JUMPDEST"
    },
    "4250": {
      "op": "POP"
    },
    "4251": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21300,
        21367
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4252": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21300,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4253": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21300,
        21367
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4254": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21300,
        21367
      ],
      "op": "POP",
      "path": "10"
    },
    "4255": {
      "branch": 73,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21385,
        21392
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 52
    },
    "4256": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10F0"
    },
    "4259": {
      "branch": 73,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4260": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4262": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4263": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4270": {
      "op": "SHL"
    },
    "4271": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4272": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4273": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4275": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4277": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4278": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "ADD",
      "path": "10"
    },
    "4279": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4280": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4281": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4282": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "4284": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4285": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "ADD",
      "path": "10"
    },
    "4286": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4287": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4320": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "4322": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4323": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "ADD",
      "path": "10"
    },
    "4324": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4325": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4326": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4327": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4328": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4329": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4330": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "SUB",
      "path": "10"
    },
    "4331": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "4333": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "ADD",
      "path": "10"
    },
    "4334": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4335": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4336": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21377,
        21429
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4337": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21444,
        21461
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4338": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21444,
        21461
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4339": {
      "branch": 74,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21444,
        21465
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4340": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21440,
        21719
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1149"
    },
    "4343": {
      "branch": 74,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21440,
        21719
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4344": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21613,
        21623
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 53
    },
    "4345": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21602,
        21632
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4346": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21602,
        21632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4348": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21602,
        21632
      ],
      "op": "ADD",
      "path": "10"
    },
    "4349": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21602,
        21632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4350": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21602,
        21632
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4353": {
      "op": "DUP2"
    },
    "4354": {
      "op": "LT"
    },
    "4355": {
      "op": "ISZERO"
    },
    "4356": {
      "op": "PUSH2",
      "value": "0x110C"
    },
    "4359": {
      "op": "JUMPI"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4362": {
      "op": "DUP1"
    },
    "4363": {
      "op": "REVERT"
    },
    "4364": {
      "op": "JUMPDEST"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "branch": 75,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21602,
        21632
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4367": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1149"
    },
    "4370": {
      "branch": 75,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4371": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4373": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4380": {
      "op": "SHL"
    },
    "4381": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4382": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4383": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4385": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "ADD",
      "path": "10"
    },
    "4386": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4387": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4388": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4390": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "ADD",
      "path": "10"
    },
    "4391": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4392": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4393": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "SUB",
      "path": "10"
    },
    "4394": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4395": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4396": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2A"
    },
    "4398": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4399": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4400": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4402": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "ADD",
      "path": "10"
    },
    "4403": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4404": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124E"
    },
    "4407": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2A"
    },
    "4409": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4410": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "4411": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4413": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "ADD",
      "path": "10"
    },
    "4414": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4415": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "POP",
      "path": "10"
    },
    "4416": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "POP",
      "path": "10"
    },
    "4417": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4419": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4420": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4421": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4422": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "SUB",
      "path": "10"
    },
    "4423": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4424": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4425": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        21577,
        21708
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4426": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        20572,
        21725
      ],
      "op": "POP",
      "path": "10"
    },
    "4427": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        20572,
        21725
      ],
      "op": "POP",
      "path": "10"
    },
    "4428": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        20572,
        21725
      ],
      "op": "POP",
      "path": "10"
    },
    "4429": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        20572,
        21725
      ],
      "op": "POP",
      "path": "10"
    },
    "4430": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "o",
      "offset": [
        20572,
        21725
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4431": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18291,
        18565
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4432": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 54,
      "value": "0x40"
    },
    "4434": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4435": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4442": {
      "op": "SHL"
    },
    "4443": {
      "op": "SUB"
    },
    "4444": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4445": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4446": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "AND",
      "path": "10"
    },
    "4447": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "4449": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4450": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "ADD",
      "path": "10"
    },
    "4451": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4452": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4453": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "AND",
      "path": "10"
    },
    "4454": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "4456": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4457": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "ADD",
      "path": "10"
    },
    "4458": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4459": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "4461": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4462": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4463": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "ADD",
      "path": "10"
    },
    "4464": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4465": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4466": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4467": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4468": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4469": {
      "op": "DUP1"
    },
    "4470": {
      "op": "DUP4"
    },
    "4471": {
      "op": "SUB"
    },
    "4472": {
      "op": "SWAP1"
    },
    "4473": {
      "op": "SWAP2"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "op": "DUP2"
    },
    "4476": {
      "op": "MSTORE"
    },
    "4477": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x84"
    },
    "4479": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4480": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4481": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "ADD",
      "path": "10"
    },
    "4482": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4483": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4484": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4485": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18480,
        18548
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4487": {
      "op": "DUP2"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "DUP1"
    },
    "4490": {
      "op": "MLOAD"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4497": {
      "op": "SHL"
    },
    "4498": {
      "op": "SUB"
    },
    "4499": {
      "op": "AND"
    },
    "4500": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4507": {
      "op": "SHL"
    },
    "4508": {
      "op": "OR"
    },
    "4509": {
      "op": "SWAP1"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18429,
        18558
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1149"
    },
    "4514": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18429,
        18558
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4515": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18461,
        18466
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4516": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18461,
        18466
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4517": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        18429,
        18447
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF91"
    },
    "4520": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        18429,
        18558
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4521": {
      "fn": "Address.isContract",
      "offset": [
        14829,
        15661
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4522": {
      "fn": "Address.isContract",
      "offset": [
        14889,
        14893
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4524": {
      "fn": "Address.isContract",
      "offset": [
        15564,
        15584
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4525": {
      "fn": "Address.isContract",
      "offset": [
        15564,
        15584
      ],
      "op": "EXTCODEHASH",
      "path": "10"
    },
    "4526": {
      "fn": "Address.isContract",
      "offset": [
        15397,
        15463
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "4559": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15626
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 55
    },
    "4560": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15626
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4561": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15626
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4562": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15626
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4563": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15626
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4564": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15653
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11DD"
    },
    "4567": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15653
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4568": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15653
      ],
      "op": "POP",
      "path": "10"
    },
    "4569": {
      "fn": "Address.isContract",
      "offset": [
        15642,
        15653
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4570": {
      "fn": "Address.isContract",
      "offset": [
        15630,
        15638
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4571": {
      "fn": "Address.isContract",
      "offset": [
        15630,
        15653
      ],
      "op": "EQ",
      "path": "10"
    },
    "4572": {
      "fn": "Address.isContract",
      "offset": [
        15630,
        15653
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4573": {
      "fn": "Address.isContract",
      "offset": [
        15611,
        15653
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4574": {
      "fn": "Address.isContract",
      "offset": [
        15603,
        15654
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4575": {
      "fn": "Address.isContract",
      "offset": [
        14829,
        15661
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4576": {
      "op": "POP"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        14829,
        15661
      ],
      "op": "JUMP",
      "path": "10"
    }
  },
  "sha1": "afd263028fc6d6e688c76b43cc80597c855cff25",
  "source": "/*\n   ____            __   __        __   _\n  / __/__ __ ___  / /_ / /  ___  / /_ (_)__ __\n _\\ \\ / // // _ \\/ __// _ \\/ -_)/ __// / \\ \\ /\n/___/ \\_, //_//_/\\__//_//_/\\__/ \\__//_/ /_\\_\\\n     /___/\n\n* Synthetix: YFIRewards.sol\n*\n* Docs: https://docs.synthetix.io/\n*\n*\n* MIT License\n* ===========\n*\n* Copyright (c) 2020 Synthetix\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n*/\n\n// File: @openzeppelin/contracts/math/Math.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + (((a % 2) + (b % 2)) / 2);\n    }\n}\n\n// File: @openzeppelin/contracts/math/SafeMath.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: @openzeppelin/contracts/GSN/Context.sol\n\npragma solidity ^0.5.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor() internal {}\n\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/ownership/Ownable.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() internal {\n        _owner = _msgSender();\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return _msgSender() == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n        \n    function mint(address account, uint256 amount) external;\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\npragma solidity ^0.5.5;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * This test is non-exhaustive, and there may be false-negatives: during the\n     * execution of a contract's constructor, its address will be reported as\n     * not containing a contract.\n     *\n     * IMPORTANT: It is unsafe to assume that an address for which this\n     * function returns false is an externally-owned account (EOA) and not a\n     * contract.\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n\n\n            bytes32 accountHash\n         = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codehash := extcodehash(account)\n        }\n        return (codehash != 0x0 && codehash != accountHash);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account)\n        internal\n        pure\n        returns (address payable)\n    {\n        return address(uint160(account));\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     *\n     * _Available since v2.4.0._\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(\n            address(this).balance >= amount,\n            \"Address: insufficient balance\"\n        );\n\n        // solhint-disable-next-line avoid-call-value\n        (bool success, ) = recipient.call.value(amount)(\"\");\n        require(\n            success,\n            \"Address: unable to send value, recipient may have reverted\"\n        );\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\n\npragma solidity ^0.5.0;\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transfer.selector, to, value)\n        );\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n        );\n    }\n\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, value)\n        );\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(\n            value\n        );\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(\n                token.approve.selector,\n                spender,\n                newAllowance\n            )\n        );\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\n            value,\n            \"SafeERC20: decreased allowance below zero\"\n        );\n        callOptionalReturn(\n            token,\n            abi.encodeWithSelector(\n                token.approve.selector,\n                spender,\n                newAllowance\n            )\n        );\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(\n                abi.decode(returndata, (bool)),\n                \"SafeERC20: ERC20 operation did not succeed\"\n            );\n        }\n    }\n}\n\n// File: contracts/IRewardDistributionRecipient.sol\n\npragma solidity ^0.5.0;\n\ncontract IRewardDistributionRecipient is Ownable {\n    address rewardDistribution;\n\n    function notifyRewardAmount(uint256 reward) external;\n\n    modifier onlyRewardDistribution() {\n        require(\n            _msgSender() == rewardDistribution,\n            \"Caller is not reward distribution\"\n        );\n        _;\n    }\n\n    function setRewardDistribution(address _rewardDistribution)\n        external\n        onlyOwner\n    {\n        rewardDistribution = _rewardDistribution;\n    }\n}\n\n\n// File: contracts/CurveRewards.sol\n\npragma solidity ^0.5.0;\n\ninterface IFreeFromUpTo {\n    function freeFromUpTo(address from, uint256 value)\n        external\n        returns (uint256 freed);\n}\n\ncontract LPTokenWrapper {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    IERC20 public y = IERC20(0xF3fb6D4a239981Fe39C351406A7Ab0a82056a7D2);\n\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function stake(uint256 amount) public {\n        _totalSupply = _totalSupply.add(amount);\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n        y.safeTransferFrom(msg.sender, address(this), amount);\n    }\n\n    function withdraw(uint256 amount) public {\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\n        y.safeTransfer(msg.sender, amount);\n    }\n}\n\ncontract YearnRewards is LPTokenWrapper, IRewardDistributionRecipient {\n    IERC20 public yfi = IERC20(0xB1Eb306c541D3f89B0D90706d8834BD134Eeb3Cc);\n    uint256 public constant DURATION = 7 days;\n\n    mapping(address => uint256) public rewards;\n\n    //\u6bcf\u80a1\u5206\u7ea2\u7b97\u6cd5\uff1a\n    //\u7ef4\u62a4\u4e00\u4e2a\u5168\u5c40\u7684\u6bcf\u80a1\u5206\u7ea2\u91d1\u989d earnings_per_share\n    //\u6bcf\u5f53\u6709\u65b0\u7684\u4ee3\u5e01\u8fdb\u6765\u5206\u7ea2\uff0c\u65b0\u7684\u6bcf\u80a1\u5206\u7ea2\u91d1\u989d+= \u8fdb\u6765\u7684\u4ee3\u5e01\u6570\u91cf/\u603b\u8d28\u62bc\u6570  make_profit\n    // \u6bcf\u5f53\u6709\u4eba\u8d28\u62bc\u7684\u65f6\u5019 ,\u4ed6\u7684\u5df2\u7ecf\u5206\u7ea2\u91d1\u989d\u4e3a  \u5df2\u7ecf\u5206\u7ea2\u91d1\u989d+=\u6bcf\u80a1\u5206\u7ea2\u91d1\u989d*\u8d28\u62bc\u6570\u91cf stake\n    //\u6bcf\u5f53\u6709\u4eba\u89e3\u538b\u7684\u65f6\u5019 , \u4ed6\u7684\u5df2\u7ecf\u5206\u7ea2\u91d1\u989d\u4e3a  \u5df2\u7ecf\u5206\u7ea2\u91d1\u989d-=\u6bcf\u80a1\u5206\u7ea2\u91d1\u989d*\u8d28\u62bc\u6570\u91cf  withdraw\n    // \u9886\u53d6\u5206\u7ea2 \u4e3a \u6bcf\u80a1\u5206\u7ea2\u91d1\u989d*\u8d28\u62bc\u6570\u91cf - \u5df2\u7ecf\u5206\u7ea2\u91d1\u989d getReward\n\n    uint256 public earnings_per_share; //\u6bcf\u80a1\u5206\u7ea2\n    uint256 public lastblock; //\u4e0a\u6b21\u4fee\u6539\u6bcf\u80a1\u5206\u7ea2\u7684\u65f6\u95f4\n    uint256 public starttime = 111; //\n    uint256 public DailyOutput = 1428 * 1e18; //10000/7\n    uint256 public Halvetime; //\u51cf\u534a\u7684\u65f6\u95f4\n\n    event DailyOutputChanege(uint256 dailyOutput);\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n\n    //chi\n    // IFreeFromUpTo public constant chi = IFreeFromUpTo(\n    //     0x0000000000004946c0e9F43F4Dee607b0eF1fA1c\n    // );\n    // modifier discountCHI {\n    //     uint256 gasStart = gasleft();\n    //     _;\n    //     uint256 gasSpent = 21000 + gasStart - gasleft() + 16 * msg.data.length;\n    //     chi.freeFromUpTo(msg.sender, (gasSpent + 14154) / 41130);\n    // }\n\n    constructor ()public{\n        Halvetime = block.timestamp + DURATION;\n    }\n\n    //\u6c42\u51fa\u6bcf\u4e2a\u533a\u5757\u4ea7\u51fa\u591a\u5c11\u4ee3\u5e01.\n    function getPerBlockOutput() public view returns (uint256) {\n        return DailyOutput.div(6646);// 13\u79d21\u4e2a\u533a\u5757,\u6bcf\u5929\u5927\u6982\u662f6646\u4e2a\u533a\u5757 //https://etherscan.io/chart/blocktime\n    }\n\n    //\u4e0a\u6b21\u5230\u73b0\u5728\u4e00\u5171\u8981\u5206\u7684\u4ee3\u5e01\u662f\u591a\u5c11\n    function getprofit() private returns (uint256) {\n        if (block.timestamp > Halvetime){\n            DailyOutput = DailyOutput.div(2); //\u51cf\u534a\n            Halvetime = block.timestamp + DURATION;\n        }\n        uint256 new_blocknum = block.number;\n        if (new_blocknum <= lastblock) {\n            return 0;\n        }\n        uint256 diff = new_blocknum.sub(lastblock);\n        lastblock = new_blocknum;\n        uint256 profit = diff.mul(getPerBlockOutput());\n        return profit;\n    }\n\n    modifier make_profit() {\n        uint256 amount = getprofit();\n        if (amount > 0) {\n            yfi.mint(address(this), amount);\n            if (totalSupply() == 0){\n                earnings_per_share = 0;\n            }else{\n                earnings_per_share = earnings_per_share.add(\n                amount.div(totalSupply())\n            );\n            }\n            \n        }\n        _;\n    }\n\n    function earned(address account) public view returns (uint256) {\n        uint256 _cal = earnings_per_share.mul(balanceOf(account));\n        if (_cal < rewards[msg.sender]) {\n            return 0;\n        } else {\n            return _cal.sub(rewards[msg.sender]);\n        }\n    }\n\n    // stake visibility is public as overriding LPTokenWrapper's stake() function\n    function stake(uint256 amount) public make_profit  {\n        require(block.timestamp >starttime,\"not start\");\n        require(amount > 0, \"Cannot stake 0\");\n        if (earnings_per_share == 0){\n            rewards[msg.sender] = 0;\n        }else{\n            rewards[msg.sender] = rewards[msg.sender].add(\n                earnings_per_share.mul(amount)\n            );\n        }\n        super.stake(amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public make_profit \n    {\n        require(amount > 0, \"Cannot withdraw 0\");\n        getReward();\n\n        rewards[msg.sender] = rewards[msg.sender].sub(\n            earnings_per_share.mul(amount)\n        );\n        super.withdraw(amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function exit() external {\n        withdraw(balanceOf(msg.sender));\n    }\n\n    function getReward() public make_profit  {\n        uint256 reward = earned(msg.sender);\n        if (reward > 0) {\n            rewards[msg.sender] = earnings_per_share.mul(balanceOf(msg.sender));\n            yfi.safeTransfer(msg.sender, reward);\n            emit RewardPaid(msg.sender, reward);\n        }\n    }\n\n    function notifyRewardAmount(uint256 _dailyOutput)\n        external\n        onlyRewardDistribution\n    {\n        DailyOutput = _dailyOutput;\n        emit DailyOutputChanege(_dailyOutput);\n    }\n}\n",
  "sourceMap": "23400:4690:10:-;;;22588:68;;;-1:-1:-1;;;;;;22588:68:10;;;22613:42;22588:68;;;;23476:70;;;;;;23503:42;23476:70;;;24344:3;24317:30;;24385:11;24356:40;;25067:75;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;9557:12:10;-1:-1:-1;;;;;9557:10:10;:12;:::i;:::-;9548:6;:21;;-1:-1:-1;;;;;;9548:21:10;-1:-1:-1;;;;;9548:21:10;;;;;;;;9584:40;;9617:6;;;-1:-1:-1;;9584:40:10;;-1:-1:-1;;9584:40:10;25109:15;23587:6;25109:26;25097:9;:38;23400:4690;;8474:96;8553:10;8474:96;:::o;23400:4690::-;;;;;;;",
  "sourcePath": "contracts/controllers/yCurveFiRewardsAddress.sol",
  "type": "contract"
}