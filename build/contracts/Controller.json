{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewards",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "approveStrategy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedStrategies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "converters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "earn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "parts",
          "type": "uint256"
        }
      ],
      "name": "getExpectedReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "inCaseStrategyTokenGetStuck",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "onesplit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "revokeStrategy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_input",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_output",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_converter",
          "type": "address"
        }
      ],
      "name": "setConverter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_onesplit",
          "type": "address"
        }
      ],
      "name": "setOneSplit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewards",
          "type": "address"
        }
      ],
      "name": "setRewards",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_split",
          "type": "uint256"
        }
      ],
      "name": "setSplit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "setStrategy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "split",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "parts",
          "type": "uint256"
        }
      ],
      "name": "yearn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "6": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "7": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
    "9": "contracts/controllers/Controller.sol"
  },
  "ast": {
    "absolutePath": "contracts/controllers/Controller.sol",
    "exportedSymbols": {
      "Controller": [
        771
      ]
    },
    "id": 772,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:9"
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 16423,
        "src": "59:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 16354,
        "src": "118:53:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 16718,
        "src": "172:53:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 16643,
        "src": "226:61:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/Converter.sol",
        "file": "../../interfaces/yearn/Converter.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 16728,
        "src": "289:46:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/OneSplitAudit.sol",
        "file": "../../interfaces/yearn/OneSplitAudit.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 16767,
        "src": "336:50:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/Strategy.sol",
        "file": "../../interfaces/yearn/Strategy.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 16798,
        "src": "387:45:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 771,
        "linearizedBaseContracts": [
          771
        ],
        "name": "Controller",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 9,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16642,
              "src": "466:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$16642",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "460:27:9",
            "typeName": {
              "contractScope": null,
              "id": 10,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16422,
              "src": "480:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$16422",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 14,
            "libraryName": {
              "contractScope": null,
              "id": 12,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16717,
              "src": "498:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$16717",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "492:26:9",
            "typeName": {
              "id": 13,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "510:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 17,
            "libraryName": {
              "contractScope": null,
              "id": 15,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16353,
              "src": "529:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$16353",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "523:27:9",
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "542:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 19,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "556:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "556:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "strategist",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "587:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "587:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "name": "onesplit",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "619:23:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "619:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "rewards",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "648:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "648:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "name": "vaults",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "676:41:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "684:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "676:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "695:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33,
            "name": "strategies",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "723:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "731:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "723:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 31,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "742:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "name": "converters",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "774:65:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 34,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "782:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "774:47:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 37,
                "keyType": {
                  "id": 35,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "801:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "793:27:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 36,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "812:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "name": "approvedStrategies",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "846:70:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "854:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "846:44:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 43,
                "keyType": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "873:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "865:24:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 42,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "884:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "name": "split",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "923:26:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "923:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030",
              "id": 47,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "946:3:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 51,
            "name": "max",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "955:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 49,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "955:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 50,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "985:5:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1034:173:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 56,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1044:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18752,
                        "src": "1057:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1057:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1044:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 61,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1077:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18752,
                        "src": "1090:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1090:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1077:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "onesplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1110:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307835304644413033344330436537613866374546444165624441374161376341323143433132363765",
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1129:42:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x50FDA034C0Ce7a8f7EFDAebDA7Aa7cA21CC1267e"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1121:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1121:51:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1110:62:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:62:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1182:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1192:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1182:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:18:9"
                }
              ]
            },
            "documentation": null,
            "id": 77,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "_rewards",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1009:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1008:18:9"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1034:0:9"
            },
            "scope": 771,
            "src": "997:210:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1258:93:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 83,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "1276:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1276:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 85,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1290:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1276:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1302:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 82,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "1268:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1326:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1336:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1326:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1326:18:9"
                }
              ]
            },
            "documentation": null,
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "name": "_rewards",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1233:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1232:18:9"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:9"
            },
            "scope": 771,
            "src": "1213:138:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1408:99:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 101,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "1426:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1426:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1440:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1426:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1452:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "1418:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 108,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1476:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "_strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1489:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1476:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:24:9"
                }
              ]
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "_strategist",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1380:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1379:21:9"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:9"
            },
            "scope": 771,
            "src": "1357:150:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1554:89:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 119,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "1572:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1572:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1586:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1572:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1598:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "1564:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "split",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1622:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "_split",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1630:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1622:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:14:9"
                }
              ]
            },
            "documentation": null,
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "_split",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1531:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1530:16:9"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1554:0:9"
            },
            "scope": 771,
            "src": "1513:130:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1696:95:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 137,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "1714:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1714:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1728:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1714:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "1706:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 144,
                      "name": "onesplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1764:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "_onesplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "1775:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1764:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:20:9"
                }
              ]
            },
            "documentation": null,
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOneSplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "name": "_onesplit",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1670:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1669:19:9"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:0:9"
            },
            "scope": 771,
            "src": "1649:142:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "1848:99:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "1866:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1866:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1880:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1866:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1892:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "1858:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1916:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "1929:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1916:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1916:24:9"
                }
              ]
            },
            "documentation": null,
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "1820:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1820:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1819:21:9"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:9"
            },
            "scope": 771,
            "src": "1797:150:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "2010:182:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 175,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "2028:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2028:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 177,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2042:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2028:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 179,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "2056:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2056:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "2070:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2056:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2028:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "2173747261746567697374",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2082:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        },
                        "value": "!strategist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "2020:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:76:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 188,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "2114:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 190,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "2121:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2114:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2140:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2132:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2132:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2114:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7661756c74",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2144:7:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23c14fceac7676b670aa56866076586ea1ce15ddcf19208ec6346cf748dffbee",
                          "typeString": "literal_string \"vault\""
                        },
                        "value": "vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23c14fceac7676b670aa56866076586ea1ce15ddcf19208ec6346cf748dffbee",
                          "typeString": "literal_string \"vault\""
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "2106:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2106:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "2106:46:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 198,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2162:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2169:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2162:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "2179:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2162:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:23:9"
                }
              ]
            },
            "documentation": null,
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "1971:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "1987:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1970:32:9"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2010:0:9"
            },
            "scope": 771,
            "src": "1953:239:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "2265:119:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "2283:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2283:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 215,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2297:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2283:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2309:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "2275:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "approvedStrategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2333:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 223,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 221,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "2352:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2333:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 224,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "2360:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2333:37:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2373:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2333:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:44:9"
                }
              ]
            },
            "documentation": null,
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "2223:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "2239:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2222:35:9"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2265:0:9"
            },
            "scope": 771,
            "src": "2198:186:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "2456:120:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "2474:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2474:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2488:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2474:24:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2500:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "2466:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 244,
                          "name": "approvedStrategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "2524:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 247,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 245,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 231,
                          "src": "2543:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2524:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 248,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "2551:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2524:37:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2564:5:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2524:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:45:9"
                }
              ]
            },
            "documentation": null,
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "2414:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "2430:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2413:35:9"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2456:0:9"
            },
            "scope": 771,
            "src": "2390:186:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2694:143:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 263,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "2712:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2712:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2726:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2712:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 267,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "2740:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2740:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 269,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "2754:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2740:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2712:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "2173747261746567697374",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2766:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        },
                        "value": "!strategist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "2704:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2704:76:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 275,
                          "name": "converters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2790:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 278,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "_input",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 255,
                          "src": "2801:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2790:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 279,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "_output",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "2809:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2790:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 280,
                      "name": "_converter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "2820:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2790:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "2790:40:9"
                }
              ]
            },
            "documentation": null,
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setConverter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "name": "_input",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2613:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2613:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "name": "_output",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2637:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "name": "_converter",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2662:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2662:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2603:83:9"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2694:0:9"
            },
            "scope": 771,
            "src": "2582:255:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "2906:352:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 292,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "2924:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2924:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 294,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2938:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2924:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 296,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "2952:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2952:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 298,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "2966:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2952:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2924:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "2173747261746567697374",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2978:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        },
                        "value": "!strategist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "2916:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:76:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 305,
                              "name": "approvedStrategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "3010:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 307,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 306,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "3029:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3010:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3037:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3010:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3051:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3010:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617070726f766564",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3057:11:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bac7f5dd75efb272c5b21704dc40d091497f9cb075b4b46542d96164a7bf9",
                          "typeString": "literal_string \"!approved\""
                        },
                        "value": "!approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bac7f5dd75efb272c5b21704dc40d091497f9cb075b4b46542d96164a7bf9",
                          "typeString": "literal_string \"!approved\""
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "3002:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3002:67:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "3002:67:9"
                },
                {
                  "assignments": [
                    316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 316,
                      "name": "_current",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "3080:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3080:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 317,
                      "name": "strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3099:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 319,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 318,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "3110:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3099:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3080:37:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 321,
                      "name": "_current",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "3131:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3151:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3143:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3143:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3131:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 333,
                  "nodeType": "IfStatement",
                  "src": "3127:85:9",
                  "trueBody": {
                    "id": 332,
                    "nodeType": "Block",
                    "src": "3155:57:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 327,
                                  "name": "_current",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 316,
                                  "src": "3178:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 326,
                                "name": "Strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16797,
                                "src": "3169:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                                  "typeString": "type(contract Strategy)"
                                }
                              },
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3169:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$16797",
                                "typeString": "contract Strategy"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16791,
                            "src": "3169:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3169:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 331,
                        "nodeType": "ExpressionStatement",
                        "src": "3169:32:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 334,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3221:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 336,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3232:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3221:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 337,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "3242:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3221:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3221:30:9"
                }
              ]
            },
            "documentation": null,
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "2864:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2864:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "2880:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2880:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2863:35:9"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2906:0:9"
            },
            "scope": 771,
            "src": "2843:415:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "3318:508:9",
              "statements": [
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "name": "_strategy",
                      "nodeType": "VariableDeclaration",
                      "scope": 415,
                      "src": "3328:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3328:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 353,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 350,
                      "name": "strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3348:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 352,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "3359:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3348:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3328:38:9"
                },
                {
                  "assignments": [
                    355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 355,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 415,
                      "src": "3376:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3376:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "3401:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 356,
                          "name": "Strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16797,
                          "src": "3392:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                            "typeString": "type(contract Strategy)"
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3392:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Strategy_$16797",
                          "typeString": "contract Strategy"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "want",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16773,
                      "src": "3392:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3392:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3376:42:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 362,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "3432:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 363,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "3441:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3432:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 407,
                    "nodeType": "Block",
                    "src": "3709:72:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 403,
                              "name": "_strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "3751:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 404,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "3762:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 400,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 343,
                                  "src": "3730:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 399,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16422,
                                "src": "3723:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3723:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16422",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16455,
                            "src": "3723:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3723:47:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 406,
                        "nodeType": "ExpressionStatement",
                        "src": "3723:47:9"
                      }
                    ]
                  },
                  "id": 408,
                  "nodeType": "IfStatement",
                  "src": "3428:353:9",
                  "trueBody": {
                    "id": 398,
                    "nodeType": "Block",
                    "src": "3449:254:9",
                    "statements": [
                      {
                        "assignments": [
                          366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 366,
                            "name": "converter",
                            "nodeType": "VariableDeclaration",
                            "scope": 398,
                            "src": "3463:17:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 365,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3463:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 372,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 367,
                              "name": "converters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "3483:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 368,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "3494:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3483:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 371,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 370,
                            "name": "_want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "3502:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3483:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3463:45:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 377,
                              "name": "converter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "3550:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 378,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "3561:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 374,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 343,
                                  "src": "3529:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 373,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16422,
                                "src": "3522:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3522:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16422",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16455,
                            "src": "3522:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3522:47:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 380,
                        "nodeType": "ExpressionStatement",
                        "src": "3522:47:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 381,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 345,
                            "src": "3583:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 386,
                                "name": "_strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 349,
                                "src": "3622:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 383,
                                    "name": "converter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 366,
                                    "src": "3603:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 382,
                                  "name": "Converter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16727,
                                  "src": "3593:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Converter_$16727_$",
                                    "typeString": "type(contract Converter)"
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3593:20:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Converter_$16727",
                                  "typeString": "contract Converter"
                                }
                              },
                              "id": 385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "convert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16726,
                              "src": "3593:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) external returns (uint256)"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3593:39:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3583:49:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "nodeType": "ExpressionStatement",
                        "src": "3583:49:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 394,
                              "name": "_strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "3673:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 395,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "3684:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 391,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "3653:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 390,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16422,
                                "src": "3646:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3646:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16422",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16455,
                            "src": "3646:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3646:46:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 397,
                        "nodeType": "ExpressionStatement",
                        "src": "3646:46:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 410,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "3799:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 409,
                          "name": "Strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16797,
                          "src": "3790:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                            "typeString": "type(contract Strategy)"
                          }
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Strategy_$16797",
                          "typeString": "contract Strategy"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16776,
                      "src": "3790:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:29:9"
                }
              ]
            },
            "documentation": null,
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "3278:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 345,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "3294:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3277:33:9"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3318:0:9"
            },
            "scope": 771,
            "src": "3264:562:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "3899:64:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 424,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "3925:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 426,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 425,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "3936:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3925:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 423,
                          "name": "Strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16797,
                          "src": "3916:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                            "typeString": "type(contract Strategy)"
                          }
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3916:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Strategy_$16797",
                          "typeString": "contract Strategy"
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16796,
                      "src": "3916:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3916:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 422,
                  "id": 430,
                  "nodeType": "Return",
                  "src": "3909:47:9"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3851:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3851:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3850:16:9"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3890:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3890:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3889:9:9"
            },
            "scope": 771,
            "src": "3832:131:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 458,
              "nodeType": "Block",
              "src": "4013:145:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 438,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "4031:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4031:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 440,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "4045:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4031:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "4059:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4059:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 444,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "4073:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4059:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4031:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "2173747261746567697374",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4085:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        },
                        "value": "!strategist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd",
                          "typeString": "literal_string \"!strategist\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "4023:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4023:76:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "4023:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 451,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "4118:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 453,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 452,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "4129:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4118:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 450,
                          "name": "Strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16797,
                          "src": "4109:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                            "typeString": "type(contract Strategy)"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4109:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Strategy_$16797",
                          "typeString": "contract Strategy"
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16791,
                      "src": "4109:40:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4109:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "4109:42:9"
                }
              ]
            },
            "documentation": null,
            "id": 459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "3990:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3990:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3989:16:9"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4013:0:9"
            },
            "scope": 771,
            "src": "3969:189:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 488,
              "nodeType": "Block",
              "src": "4234:151:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 467,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "4252:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4252:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 469,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "4266:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4252:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 471,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "4280:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4280:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 473,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "4294:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4280:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4252:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4306:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "4244:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4244:76:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "4244:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 483,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18752,
                          "src": "4358:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4358:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "4370:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 480,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "4337:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 479,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "4330:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4330:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16455,
                      "src": "4330:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4330:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "4330:48:9"
                }
              ]
            },
            "documentation": null,
            "id": 489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inCaseTokensGetStuck",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "4194:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4194:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 489,
                  "src": "4210:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4210:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4193:33:9"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4234:0:9"
            },
            "scope": 771,
            "src": "4164:221:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "4470:139:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 497,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "4488:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4488:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 499,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "4502:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4488:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 501,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "4516:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4516:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 503,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "4530:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4516:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4488:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4542:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "4480:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4480:76:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "4480:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 513,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "4595:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 510,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "4575:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 509,
                          "name": "Strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16797,
                          "src": "4566:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                            "typeString": "type(contract Strategy)"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4566:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Strategy_$16797",
                          "typeString": "contract Strategy"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16781,
                      "src": "4566:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:36:9"
                }
              ]
            },
            "documentation": null,
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inCaseStrategyTokenGetStuck",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "4428:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 493,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "4447:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4447:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4427:35:9"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4470:0:9"
            },
            "scope": 771,
            "src": "4391:218:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "4761:224:9",
              "statements": [
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 559,
                      "src": "4771:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4771:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 536,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 534,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "4815:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 531,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 521,
                            "src": "4797:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 530,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "4790:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4790:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16367,
                      "src": "4790:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4790:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4771:54:9"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 559,
                      "src": "4835:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4835:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 544,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 540,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "4860:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 539,
                          "name": "Strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16797,
                          "src": "4851:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                            "typeString": "type(contract Strategy)"
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4851:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Strategy_$16797",
                          "typeString": "contract Strategy"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "want",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16773,
                      "src": "4851:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4851:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4835:42:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 545,
                          "name": "expected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "4888:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 546,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4887:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$",
                        "typeString": "tuple(uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "4944:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 552,
                          "name": "_want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "4952:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 553,
                          "name": "_balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "4959:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 554,
                          "name": "parts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 523,
                          "src": "4969:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4976:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 548,
                              "name": "onesplit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "4916:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 547,
                            "name": "OneSplitAudit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16766,
                            "src": "4902:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OneSplitAudit_$16766_$",
                              "typeString": "type(contract OneSplitAudit)"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4902:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OneSplitAudit_$16766",
                            "typeString": "contract OneSplitAudit"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getExpectedReturn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16765,
                        "src": "4902:41:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,address,uint256,uint256,uint256) view external returns (uint256,uint256[] memory)"
                        }
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4902:76:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,uint256[] memory)"
                      }
                    },
                    "src": "4887:91:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:91:9"
                }
              ]
            },
            "documentation": null,
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExpectedReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "4651:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4651:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "4678:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4678:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "name": "parts",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "4702:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4702:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4641:80:9"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "name": "expected",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "4743:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4742:18:9"
            },
            "scope": 771,
            "src": "4615:370:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 742,
              "nodeType": "Block",
              "src": "5187:1317:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 570,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "5205:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5205:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 572,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "5219:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5205:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 574,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18752,
                              "src": "5233:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5233:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 576,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "5247:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5233:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5205:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5259:13:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "5197:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5197:76:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "5197:76:9"
                },
                {
                  "assignments": [
                    583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 583,
                      "name": "_before",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "5383:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 582,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5383:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 592,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 589,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18790,
                            "src": "5434:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$771",
                              "typeString": "contract Controller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Controller_$771",
                              "typeString": "contract Controller"
                            }
                          ],
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5426:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5426:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 585,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "5408:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 584,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "5401:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5401:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16367,
                      "src": "5401:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5401:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5383:57:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 597,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "5479:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 594,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "5459:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 593,
                          "name": "Strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16797,
                          "src": "5450:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                            "typeString": "type(contract Strategy)"
                          }
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5450:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Strategy_$16797",
                          "typeString": "contract Strategy"
                        }
                      },
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16781,
                      "src": "5450:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5450:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "5450:36:9"
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "name": "_after",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "5496:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5496:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 607,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18790,
                            "src": "5546:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$771",
                              "typeString": "contract Controller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Controller_$771",
                              "typeString": "contract Controller"
                            }
                          ],
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5538:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5538:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 603,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "5520:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 602,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16422,
                          "src": "5513:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5513:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16422",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16367,
                      "src": "5513:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5496:56:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "_after",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "5566:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "_before",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "5575:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5566:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 741,
                  "nodeType": "IfStatement",
                  "src": "5562:936:9",
                  "trueBody": {
                    "id": 740,
                    "nodeType": "Block",
                    "src": "5584:914:9",
                    "statements": [
                      {
                        "assignments": [
                          615
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 615,
                            "name": "_amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 740,
                            "src": "5598:15:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 614,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5598:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 620,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 618,
                              "name": "_before",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "5627:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 616,
                              "name": "_after",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "5616:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16209,
                            "src": "5616:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5616:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5598:37:9"
                      },
                      {
                        "assignments": [
                          622
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 622,
                            "name": "_want",
                            "nodeType": "VariableDeclaration",
                            "scope": 740,
                            "src": "5649:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 621,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5649:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 628,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 624,
                                  "name": "_strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 562,
                                  "src": "5674:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 623,
                                "name": "Strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16797,
                                "src": "5665:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                                  "typeString": "type(contract Strategy)"
                                }
                              },
                              "id": 625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5665:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Strategy_$16797",
                                "typeString": "contract Strategy"
                              }
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16773,
                            "src": "5665:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5665:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5649:42:9"
                      },
                      {
                        "assignments": [
                          632
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 632,
                            "name": "_distribution",
                            "nodeType": "VariableDeclaration",
                            "scope": 740,
                            "src": "5705:30:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 630,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5705:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 631,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5705:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 633,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5705:30:9"
                      },
                      {
                        "assignments": [
                          635
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 635,
                            "name": "_expected",
                            "nodeType": "VariableDeclaration",
                            "scope": 740,
                            "src": "5749:17:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 634,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5749:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 636,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5749:17:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 637,
                            "name": "_before",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "5780:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 643,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18790,
                                    "src": "5822:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Controller_$771",
                                      "typeString": "contract Controller"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Controller_$771",
                                      "typeString": "contract Controller"
                                    }
                                  ],
                                  "id": 642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5814:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5814:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 639,
                                    "name": "_want",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 622,
                                    "src": "5797:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 638,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16422,
                                  "src": "5790:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5790:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$16422",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16367,
                              "src": "5790:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5790:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5780:48:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 647,
                        "nodeType": "ExpressionStatement",
                        "src": "5780:48:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 652,
                              "name": "onesplit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "5869:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5879:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 649,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 564,
                                  "src": "5849:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 648,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16422,
                                "src": "5842:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5842:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16422",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16521,
                            "src": "5842:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5842:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "5842:39:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 660,
                              "name": "onesplit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "5922:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 661,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "5932:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 657,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 564,
                                  "src": "5902:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 656,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16422,
                                "src": "5895:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5895:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16422",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16521,
                            "src": "5895:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5895:45:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 663,
                        "nodeType": "ExpressionStatement",
                        "src": "5895:45:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 664,
                                "name": "_expected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "5955:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 665,
                                "name": "_distribution",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "5966:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "id": 666,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5954:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(uint256,uint256[] memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 671,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 564,
                                "src": "6025:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 672,
                                "name": "_want",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 622,
                                "src": "6033:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 673,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 615,
                                "src": "6040:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 674,
                                "name": "parts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 566,
                                "src": "6049:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6056:1:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 668,
                                    "name": "onesplit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "5997:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 667,
                                  "name": "OneSplitAudit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16766,
                                  "src": "5983:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_OneSplitAudit_$16766_$",
                                    "typeString": "type(contract OneSplitAudit)"
                                  }
                                },
                                "id": 669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5983:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OneSplitAudit_$16766",
                                  "typeString": "contract OneSplitAudit"
                                }
                              },
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getExpectedReturn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16765,
                              "src": "5983:41:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (address,address,uint256,uint256,uint256) view external returns (uint256,uint256[] memory)"
                              }
                            },
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5983:75:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "tuple(uint256,uint256[] memory)"
                            }
                          },
                          "src": "5954:104:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 678,
                        "nodeType": "ExpressionStatement",
                        "src": "5954:104:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 683,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "6101:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 684,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 622,
                              "src": "6109:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 685,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "6116:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 686,
                              "name": "_expected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "6125:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 687,
                              "name": "_distribution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "6136:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6151:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 680,
                                  "name": "onesplit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "6086:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 679,
                                "name": "OneSplitAudit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16766,
                                "src": "6072:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OneSplitAudit_$16766_$",
                                  "typeString": "type(contract OneSplitAudit)"
                                }
                              },
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6072:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OneSplitAudit_$16766",
                                "typeString": "contract OneSplitAudit"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16747,
                            "src": "6072:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256,uint256,uint256[] memory,uint256) payable external returns (uint256)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6072:81:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 690,
                        "nodeType": "ExpressionStatement",
                        "src": "6072:81:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 691,
                            "name": "_after",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "6167:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 697,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18790,
                                    "src": "6208:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Controller_$771",
                                      "typeString": "contract Controller"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Controller_$771",
                                      "typeString": "contract Controller"
                                    }
                                  ],
                                  "id": 696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6200:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6200:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 693,
                                    "name": "_want",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 622,
                                    "src": "6183:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 692,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16422,
                                  "src": "6176:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6176:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$16422",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16367,
                              "src": "6176:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6176:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6167:47:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 701,
                        "nodeType": "ExpressionStatement",
                        "src": "6167:47:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 702,
                            "name": "_after",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "6232:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 703,
                            "name": "_before",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "6241:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6232:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 739,
                        "nodeType": "IfStatement",
                        "src": "6228:260:9",
                        "trueBody": {
                          "id": 738,
                          "nodeType": "Block",
                          "src": "6250:238:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 705,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 615,
                                  "src": "6268:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 708,
                                      "name": "_before",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 583,
                                      "src": "6289:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 706,
                                      "name": "_after",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 601,
                                      "src": "6278:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 707,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16209,
                                    "src": "6278:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6278:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6268:29:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 711,
                              "nodeType": "ExpressionStatement",
                              "src": "6268:29:9"
                            },
                            {
                              "assignments": [
                                713
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 713,
                                  "name": "_reward",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 738,
                                  "src": "6315:15:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 712,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6315:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 721,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 719,
                                    "name": "max",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51,
                                    "src": "6356:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 716,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48,
                                        "src": "6345:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 714,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 615,
                                        "src": "6333:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 16270,
                                      "src": "6333:11:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 717,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6333:18:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16286,
                                  "src": "6333:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6333:27:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6315:45:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 723,
                                    "name": "_want",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 622,
                                    "src": "6383:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 726,
                                        "name": "_reward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 713,
                                        "src": "6402:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 724,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 615,
                                        "src": "6390:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 16209,
                                      "src": "6390:11:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6390:20:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 722,
                                  "name": "earn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 416,
                                  "src": "6378:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6378:33:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 729,
                              "nodeType": "ExpressionStatement",
                              "src": "6378:33:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 734,
                                    "name": "rewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "6456:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 735,
                                    "name": "_reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 713,
                                    "src": "6465:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 731,
                                        "name": "_want",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 622,
                                        "src": "6436:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 730,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16422,
                                      "src": "6429:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$16422_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6429:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$16422",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16455,
                                  "src": "6429:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16422_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16422_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6429:44:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 737,
                              "nodeType": "ExpressionStatement",
                              "src": "6429:44:9"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "yearn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "5109:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5109:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "5136:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5136:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 566,
                  "name": "parts",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "5160:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5160:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5099:80:9"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5187:0:9"
            },
            "scope": 771,
            "src": "5085:1419:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "6568:120:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 751,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18752,
                            "src": "6586:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6586:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 753,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "6600:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 755,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 754,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "6607:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6600:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6586:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6616:8:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18755,
                        18756
                      ],
                      "referencedDeclaration": 18756,
                      "src": "6578:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6578:47:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "6578:47:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 766,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "6673:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 761,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "6644:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 763,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 762,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 745,
                              "src": "6655:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6644:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 760,
                          "name": "Strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16797,
                          "src": "6635:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Strategy_$16797_$",
                            "typeString": "type(contract Strategy)"
                          }
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6635:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Strategy_$16797",
                          "typeString": "contract Strategy"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16786,
                      "src": "6635:37:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6635:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "6635:46:9"
                }
              ]
            },
            "documentation": null,
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "6528:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "6544:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6544:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6527:33:9"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6568:0:9"
            },
            "scope": 771,
            "src": "6510:178:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 772,
        "src": "434:6256:9"
      }
    ],
    "src": "33:6658:9"
  },
  "bytecode": "60806040526101f460085534801561001657600080fd5b506040516121453803806121458339818101604052602081101561003957600080fd5b5051600080546001600160a01b0319908116339081179092556001805482169092179091556002805482167350fda034c0ce7a8f7efdaebda7aa7ca21cc1267e179055600380546001600160a01b03909316929091169190911790556120a1806100a46000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063a1578b6a116100f9578063ccd0631811610097578063f3fef3a311610071578063f3fef3a314610592578063f712adbb146105be578063f7654176146105c6578063fa09e630146105ce576101c4565b8063ccd0631814610506578063e4f2494d1461053e578063ec38a8621461056c576101c4565b8063b02bf4b9116100d3578063b02bf4b91461045a578063c494448e14610486578063c6d758cb146104b4578063c7b9d530146104e0576101c4565b8063a1578b6a146103cc578063a622ee7c1461040e578063ab033ea914610434576101c4565b80636ac5db1911610166578063714ccf7b11610140578063714ccf7b1461034257806372cb5d97146103705780638da1df4d1461039e5780639ec5a894146103c4576101c4565b80636ac5db19146102cc5780636dcd64e5146102e657806370a082311461031c576101c4565b806339ebf823116101a257806339ebf82314610253578063590bbb60146102795780635aa6e675146102a7578063674e694f146102af576101c4565b806304209f48146101c9578063197baa6d146102015780631fe4a6861461022f575b600080fd5b6101ff600480360360608110156101df57600080fd5b506001600160a01b038135811691602081013590911690604001356105f4565b005b6101ff6004803603604081101561021757600080fd5b506001600160a01b0381358116916020013516610c3f565b610237610d15565b604080516001600160a01b039092168252519081900360200190f35b6102376004803603602081101561026957600080fd5b50356001600160a01b0316610d24565b6101ff6004803603604081101561028f57600080fd5b506001600160a01b0381358116916020013516610d3f565b610237610dbd565b6101ff600480360360208110156102c557600080fd5b5035610dcc565b6102d4610e1e565b60408051918252519081900360200190f35b6102d4600480360360608110156102fc57600080fd5b506001600160a01b03813581169160208101359091169060400135610e24565b6102d46004803603602081101561033257600080fd5b50356001600160a01b0316611064565b6101ff6004803603604081101561035857600080fd5b506001600160a01b03813581169160200135166110e8565b6101ff6004803603604081101561038657600080fd5b506001600160a01b03813581169160200135166111cd565b6101ff600480360360208110156103b457600080fd5b50356001600160a01b0316611352565b6102376113c1565b6103fa600480360360408110156103e257600080fd5b506001600160a01b03813581169160200135166113d0565b604080519115158252519081900360200190f35b6102376004803603602081101561042457600080fd5b50356001600160a01b03166113f0565b6101ff6004803603602081101561044a57600080fd5b50356001600160a01b031661140b565b6101ff6004803603604081101561047057600080fd5b506001600160a01b03813516906020013561147a565b6101ff6004803603604081101561049c57600080fd5b506001600160a01b0381358116916020013516611661565b6101ff600480360360408110156104ca57600080fd5b506001600160a01b0381351690602001356116e2565b6101ff600480360360208110156104f657600080fd5b50356001600160a01b0316611762565b6101ff6004803603606081101561051c57600080fd5b506001600160a01b0381358116916020810135821691604090910135166117d1565b6102376004803603604081101561055457600080fd5b506001600160a01b0381358116916020013516611870565b6101ff6004803603602081101561058257600080fd5b50356001600160a01b0316611896565b6101ff600480360360408110156105a857600080fd5b506001600160a01b038135169060200135611905565b6102376119b3565b6102d46119c2565b6101ff600480360360208110156105e457600080fd5b50356001600160a01b03166119c8565b6001546001600160a01b031633148061061757506000546001600160a01b031633145b610656576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b1580156106a057600080fd5b505afa1580156106b4573d6000803e3d6000fd5b505050506040513d60208110156106ca57600080fd5b5051604080516351cff8d960e01b81526001600160a01b0386811660048301529151929350908616916351cff8d99160248082019260009290919082900301818387803b15801561071a57600080fd5b505af115801561072e573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03871692506370a0823191602480820192602092909190829003018186803b15801561077c57600080fd5b505afa158015610790573d6000803e3d6000fd5b505050506040513d60208110156107a657600080fd5b5051905081811115610c385760006107c4828463ffffffff611aaa16565b90506000866001600160a01b0316631f1fcd516040518163ffffffff1660e01b815260040160206040518083038186803b15801561080157600080fd5b505afa158015610815573d6000803e3d6000fd5b505050506040513d602081101561082b57600080fd5b5051604080516370a0823160e01b815230600482015290519192506060916000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b15801561087d57600080fd5b505afa158015610891573d6000803e3d6000fd5b505050506040513d60208110156108a757600080fd5b50516002549096506108cd906001600160a01b038a81169116600063ffffffff611af516565b6002546108ed906001600160a01b038a811691168663ffffffff611af516565b6002546040805163085e2c5b60e01b81526001600160a01b038b81166004830152868116602483015260448201889052606482018b9052600060848301819052925193169263085e2c5b9260a480840193919291829003018186803b15801561095557600080fd5b505afa158015610969573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561099257600080fd5b8151602083018051604051929492938301929190846401000000008211156109b957600080fd5b9083019060208201858111156109ce57600080fd5b82518660208202830111640100000000821117156109eb57600080fd5b82525081516020918201928201910280838360005b83811015610a18578181015183820152602001610a00565b505050509050016040525050508093508192505050600260009054906101000a90046001600160a01b03166001600160a01b031663e2a7515e898587858760006040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b0316815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610ae9578181015183820152602001610ad1565b50505050905001975050505050505050602060405180830381600087803b158015610b1357600080fd5b505af1158015610b27573d6000803e3d6000fd5b505050506040513d6020811015610b3d57600080fd5b5050604080516370a0823160e01b815230600482015290516001600160a01b038516916370a08231916024808301926020929190829003018186803b158015610b8557600080fd5b505afa158015610b99573d6000803e3d6000fd5b505050506040513d6020811015610baf57600080fd5b5051945085851115610c3357610bcb858763ffffffff611aaa16565b93506000610bf6612710610bea60085488611c0890919063ffffffff16565b9063ffffffff611c6116565b9050610c1184610c0c878463ffffffff611aaa16565b61147a565b600354610c31906001600160a01b0386811691168363ffffffff611ca316565b505b505050505b5050505050565b6001546001600160a01b0316331480610c6257506000546001600160a01b031633145b610ca1576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b816001600160a01b03166351cff8d9826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b158015610cf957600080fd5b505af1158015610d0d573d6000803e3d6000fd5b505050505050565b6001546001600160a01b031681565b6005602052600090815260409020546001600160a01b031681565b6000546001600160a01b03163314610d8c576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6001600160a01b0391821660009081526007602090815260408083209390941682529190915220805460ff19169055565b6000546001600160a01b031681565b6000546001600160a01b03163314610e19576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600855565b61271081565b600080836001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610e7d57600080fd5b505afa158015610e91573d6000803e3d6000fd5b505050506040513d6020811015610ea757600080fd5b505160408051631f1fcd5160e01b815290519192506000916001600160a01b03881691631f1fcd51916004808301926020929190829003018186803b158015610eef57600080fd5b505afa158015610f03573d6000803e3d6000fd5b505050506040513d6020811015610f1957600080fd5b50516002546040805163085e2c5b60e01b81526001600160a01b0389811660048301528085166024830152604482018790526064820189905260006084830181905292519495509092169263085e2c5b9260a4808201939291829003018186803b158015610f8657600080fd5b505afa158015610f9a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040908152811015610fc357600080fd5b815160208301805160405192949293830192919084640100000000821115610fea57600080fd5b908301906020820185811115610fff57600080fd5b825186602082028301116401000000008211171561101c57600080fd5b82525081516020918201928201910280838360005b83811015611049578181015183820152602001611031565b50505050905001604052505050508093505050509392505050565b6001600160a01b03808216600090815260056020908152604080832054815163722713f760e01b815291519394169263722713f792600480840193919291829003018186803b1580156110b657600080fd5b505afa1580156110ca573d6000803e3d6000fd5b505050506040513d60208110156110e057600080fd5b505192915050565b6001546001600160a01b031633148061110b57506000546001600160a01b031633145b61114a576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03828116600090815260046020526040902054161561119f576040805162461bcd60e51b81526020600482015260056024820152641d985d5b1d60da1b604482015290519081900360640190fd5b6001600160a01b03918216600090815260046020526040902080546001600160a01b03191691909216179055565b6001546001600160a01b03163314806111f057506000546001600160a01b031633145b61122f576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b0380831660009081526007602090815260408083209385168352929052205460ff16151560011461129a576040805162461bcd60e51b815260206004820152600960248201526808585c1c1c9bdd995960ba1b604482015290519081900360640190fd5b6001600160a01b0380831660009081526005602052604090205416801561132357806001600160a01b031663853828b66040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112f657600080fd5b505af115801561130a573d6000803e3d6000fd5b505050506040513d602081101561132057600080fd5b50505b506001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b0316331461139f576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b600760209081526000928352604080842090915290825290205460ff1681565b6004602052600090815260409020546001600160a01b031681565b6000546001600160a01b03163314611458576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038083166000908152600560209081526040808320548151631f1fcd5160e01b815291519416938492631f1fcd519260048082019391829003018186803b1580156114cb57600080fd5b505afa1580156114df573d6000803e3d6000fd5b505050506040513d60208110156114f557600080fd5b505190506001600160a01b03808216908516146115ee576001600160a01b03808516600081815260066020908152604080832086861684529091529020549091169061154890828663ffffffff611ca316565b806001600160a01b031663def2489b846040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050602060405180830381600087803b1580156115a057600080fd5b505af11580156115b4573d6000803e3d6000fd5b505050506040513d60208110156115ca57600080fd5b505193506115e86001600160a01b038316848663ffffffff611ca316565b50611608565b6116086001600160a01b038516838563ffffffff611ca316565b816001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561164357600080fd5b505af1158015611657573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146116ae576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6001600160a01b0391821660009081526007602090815260408083209390941682529190915220805460ff19166001179055565b6001546001600160a01b031633148061170557506000546001600160a01b031633145b611744576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b61175e6001600160a01b038316338363ffffffff611ca316565b5050565b6000546001600160a01b031633146117af576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314806117f457506000546001600160a01b031633145b611833576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03928316600090815260066020908152604080832094861683529390529190912080546001600160a01b03191691909216179055565b60066020908152600092835260408084209091529082529020546001600160a01b031681565b6000546001600160a01b031633146118e3576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0382811660009081526004602052604090205416331461195c576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6001600160a01b03808316600090815260056020526040808220548151632e1a7d4d60e01b8152600481018690529151931692632e1a7d4d9260248084019391929182900301818387803b158015610cf957600080fd5b6002546001600160a01b031681565b60085481565b6001546001600160a01b03163314806119eb57506000546001600160a01b031633145b611a2a576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03808216600090815260056020908152604080832054815163429c145b60e11b8152915194169363853828b693600480840194938390030190829087803b158015611a7b57600080fd5b505af1158015611a8f573d6000803e3d6000fd5b505050506040513d6020811015611aa557600080fd5b505050565b6000611aec83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611cf5565b90505b92915050565b801580611b7b575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611b4d57600080fd5b505afa158015611b61573d6000803e3d6000fd5b505050506040513d6020811015611b7757600080fd5b5051155b611bb65760405162461bcd60e51b81526004018080602001828103825260368152602001806120376036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611aa5908490611d8c565b600082611c1757506000611aef565b82820282848281611c2457fe5b0414611aec5760405162461bcd60e51b8152600401808060200182810382526021815260200180611fec6021913960400191505060405180910390fd5b6000611aec83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611f4a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611aa5908490611d8c565b60008184841115611d845760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d49578181015183820152602001611d31565b50505050905090810190601f168015611d765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b611d9e826001600160a01b0316611faf565b611def576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611e2d5780518252601f199092019160209182019101611e0e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611e8f576040519150601f19603f3d011682016040523d82523d6000602084013e611e94565b606091505b509150915081611eeb576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115611f4457808060200190516020811015611f0757600080fd5b5051611f445760405162461bcd60e51b815260040180806020018281038252602a81526020018061200d602a913960400191505060405180910390fd5b50505050565b60008183611f995760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611d49578181015183820152602001611d31565b506000838581611fa557fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611fe357508115155b94935050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a72315820ceed599bc25315a029b0aeb5b84ec12c5b388f9bed1d0feb115aa167c185206164736f6c63430005110032",
  "bytecodeSha1": "cc876920be585f747891b0fd8092642a9e1e0c6b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "Controller",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.div": {
          "97": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "94": [
            2458,
            2464,
            false
          ],
          "95": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "96": [
            1845,
            1851,
            true
          ]
        }
      },
      "6": {
        "SafeERC20.callOptionalReturn": {
          "90": [
            3261,
            3288,
            true
          ],
          "91": [
            3479,
            3486,
            true
          ],
          "92": [
            3538,
            3559,
            false
          ],
          "93": [
            3667,
            3697,
            true
          ]
        }
      },
      "7": {},
      "9": {
        "Controller.approveStrategy": {
          "80": [
            2283,
            2307,
            true
          ]
        },
        "Controller.earn": {
          "79": [
            3432,
            3447,
            false
          ]
        },
        "Controller.inCaseStrategyTokenGetStuck": {
          "66": [
            4488,
            4512,
            true
          ],
          "67": [
            4516,
            4540,
            true
          ]
        },
        "Controller.inCaseTokensGetStuck": {
          "81": [
            4252,
            4276,
            true
          ],
          "82": [
            4280,
            4304,
            true
          ]
        },
        "Controller.revokeStrategy": {
          "68": [
            2474,
            2498,
            true
          ]
        },
        "Controller.setConverter": {
          "84": [
            2712,
            2736,
            true
          ],
          "85": [
            2740,
            2764,
            true
          ]
        },
        "Controller.setGovernance": {
          "78": [
            1866,
            1890,
            true
          ]
        },
        "Controller.setOneSplit": {
          "77": [
            1714,
            1738,
            true
          ]
        },
        "Controller.setRewards": {
          "86": [
            1276,
            1300,
            true
          ]
        },
        "Controller.setSplit": {
          "69": [
            1572,
            1596,
            true
          ]
        },
        "Controller.setStrategist": {
          "83": [
            1426,
            1450,
            true
          ]
        },
        "Controller.setStrategy": {
          "73": [
            2924,
            2948,
            true
          ],
          "74": [
            2952,
            2976,
            true
          ],
          "75": [
            3010,
            3055,
            true
          ],
          "76": [
            3131,
            3153,
            false
          ]
        },
        "Controller.setVault": {
          "70": [
            2028,
            2052,
            true
          ],
          "71": [
            2056,
            2080,
            true
          ],
          "72": [
            2114,
            2142,
            true
          ]
        },
        "Controller.withdraw": {
          "87": [
            6586,
            6614,
            true
          ]
        },
        "Controller.withdrawAll": {
          "88": [
            4031,
            4055,
            true
          ],
          "89": [
            4059,
            4083,
            true
          ]
        },
        "Controller.yearn": {
          "62": [
            5205,
            5229,
            true
          ],
          "63": [
            5233,
            5257,
            true
          ],
          "64": [
            5566,
            5582,
            false
          ],
          "65": [
            6232,
            6248,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "SafeMath.div": {
          "54": [
            3150,
            3196
          ],
          "60": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "52": [
            2480,
            2488
          ],
          "53": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "49": [
            1351,
            1401
          ],
          "56": [
            1837,
            1866
          ]
        }
      },
      "6": {
        "SafeERC20.callOptionalReturn": {
          "57": [
            3253,
            3324
          ],
          "58": [
            3471,
            3523
          ],
          "59": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeApprove": {
          "50": [
            1406,
            1556
          ],
          "51": [
            1566,
            1655
          ]
        },
        "SafeERC20.safeTransfer": {
          "55": [
            744,
            829
          ]
        }
      },
      "7": {
        "Address.isContract": {
          "61": [
            1238,
            1289
          ]
        }
      },
      "9": {
        "Controller.approveStrategy": {
          "35": [
            2275,
            2323
          ],
          "36": [
            2333,
            2377
          ]
        },
        "Controller.balanceOf": {
          "18": [
            3909,
            3956
          ]
        },
        "Controller.earn": {
          "30": [
            3522,
            3569
          ],
          "31": [
            3583,
            3632
          ],
          "32": [
            3646,
            3692
          ],
          "33": [
            3723,
            3770
          ],
          "34": [
            3790,
            3819
          ]
        },
        "Controller.getExpectedReturn": {
          "17": [
            4887,
            4978
          ]
        },
        "Controller.inCaseStrategyTokenGetStuck": {
          "11": [
            4480,
            4556
          ],
          "12": [
            4566,
            4602
          ]
        },
        "Controller.inCaseTokensGetStuck": {
          "37": [
            4244,
            4320
          ],
          "38": [
            4330,
            4378
          ]
        },
        "Controller.revokeStrategy": {
          "13": [
            2466,
            2514
          ],
          "14": [
            2524,
            2569
          ]
        },
        "Controller.setConverter": {
          "41": [
            2704,
            2780
          ],
          "42": [
            2790,
            2830
          ]
        },
        "Controller.setGovernance": {
          "28": [
            1858,
            1906
          ],
          "29": [
            1916,
            1940
          ]
        },
        "Controller.setOneSplit": {
          "26": [
            1706,
            1754
          ],
          "27": [
            1764,
            1784
          ]
        },
        "Controller.setRewards": {
          "43": [
            1268,
            1316
          ],
          "44": [
            1326,
            1344
          ]
        },
        "Controller.setSplit": {
          "15": [
            1564,
            1612
          ],
          "16": [
            1622,
            1636
          ]
        },
        "Controller.setStrategist": {
          "39": [
            1418,
            1466
          ],
          "40": [
            1476,
            1500
          ]
        },
        "Controller.setStrategy": {
          "22": [
            2916,
            2992
          ],
          "23": [
            3002,
            3069
          ],
          "24": [
            3169,
            3201
          ],
          "25": [
            3221,
            3251
          ]
        },
        "Controller.setVault": {
          "19": [
            2020,
            2096
          ],
          "20": [
            2106,
            2152
          ],
          "21": [
            2162,
            2185
          ]
        },
        "Controller.withdraw": {
          "45": [
            6578,
            6625
          ],
          "46": [
            6635,
            6681
          ]
        },
        "Controller.withdrawAll": {
          "47": [
            4023,
            4099
          ],
          "48": [
            4109,
            4151
          ]
        },
        "Controller.yearn": {
          "0": [
            5197,
            5273
          ],
          "1": [
            5450,
            5486
          ],
          "2": [
            5780,
            5828
          ],
          "3": [
            5842,
            5881
          ],
          "4": [
            5895,
            5940
          ],
          "5": [
            5954,
            6058
          ],
          "6": [
            6072,
            6153
          ],
          "7": [
            6167,
            6214
          ],
          "8": [
            6268,
            6297
          ],
          "9": [
            6378,
            6411
          ],
          "10": [
            6429,
            6473
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101c45760003560e01c8063a1578b6a116100f9578063ccd0631811610097578063f3fef3a311610071578063f3fef3a314610592578063f712adbb146105be578063f7654176146105c6578063fa09e630146105ce576101c4565b8063ccd0631814610506578063e4f2494d1461053e578063ec38a8621461056c576101c4565b8063b02bf4b9116100d3578063b02bf4b91461045a578063c494448e14610486578063c6d758cb146104b4578063c7b9d530146104e0576101c4565b8063a1578b6a146103cc578063a622ee7c1461040e578063ab033ea914610434576101c4565b80636ac5db1911610166578063714ccf7b11610140578063714ccf7b1461034257806372cb5d97146103705780638da1df4d1461039e5780639ec5a894146103c4576101c4565b80636ac5db19146102cc5780636dcd64e5146102e657806370a082311461031c576101c4565b806339ebf823116101a257806339ebf82314610253578063590bbb60146102795780635aa6e675146102a7578063674e694f146102af576101c4565b806304209f48146101c9578063197baa6d146102015780631fe4a6861461022f575b600080fd5b6101ff600480360360608110156101df57600080fd5b506001600160a01b038135811691602081013590911690604001356105f4565b005b6101ff6004803603604081101561021757600080fd5b506001600160a01b0381358116916020013516610c3f565b610237610d15565b604080516001600160a01b039092168252519081900360200190f35b6102376004803603602081101561026957600080fd5b50356001600160a01b0316610d24565b6101ff6004803603604081101561028f57600080fd5b506001600160a01b0381358116916020013516610d3f565b610237610dbd565b6101ff600480360360208110156102c557600080fd5b5035610dcc565b6102d4610e1e565b60408051918252519081900360200190f35b6102d4600480360360608110156102fc57600080fd5b506001600160a01b03813581169160208101359091169060400135610e24565b6102d46004803603602081101561033257600080fd5b50356001600160a01b0316611064565b6101ff6004803603604081101561035857600080fd5b506001600160a01b03813581169160200135166110e8565b6101ff6004803603604081101561038657600080fd5b506001600160a01b03813581169160200135166111cd565b6101ff600480360360208110156103b457600080fd5b50356001600160a01b0316611352565b6102376113c1565b6103fa600480360360408110156103e257600080fd5b506001600160a01b03813581169160200135166113d0565b604080519115158252519081900360200190f35b6102376004803603602081101561042457600080fd5b50356001600160a01b03166113f0565b6101ff6004803603602081101561044a57600080fd5b50356001600160a01b031661140b565b6101ff6004803603604081101561047057600080fd5b506001600160a01b03813516906020013561147a565b6101ff6004803603604081101561049c57600080fd5b506001600160a01b0381358116916020013516611661565b6101ff600480360360408110156104ca57600080fd5b506001600160a01b0381351690602001356116e2565b6101ff600480360360208110156104f657600080fd5b50356001600160a01b0316611762565b6101ff6004803603606081101561051c57600080fd5b506001600160a01b0381358116916020810135821691604090910135166117d1565b6102376004803603604081101561055457600080fd5b506001600160a01b0381358116916020013516611870565b6101ff6004803603602081101561058257600080fd5b50356001600160a01b0316611896565b6101ff600480360360408110156105a857600080fd5b506001600160a01b038135169060200135611905565b6102376119b3565b6102d46119c2565b6101ff600480360360208110156105e457600080fd5b50356001600160a01b03166119c8565b6001546001600160a01b031633148061061757506000546001600160a01b031633145b610656576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b1580156106a057600080fd5b505afa1580156106b4573d6000803e3d6000fd5b505050506040513d60208110156106ca57600080fd5b5051604080516351cff8d960e01b81526001600160a01b0386811660048301529151929350908616916351cff8d99160248082019260009290919082900301818387803b15801561071a57600080fd5b505af115801561072e573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03871692506370a0823191602480820192602092909190829003018186803b15801561077c57600080fd5b505afa158015610790573d6000803e3d6000fd5b505050506040513d60208110156107a657600080fd5b5051905081811115610c385760006107c4828463ffffffff611aaa16565b90506000866001600160a01b0316631f1fcd516040518163ffffffff1660e01b815260040160206040518083038186803b15801561080157600080fd5b505afa158015610815573d6000803e3d6000fd5b505050506040513d602081101561082b57600080fd5b5051604080516370a0823160e01b815230600482015290519192506060916000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b15801561087d57600080fd5b505afa158015610891573d6000803e3d6000fd5b505050506040513d60208110156108a757600080fd5b50516002549096506108cd906001600160a01b038a81169116600063ffffffff611af516565b6002546108ed906001600160a01b038a811691168663ffffffff611af516565b6002546040805163085e2c5b60e01b81526001600160a01b038b81166004830152868116602483015260448201889052606482018b9052600060848301819052925193169263085e2c5b9260a480840193919291829003018186803b15801561095557600080fd5b505afa158015610969573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561099257600080fd5b8151602083018051604051929492938301929190846401000000008211156109b957600080fd5b9083019060208201858111156109ce57600080fd5b82518660208202830111640100000000821117156109eb57600080fd5b82525081516020918201928201910280838360005b83811015610a18578181015183820152602001610a00565b505050509050016040525050508093508192505050600260009054906101000a90046001600160a01b03166001600160a01b031663e2a7515e898587858760006040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b0316815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610ae9578181015183820152602001610ad1565b50505050905001975050505050505050602060405180830381600087803b158015610b1357600080fd5b505af1158015610b27573d6000803e3d6000fd5b505050506040513d6020811015610b3d57600080fd5b5050604080516370a0823160e01b815230600482015290516001600160a01b038516916370a08231916024808301926020929190829003018186803b158015610b8557600080fd5b505afa158015610b99573d6000803e3d6000fd5b505050506040513d6020811015610baf57600080fd5b5051945085851115610c3357610bcb858763ffffffff611aaa16565b93506000610bf6612710610bea60085488611c0890919063ffffffff16565b9063ffffffff611c6116565b9050610c1184610c0c878463ffffffff611aaa16565b61147a565b600354610c31906001600160a01b0386811691168363ffffffff611ca316565b505b505050505b5050505050565b6001546001600160a01b0316331480610c6257506000546001600160a01b031633145b610ca1576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b816001600160a01b03166351cff8d9826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b158015610cf957600080fd5b505af1158015610d0d573d6000803e3d6000fd5b505050505050565b6001546001600160a01b031681565b6005602052600090815260409020546001600160a01b031681565b6000546001600160a01b03163314610d8c576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6001600160a01b0391821660009081526007602090815260408083209390941682529190915220805460ff19169055565b6000546001600160a01b031681565b6000546001600160a01b03163314610e19576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600855565b61271081565b600080836001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610e7d57600080fd5b505afa158015610e91573d6000803e3d6000fd5b505050506040513d6020811015610ea757600080fd5b505160408051631f1fcd5160e01b815290519192506000916001600160a01b03881691631f1fcd51916004808301926020929190829003018186803b158015610eef57600080fd5b505afa158015610f03573d6000803e3d6000fd5b505050506040513d6020811015610f1957600080fd5b50516002546040805163085e2c5b60e01b81526001600160a01b0389811660048301528085166024830152604482018790526064820189905260006084830181905292519495509092169263085e2c5b9260a4808201939291829003018186803b158015610f8657600080fd5b505afa158015610f9a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040908152811015610fc357600080fd5b815160208301805160405192949293830192919084640100000000821115610fea57600080fd5b908301906020820185811115610fff57600080fd5b825186602082028301116401000000008211171561101c57600080fd5b82525081516020918201928201910280838360005b83811015611049578181015183820152602001611031565b50505050905001604052505050508093505050509392505050565b6001600160a01b03808216600090815260056020908152604080832054815163722713f760e01b815291519394169263722713f792600480840193919291829003018186803b1580156110b657600080fd5b505afa1580156110ca573d6000803e3d6000fd5b505050506040513d60208110156110e057600080fd5b505192915050565b6001546001600160a01b031633148061110b57506000546001600160a01b031633145b61114a576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03828116600090815260046020526040902054161561119f576040805162461bcd60e51b81526020600482015260056024820152641d985d5b1d60da1b604482015290519081900360640190fd5b6001600160a01b03918216600090815260046020526040902080546001600160a01b03191691909216179055565b6001546001600160a01b03163314806111f057506000546001600160a01b031633145b61122f576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b0380831660009081526007602090815260408083209385168352929052205460ff16151560011461129a576040805162461bcd60e51b815260206004820152600960248201526808585c1c1c9bdd995960ba1b604482015290519081900360640190fd5b6001600160a01b0380831660009081526005602052604090205416801561132357806001600160a01b031663853828b66040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112f657600080fd5b505af115801561130a573d6000803e3d6000fd5b505050506040513d602081101561132057600080fd5b50505b506001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b0316331461139f576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b600760209081526000928352604080842090915290825290205460ff1681565b6004602052600090815260409020546001600160a01b031681565b6000546001600160a01b03163314611458576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038083166000908152600560209081526040808320548151631f1fcd5160e01b815291519416938492631f1fcd519260048082019391829003018186803b1580156114cb57600080fd5b505afa1580156114df573d6000803e3d6000fd5b505050506040513d60208110156114f557600080fd5b505190506001600160a01b03808216908516146115ee576001600160a01b03808516600081815260066020908152604080832086861684529091529020549091169061154890828663ffffffff611ca316565b806001600160a01b031663def2489b846040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050602060405180830381600087803b1580156115a057600080fd5b505af11580156115b4573d6000803e3d6000fd5b505050506040513d60208110156115ca57600080fd5b505193506115e86001600160a01b038316848663ffffffff611ca316565b50611608565b6116086001600160a01b038516838563ffffffff611ca316565b816001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561164357600080fd5b505af1158015611657573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146116ae576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b6001600160a01b0391821660009081526007602090815260408083209390941682529190915220805460ff19166001179055565b6001546001600160a01b031633148061170557506000546001600160a01b031633145b611744576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b61175e6001600160a01b038316338363ffffffff611ca316565b5050565b6000546001600160a01b031633146117af576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314806117f457506000546001600160a01b031633145b611833576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03928316600090815260066020908152604080832094861683529390529190912080546001600160a01b03191691909216179055565b60066020908152600092835260408084209091529082529020546001600160a01b031681565b6000546001600160a01b031633146118e3576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0382811660009081526004602052604090205416331461195c576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b6001600160a01b03808316600090815260056020526040808220548151632e1a7d4d60e01b8152600481018690529151931692632e1a7d4d9260248084019391929182900301818387803b158015610cf957600080fd5b6002546001600160a01b031681565b60085481565b6001546001600160a01b03163314806119eb57506000546001600160a01b031633145b611a2a576040805162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b604482015290519081900360640190fd5b6001600160a01b03808216600090815260056020908152604080832054815163429c145b60e11b8152915194169363853828b693600480840194938390030190829087803b158015611a7b57600080fd5b505af1158015611a8f573d6000803e3d6000fd5b505050506040513d6020811015611aa557600080fd5b505050565b6000611aec83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611cf5565b90505b92915050565b801580611b7b575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611b4d57600080fd5b505afa158015611b61573d6000803e3d6000fd5b505050506040513d6020811015611b7757600080fd5b5051155b611bb65760405162461bcd60e51b81526004018080602001828103825260368152602001806120376036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611aa5908490611d8c565b600082611c1757506000611aef565b82820282848281611c2457fe5b0414611aec5760405162461bcd60e51b8152600401808060200182810382526021815260200180611fec6021913960400191505060405180910390fd5b6000611aec83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611f4a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611aa5908490611d8c565b60008184841115611d845760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d49578181015183820152602001611d31565b50505050905090810190601f168015611d765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b611d9e826001600160a01b0316611faf565b611def576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611e2d5780518252601f199092019160209182019101611e0e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611e8f576040519150601f19603f3d011682016040523d82523d6000602084013e611e94565b606091505b509150915081611eeb576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115611f4457808060200190516020811015611f0757600080fd5b5051611f445760405162461bcd60e51b815260040180806020018281038252602a81526020018061200d602a913960400191505060405180910390fd5b50505050565b60008183611f995760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611d49578181015183820152602001611d31565b506000838581611fa557fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611fe357508115155b94935050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a72315820ceed599bc25315a029b0aeb5b84ec12c5b388f9bed1d0feb115aa167c185206164736f6c63430005110032",
  "deployedSourceMap": "434:6256:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;434:6256:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5085:1419;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5085:1419:9;;;;;;;;;;;;;;;;;:::i;:::-;;4391:218;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4391:218:9;;;;;;;;;;:::i;587:25::-;;;:::i;:::-;;;;-1:-1:-1;;;;;587:25:9;;;;;;;;;;;;;;723:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;723:45:9;-1:-1:-1;;;;;723:45:9;;:::i;2390:186::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2390:186:9;;;;;;;;;;:::i;556:25::-;;;:::i;1513:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1513:130:9;;:::i;955:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;4615:370;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4615:370:9;;;;;;;;;;;;;;;;;:::i;3832:131::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3832:131:9;-1:-1:-1;;;;;3832:131:9;;:::i;1953:239::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1953:239:9;;;;;;;;;;:::i;2843:415::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2843:415:9;;;;;;;;;;:::i;1649:142::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1649:142:9;-1:-1:-1;;;;;1649:142:9;;:::i;648:22::-;;;:::i;846:70::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;846:70:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;676:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;676:41:9;-1:-1:-1;;;;;676:41:9;;:::i;1797:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1797:150:9;-1:-1:-1;;;;;1797:150:9;;:::i;3264:562::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3264:562:9;;;;;;;;:::i;2198:186::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2198:186:9;;;;;;;;;;:::i;4164:221::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4164:221:9;;;;;;;;:::i;1357:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1357:150:9;-1:-1:-1;;;;;1357:150:9;;:::i;2582:255::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2582:255:9;;;;;;;;;;;;;;;;;;;:::i;774:65::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;774:65:9;;;;;;;;;;:::i;1213:138::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1213:138:9;-1:-1:-1;;;;;1213:138:9;;:::i;6510:178::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6510:178:9;;;;;;;;:::i;619:23::-;;;:::i;923:26::-;;;:::i;3969:189::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3969:189:9;-1:-1:-1;;;;;3969:189:9;;:::i;5085:1419::-;5219:10;;-1:-1:-1;;;;;5219:10:9;5205;:24;;:52;;-1:-1:-1;5247:10:9;;-1:-1:-1;;;;;5247:10:9;5233;:24;5205:52;5197:76;;;;;-1:-1:-1;;;5197:76:9;;;;;;;;;;;;-1:-1:-1;;;5197:76:9;;;;;;;;;;;;;;;5401:39;;;-1:-1:-1;;;5401:39:9;;5434:4;5401:39;;;;;;5383:15;;-1:-1:-1;;;;;5401:24:9;;;;;:39;;;;;;;;;;;;;;;:24;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5401:39:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5401:39:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5401:39:9;5450:36;;;-1:-1:-1;;;5450:36:9;;-1:-1:-1;;;;;5450:36:9;;;;;;;;;5401:39;;-1:-1:-1;5450:28:9;;;;;;:36;;;;;-1:-1:-1;;5450:36:9;;;;;;;;-1:-1:-1;5450:28:9;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;5450:36:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5513:39:9;;;-1:-1:-1;;;5513:39:9;;5546:4;5513:39;;;;;;5496:14;;-1:-1:-1;;;;;;5513:24:9;;;-1:-1:-1;5513:24:9;;:39;;;;;;;;;;;;;;;:24;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5513:39:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5513:39:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5513:39:9;;-1:-1:-1;5566:16:9;;;5562:936;;;5598:15;5616:19;:6;5627:7;5616:19;:10;:19;:::i;:::-;5598:37;;5649:13;5674:9;-1:-1:-1;;;;;5665:24:9;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5665:26:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5665:26:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5665:26:9;5790:38;;;-1:-1:-1;;;5790:38:9;;5822:4;5790:38;;;;;;5665:26;;-1:-1:-1;5705:30:9;;5749:17;;-1:-1:-1;;;;;5790:23:9;;;;;:38;;;;;5665:26;;5790:38;;;;;;;;:23;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;5790:38:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5790:38:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5790:38:9;5869:8;;5790:38;;-1:-1:-1;5842:39:9;;-1:-1:-1;;;;;5842:26:9;;;;5869:8;;5842:39;:26;:39;:::i;:::-;5922:8;;5895:45;;-1:-1:-1;;;;;5895:26:9;;;;5922:8;5932:7;5895:45;:26;:45;:::i;:::-;5997:8;;5983:75;;;-1:-1:-1;;;5983:75:9;;-1:-1:-1;;;;;5983:75:9;;;;;;;;;;;;;;;;;;;;;;;;;;5997:8;5983:75;;;;;;;;5997:8;;;5983:41;;:75;;;;;5997:8;;5983:75;;;;;;5997:8;5983:75;;;5:2:-1;;;;30:1;27;20:12;5:2;5983:75:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5983:75:9;;;;;;39:16:-1;36:1;17:17;2:54;101:4;5983:75:9;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;;;5:11;;2:2;;;29:1;26;19:12;2:2;5983:75:9;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;5983:75:9;;421:4:-1;412:14;;;;5983:75:9;;;;;412:14:-1;5983:75:9;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5983:75:9;;;;;;;;;;;5954:104;;;;;;;;6086:8;;;;;;;;;-1:-1:-1;;;;;6086:8:9;-1:-1:-1;;;;;6072:28:9;;6101:6;6109:5;6116:7;6125:9;6136:13;6151:1;6072:81;;;;;;;;;;;;;-1:-1:-1;;;;;6072:81:9;-1:-1:-1;;;;;6072:81:9;;;;;;-1:-1:-1;;;;;6072:81:9;-1:-1:-1;;;;;6072:81:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6072:81:9;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6072:81:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6072:81:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;6176:38:9;;;-1:-1:-1;;;6176:38:9;;6208:4;6176:38;;;;;;-1:-1:-1;;;;;6176:23:9;;;;;:38;;;;;6072:81;;6176:38;;;;;;;:23;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;6176:38:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6176:38:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6176:38:9;;-1:-1:-1;6232:16:9;;;6228:260;;;6278:19;:6;6289:7;6278:19;:10;:19;:::i;:::-;6268:29;;6315:15;6333:27;985:5;6333:18;6345:5;;6333:7;:11;;:18;;;;:::i;:::-;:22;:27;:22;:27;:::i;:::-;6315:45;-1:-1:-1;6378:33:9;6383:5;6390:20;:7;6315:45;6390:20;:11;:20;:::i;:::-;6378:4;:33::i;:::-;6456:7;;6429:44;;-1:-1:-1;;;;;6429:26:9;;;;6456:7;6465;6429:44;:26;:44;:::i;:::-;6228:260;;5562:936;;;;;5085:1419;;;;;:::o;4391:218::-;4502:10;;-1:-1:-1;;;;;4502:10:9;4488;:24;;:52;;-1:-1:-1;4530:10:9;;-1:-1:-1;;;;;4530:10:9;4516;:24;4488:52;4480:76;;;;;-1:-1:-1;;;4480:76:9;;;;;;;;;;;;-1:-1:-1;;;4480:76:9;;;;;;;;;;;;;;;4575:9;-1:-1:-1;;;;;4566:28:9;;4595:6;4566:36;;;;;;;;;;;;;-1:-1:-1;;;;;4566:36:9;-1:-1:-1;;;;;4566:36:9;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4566:36:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4566:36:9;;;;4391:218;;:::o;587:25::-;;;-1:-1:-1;;;;;587:25:9;;:::o;723:45::-;;;;;;;;;;;;-1:-1:-1;;;;;723:45:9;;:::o;2390:186::-;2488:10;;-1:-1:-1;;;;;2488:10:9;2474;:24;2466:48;;;;;-1:-1:-1;;;2466:48:9;;;;;;;;;;;;-1:-1:-1;;;2466:48:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;2524:26:9;;;2564:5;2524:26;;;:18;:26;;;;;;;;:37;;;;;;;;;;;:45;;-1:-1:-1;;2524:45:9;;;2390:186::o;556:25::-;;;-1:-1:-1;;;;;556:25:9;;:::o;1513:130::-;1586:10;;-1:-1:-1;;;;;1586:10:9;1572;:24;1564:48;;;;;-1:-1:-1;;;1564:48:9;;;;;;;;;;;;-1:-1:-1;;;1564:48:9;;;;;;;;;;;;;;;1622:5;:14;1513:130::o;955:35::-;985:5;955:35;:::o;4615:370::-;4743:16;4771;4797:6;-1:-1:-1;;;;;4790:24:9;;4815:9;4790:35;;;;;;;;;;;;;-1:-1:-1;;;;;4790:35:9;-1:-1:-1;;;;;4790:35:9;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4790:35:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4790:35:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4790:35:9;4851:26;;;-1:-1:-1;;;4851:26:9;;;;4790:35;;-1:-1:-1;4835:13:9;;-1:-1:-1;;;;;4851:24:9;;;;;:26;;;;;4790:35;;4851:26;;;;;;;:24;:26;;;5:2:-1;;;;30:1;27;20:12;5:2;4851:26:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4851:26:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4851:26:9;4916:8;;4902:76;;;-1:-1:-1;;;4902:76:9;;-1:-1:-1;;;;;4902:76:9;;;;;;;;;;;;;;;;;;;;;;;;;;4916:8;4902:76;;;;;;;;4851:26;;-1:-1:-1;4916:8:9;;;;4902:41;;:76;;;;;4916:8;4902:76;;;;;;4916:8;4902:76;;;5:2:-1;;;;30:1;27;20:12;5:2;4902:76:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4902:76:9;;;;;;39:16:-1;36:1;17:17;2:54;101:4;4902:76:9;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;;;5:11;;2:2;;;29:1;26;19:12;2:2;4902:76:9;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;4902:76:9;;421:4:-1;412:14;;;;4902:76:9;;;;;412:14:-1;4902:76:9;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4902:76:9;;;;;;;;;;;4887:91;;;;;4615:370;;;;;;;:::o;3832:131::-;-1:-1:-1;;;;;3925:18:9;;;3890:7;3925:18;;;:10;:18;;;;;;;;;3916:40;;-1:-1:-1;;;3916:40:9;;;;3890:7;;3925:18;;3916:38;;:40;;;;;3925:18;;3916:40;;;;;;3925:18;3916:40;;;5:2:-1;;;;30:1;27;20:12;5:2;3916:40:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3916:40:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3916:40:9;;3832:131;-1:-1:-1;;3832:131:9:o;1953:239::-;2042:10;;-1:-1:-1;;;;;2042:10:9;2028;:24;;:52;;-1:-1:-1;2070:10:9;;-1:-1:-1;;;;;2070:10:9;2056;:24;2028:52;2020:76;;;;;-1:-1:-1;;;2020:76:9;;;;;;;;;;;;-1:-1:-1;;;2020:76:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;2114:14:9;;;2140:1;2114:14;;;:6;:14;;;;;;;:28;2106:46;;;;;-1:-1:-1;;;2106:46:9;;;;;;;;;;;;-1:-1:-1;;;2106:46:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;2162:14:9;;;;;;;:6;:14;;;;;:23;;-1:-1:-1;;;;;;2162:23:9;;;;;;;;1953:239::o;2843:415::-;2938:10;;-1:-1:-1;;;;;2938:10:9;2924;:24;;:52;;-1:-1:-1;2966:10:9;;-1:-1:-1;;;;;2966:10:9;2952;:24;2924:52;2916:76;;;;;-1:-1:-1;;;2916:76:9;;;;;;;;;;;;-1:-1:-1;;;2916:76:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3010:26:9;;;;;;;:18;:26;;;;;;;;:37;;;;;;;;;;;;:45;;:37;:45;3002:67;;;;;-1:-1:-1;;;3002:67:9;;;;;;;;;;;;-1:-1:-1;;;3002:67:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3099:18:9;;;3080:16;3099:18;;;:10;:18;;;;;;;3131:22;;3127:85;;3178:8;-1:-1:-1;;;;;3169:30:9;;:32;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3169:32:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3169:32:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3127:85:9;-1:-1:-1;;;;;;3221:18:9;;;;;;;:10;:18;;;;;:30;;-1:-1:-1;;;;;;3221:30:9;;;;;;;;2843:415::o;1649:142::-;1728:10;;-1:-1:-1;;;;;1728:10:9;1714;:24;1706:48;;;;;-1:-1:-1;;;1706:48:9;;;;;;;;;;;;-1:-1:-1;;;1706:48:9;;;;;;;;;;;;;;;1764:8;:20;;-1:-1:-1;;;;;;1764:20:9;-1:-1:-1;;;;;1764:20:9;;;;;;;;;;1649:142::o;648:22::-;;;-1:-1:-1;;;;;648:22:9;;:::o;846:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;676:41::-;;;;;;;;;;;;-1:-1:-1;;;;;676:41:9;;:::o;1797:150::-;1880:10;;-1:-1:-1;;;;;1880:10:9;1866;:24;1858:48;;;;;-1:-1:-1;;;1858:48:9;;;;;;;;;;;;-1:-1:-1;;;1858:48:9;;;;;;;;;;;;;;;1916:10;:24;;-1:-1:-1;;;;;;1916:24:9;-1:-1:-1;;;;;1916:24:9;;;;;;;;;;1797:150::o;3264:562::-;-1:-1:-1;;;;;3348:18:9;;;3328:17;3348:18;;;:10;:18;;;;;;;;;3392:26;;-1:-1:-1;;;3392:26:9;;;;3348:18;;;;;3392:24;;:26;;;;;;;;;;;3348:18;3392:26;;;5:2:-1;;;;30:1;27;20:12;5:2;3392:26:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3392:26:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3392:26:9;;-1:-1:-1;;;;;;3432:15:9;;;;;;;3428:353;;-1:-1:-1;;;;;3483:18:9;;;3463:17;3483:18;;;:10;:18;;;;;;;;:25;;;;;;;;;;;;;;;3522:47;;3483:25;3561:7;3522:47;:27;:47;:::i;:::-;3603:9;-1:-1:-1;;;;;3593:28:9;;3622:9;3593:39;;;;;;;;;;;;;-1:-1:-1;;;;;3593:39:9;-1:-1:-1;;;;;3593:39:9;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3593:39:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3593:39:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3593:39:9;;-1:-1:-1;3646:46:9;-1:-1:-1;;;;;3646:26:9;;3673:9;3593:39;3646:46;:26;:46;:::i;:::-;3428:353;;;;3723:47;-1:-1:-1;;;;;3723:27:9;;3751:9;3762:7;3723:47;:27;:47;:::i;:::-;3799:9;-1:-1:-1;;;;;3790:27:9;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3790:29:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3790:29:9;;;;3264:562;;;;:::o;2198:186::-;2297:10;;-1:-1:-1;;;;;2297:10:9;2283;:24;2275:48;;;;;-1:-1:-1;;;2275:48:9;;;;;;;;;;;;-1:-1:-1;;;2275:48:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;2333:26:9;;;;;;;:18;:26;;;;;;;;:37;;;;;;;;;;;:44;;-1:-1:-1;;2333:44:9;2373:4;2333:44;;;2198:186::o;4164:221::-;4266:10;;-1:-1:-1;;;;;4266:10:9;4252;:24;;:52;;-1:-1:-1;4294:10:9;;-1:-1:-1;;;;;4294:10:9;4280;:24;4252:52;4244:76;;;;;-1:-1:-1;;;4244:76:9;;;;;;;;;;;;-1:-1:-1;;;4244:76:9;;;;;;;;;;;;;;;4330:48;-1:-1:-1;;;;;4330:27:9;;4358:10;4370:7;4330:48;:27;:48;:::i;:::-;4164:221;;:::o;1357:150::-;1440:10;;-1:-1:-1;;;;;1440:10:9;1426;:24;1418:48;;;;;-1:-1:-1;;;1418:48:9;;;;;;;;;;;;-1:-1:-1;;;1418:48:9;;;;;;;;;;;;;;;1476:10;:24;;-1:-1:-1;;;;;;1476:24:9;-1:-1:-1;;;;;1476:24:9;;;;;;;;;;1357:150::o;2582:255::-;2726:10;;-1:-1:-1;;;;;2726:10:9;2712;:24;;:52;;-1:-1:-1;2754:10:9;;-1:-1:-1;;;;;2754:10:9;2740;:24;2712:52;2704:76;;;;;-1:-1:-1;;;2704:76:9;;;;;;;;;;;;-1:-1:-1;;;2704:76:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;2790:18:9;;;;;;;:10;:18;;;;;;;;:27;;;;;;;;;;;;:40;;-1:-1:-1;;;;;;2790:40:9;;;;;;;;2582:255::o;774:65::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;774:65:9;;:::o;1213:138::-;1290:10;;-1:-1:-1;;;;;1290:10:9;1276;:24;1268:48;;;;;-1:-1:-1;;;1268:48:9;;;;;;;;;;;;-1:-1:-1;;;1268:48:9;;;;;;;;;;;;;;;1326:7;:18;;-1:-1:-1;;;;;;1326:18:9;-1:-1:-1;;;;;1326:18:9;;;;;;;;;;1213:138::o;6510:178::-;-1:-1:-1;;;;;6600:14:9;;;;;;;:6;:14;;;;;;;6586:10;:28;6578:47;;;;;-1:-1:-1;;;6578:47:9;;;;;;;;;;;;-1:-1:-1;;;6578:47:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;6644:18:9;;;;;;;:10;:18;;;;;;;6635:46;;-1:-1:-1;;;6635:46:9;;;;;;;;;;6644:18;;;6635:37;;:46;;;;;6644:18;;6635:46;;;;;;6644:18;;6635:46;;;5:2:-1;;;;30:1;27;20:12;619:23:9;;;-1:-1:-1;;;;;619:23:9;;:::o;923:26::-;;;;:::o;3969:189::-;4045:10;;-1:-1:-1;;;;;4045:10:9;4031;:24;;:52;;-1:-1:-1;4073:10:9;;-1:-1:-1;;;;;4073:10:9;4059;:24;4031:52;4023:76;;;;;-1:-1:-1;;;4023:76:9;;;;;;;;;;;;-1:-1:-1;;;4023:76:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;4118:18:9;;;;;;;:10;:18;;;;;;;;;4109:42;;-1:-1:-1;;;4109:42:9;;;;4118:18;;;4109:40;;:42;;;;;4118:18;4109:42;;;;;;;4118:18;4109:42;;;5:2:-1;;;;30:1;27;20:12;5:2;4109:42:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4109:42:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;3969:189:9:o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;1050:612:6:-;1415:10;;;1414:62;;-1:-1:-1;1431:39:6;;;-1:-1:-1;;;1431:39:6;;1455:4;1431:39;;;;-1:-1:-1;;;;;1431:39:6;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1431:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1431:39:6;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:62;;;-1:-1:-1;;;;;1592:62:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1592:62:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1566:89:6;;1585:5;;1566:18;:89::i;2159:459:1:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2666:1095;;;;:::o;3718:338:1:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;686:610:7:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    434,
    6690
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1578B6A GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xCCD06318 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF3FEF3A3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xF712ADBB EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xF7654176 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xFA09E630 EQ PUSH2 0x5CE JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xCCD06318 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xE4F2494D EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xEC38A862 EQ PUSH2 0x56C JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xB02BF4B9 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB02BF4B9 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xC494448E EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0xC6D758CB EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x4E0 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA1578B6A EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xA622EE7C EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x434 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x6AC5DB19 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x714CCF7B GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x714CCF7B EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x72CB5D97 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x8DA1DF4D EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x9EC5A894 EQ PUSH2 0x3C4 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x6DCD64E5 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x39EBF823 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x39EBF823 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x590BBB60 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x674E694F EQ PUSH2 0x2AF JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x4209F48 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x197BAA6D EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x5F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x237 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x237 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1064 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140B JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1762 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x617 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x51CFF8D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 PUSH4 0x51CFF8D9 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC38 JUMPI PUSH1 0x0 PUSH2 0x7C4 DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1AAA AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F1FCD51 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x815 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD SWAP1 SWAP7 POP PUSH2 0x8CD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1AF5 AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x8ED SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1AF5 AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85E2C5B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD SWAP4 AND SWAP3 PUSH4 0x85E2C5B SWAP3 PUSH1 0xA4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x969 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 LT ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA18 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA00 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE2A7515E DUP10 DUP6 DUP8 DUP6 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAE9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAD1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 POP DUP6 DUP6 GT ISZERO PUSH2 0xC33 JUMPI PUSH2 0xBCB DUP6 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1AAA AND JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0xBF6 PUSH2 0x2710 PUSH2 0xBEA PUSH1 0x8 SLOAD DUP9 PUSH2 0x1C08 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1C61 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC11 DUP5 PUSH2 0xC0C DUP8 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1AAA AND JUMP JUMPDEST PUSH2 0x147A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xC31 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1CA3 AND JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xC62 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xCA1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x51CFF8D9 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F1FCD51 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x1F1FCD51 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85E2C5B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD SWAP5 SWAP6 POP SWAP1 SWAP3 AND SWAP3 PUSH4 0x85E2C5B SWAP3 PUSH1 0xA4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 LT ISZERO PUSH2 0xFC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP3 SWAP5 SWAP3 SWAP4 DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x101C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1049 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1031 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x722713F7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 AND SWAP3 PUSH4 0x722713F7 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x110B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x114A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x85CDD1C985D1959DA5CDD PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x119F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x1D985D5B1D PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x11F0 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x122F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x85CDD1C985D1959DA5CDD PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x129A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x8585C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x1323 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x853828B6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x130A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x139F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1458 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x1F1FCD51 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD SWAP5 AND SWAP4 DUP5 SWAP3 PUSH4 0x1F1FCD51 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP6 AND EQ PUSH2 0x15EE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0x1548 SWAP1 DUP3 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1CA3 AND JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDEF2489B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x15E8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1CA3 AND JUMP JUMPDEST POP PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x1608 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1CA3 AND JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1657 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16AE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1705 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1744 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x175E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1CA3 AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x17F4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1833 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x85CDD1C985D1959DA5CDD PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x195C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP4 AND SWAP3 PUSH4 0x2E1A7D4D SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x19EB JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1A2A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x85CDD1C985D1959DA5CDD PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x429C145B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 MLOAD SWAP5 AND SWAP4 PUSH4 0x853828B6 SWAP4 PUSH1 0x4 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1CF5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1B7B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1BB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2037 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1AA5 SWAP1 DUP5 SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C17 JUMPI POP PUSH1 0x0 PUSH2 0x1AEF JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1C24 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1AEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FEC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AEC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1AA5 SWAP1 DUP5 SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D49 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D31 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D76 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x1D9E DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0x1DEF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1E2D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E8F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1EEB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1F44 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1F44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x200D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1F99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1D49 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D31 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1FA5 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x1FE3 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A72315820CEED599B 0xC2 MSTORE8 ISZERO LOG0 0x29 0xB0 0xAE 0xB5 0xB8 0x4E 0xC1 0x2C JUMPDEST CODESIZE DUP16 SWAP12 0xED SAR 0xF 0xEB GT GAS LOG1 PUSH8 0xC185206164736F6C PUSH4 0x43000511 STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        434,
        6690
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        434,
        6690
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA1578B6A"
    },
    "38": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "GT",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xCCD06318"
    },
    "49": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "GT",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF3FEF3A3"
    },
    "60": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "GT",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF3FEF3A3"
    },
    "71": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x592"
    },
    "75": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF712ADBB"
    },
    "82": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "83": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5BE"
    },
    "86": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "88": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF7654176"
    },
    "93": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "94": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C6"
    },
    "97": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "98": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "99": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFA09E630"
    },
    "104": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "105": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5CE"
    },
    "108": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "109": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C4"
    },
    "112": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMP",
      "path": "9"
    },
    "113": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "114": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "115": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xCCD06318"
    },
    "120": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "121": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x506"
    },
    "124": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xE4F2494D"
    },
    "131": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "132": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x53E"
    },
    "135": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "136": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "137": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xEC38A862"
    },
    "142": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "143": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x56C"
    },
    "146": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "147": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C4"
    },
    "150": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMP",
      "path": "9"
    },
    "151": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "152": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "153": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xB02BF4B9"
    },
    "158": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "GT",
      "path": "9"
    },
    "159": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "163": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "164": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xB02BF4B9"
    },
    "169": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "170": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x45A"
    },
    "173": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "174": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "175": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC494448E"
    },
    "180": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "181": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x486"
    },
    "184": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "185": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "186": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC6D758CB"
    },
    "191": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "192": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4B4"
    },
    "195": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "196": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "197": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC7B9D530"
    },
    "202": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "203": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4E0"
    },
    "206": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "207": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C4"
    },
    "210": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMP",
      "path": "9"
    },
    "211": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "212": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "213": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA1578B6A"
    },
    "218": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "219": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3CC"
    },
    "222": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "223": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "224": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA622EE7C"
    },
    "229": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "230": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x40E"
    },
    "233": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "234": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "235": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xAB033EA9"
    },
    "240": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "241": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x434"
    },
    "244": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "245": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C4"
    },
    "248": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMP",
      "path": "9"
    },
    "249": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "250": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "251": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6AC5DB19"
    },
    "256": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "GT",
      "path": "9"
    },
    "257": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "261": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "262": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x714CCF7B"
    },
    "267": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "GT",
      "path": "9"
    },
    "268": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "272": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "273": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x714CCF7B"
    },
    "278": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "279": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x342"
    },
    "282": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "283": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "284": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x72CB5D97"
    },
    "289": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "290": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x370"
    },
    "293": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "294": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "295": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8DA1DF4D"
    },
    "300": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "301": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x39E"
    },
    "304": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "305": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "306": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x9EC5A894"
    },
    "311": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "312": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3C4"
    },
    "315": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "316": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C4"
    },
    "319": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMP",
      "path": "9"
    },
    "320": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "321": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "322": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6AC5DB19"
    },
    "327": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "328": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CC"
    },
    "331": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "332": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "333": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6DCD64E5"
    },
    "338": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "339": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2E6"
    },
    "342": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "343": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "344": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "349": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "350": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x31C"
    },
    "353": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "354": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C4"
    },
    "357": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMP",
      "path": "9"
    },
    "358": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "359": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "360": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x39EBF823"
    },
    "365": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "GT",
      "path": "9"
    },
    "366": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "370": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "371": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x39EBF823"
    },
    "376": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "377": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x253"
    },
    "380": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "381": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "382": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x590BBB60"
    },
    "387": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "388": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x279"
    },
    "391": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "392": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "393": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x5AA6E675"
    },
    "398": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "399": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A7"
    },
    "402": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "403": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "404": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x674E694F"
    },
    "409": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "410": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2AF"
    },
    "413": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "414": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C4"
    },
    "417": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMP",
      "path": "9"
    },
    "418": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "419": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "420": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x4209F48"
    },
    "425": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "426": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "430": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "431": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x197BAA6D"
    },
    "436": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "437": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x201"
    },
    "440": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "441": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "442": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1FE4A686"
    },
    "447": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "EQ",
      "path": "9"
    },
    "448": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x22F"
    },
    "451": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "452": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "453": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "DUP1",
      "path": "9"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        434,
        6690
      ],
      "op": "REVERT",
      "path": "9"
    },
    "457": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "458": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "461": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "463": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "DUP1",
      "path": "9"
    },
    "464": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "465": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "SUB",
      "path": "9"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "468": {
      "op": "DUP2"
    },
    "469": {
      "op": "LT"
    },
    "470": {
      "op": "ISZERO"
    },
    "471": {
      "op": "PUSH2",
      "value": "0x1DF"
    },
    "474": {
      "op": "JUMPI"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "477": {
      "op": "DUP1"
    },
    "478": {
      "op": "REVERT"
    },
    "479": {
      "op": "JUMPDEST"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "op": "SUB"
    },
    "489": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "DUP2",
      "path": "9"
    },
    "490": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "491": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "DUP2",
      "path": "9"
    },
    "492": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "AND",
      "path": "9"
    },
    "493": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "494": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "496": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "DUP2",
      "path": "9"
    },
    "497": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "ADD",
      "path": "9"
    },
    "498": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "499": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "500": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "501": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "AND",
      "path": "9"
    },
    "502": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "503": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "505": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "ADD",
      "path": "9"
    },
    "506": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "507": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5F4"
    },
    "510": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        5085,
        6504
      ],
      "op": "JUMP",
      "path": "9"
    },
    "511": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "512": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "STOP",
      "path": "9"
    },
    "513": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "514": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "517": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "519": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "DUP1",
      "path": "9"
    },
    "520": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "521": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "SUB",
      "path": "9"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "524": {
      "op": "DUP2"
    },
    "525": {
      "op": "LT"
    },
    "526": {
      "op": "ISZERO"
    },
    "527": {
      "op": "PUSH2",
      "value": "0x217"
    },
    "530": {
      "op": "JUMPI"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "533": {
      "op": "DUP1"
    },
    "534": {
      "op": "REVERT"
    },
    "535": {
      "op": "JUMPDEST"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "DUP2",
      "path": "9"
    },
    "546": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "547": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "DUP2",
      "path": "9"
    },
    "548": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "AND",
      "path": "9"
    },
    "549": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "550": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "552": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "ADD",
      "path": "9"
    },
    "553": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "554": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "AND",
      "path": "9"
    },
    "555": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC3F"
    },
    "558": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "i",
      "offset": [
        4391,
        4609
      ],
      "op": "JUMP",
      "path": "9"
    },
    "559": {
      "offset": [
        587,
        612
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "560": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x237"
    },
    "563": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD15"
    },
    "566": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "i",
      "offset": [
        587,
        612
      ],
      "op": "JUMP",
      "path": "9"
    },
    "567": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "568": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "570": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "DUP1",
      "path": "9"
    },
    "571": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "578": {
      "op": "SHL"
    },
    "579": {
      "op": "SUB"
    },
    "580": {
      "offset": [
        587,
        612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "581": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "582": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "AND",
      "path": "9"
    },
    "583": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "DUP3",
      "path": "9"
    },
    "584": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "585": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "586": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "587": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "DUP2",
      "path": "9"
    },
    "588": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "589": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "SUB",
      "path": "9"
    },
    "590": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "592": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "ADD",
      "path": "9"
    },
    "593": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "594": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "RETURN",
      "path": "9"
    },
    "595": {
      "offset": [
        723,
        768
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "596": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x237"
    },
    "599": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "601": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "DUP1",
      "path": "9"
    },
    "602": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "603": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "SUB",
      "path": "9"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "606": {
      "op": "DUP2"
    },
    "607": {
      "op": "LT"
    },
    "608": {
      "op": "ISZERO"
    },
    "609": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "612": {
      "op": "JUMPI"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "615": {
      "op": "DUP1"
    },
    "616": {
      "op": "REVERT"
    },
    "617": {
      "op": "JUMPDEST"
    },
    "618": {
      "op": "POP"
    },
    "619": {
      "offset": [
        723,
        768
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "626": {
      "op": "SHL"
    },
    "627": {
      "op": "SUB"
    },
    "628": {
      "offset": [
        723,
        768
      ],
      "op": "AND",
      "path": "9"
    },
    "629": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD24"
    },
    "632": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "i",
      "offset": [
        723,
        768
      ],
      "op": "JUMP",
      "path": "9"
    },
    "633": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "634": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "637": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "639": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "DUP1",
      "path": "9"
    },
    "640": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "641": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "SUB",
      "path": "9"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "644": {
      "op": "DUP2"
    },
    "645": {
      "op": "LT"
    },
    "646": {
      "op": "ISZERO"
    },
    "647": {
      "op": "PUSH2",
      "value": "0x28F"
    },
    "650": {
      "op": "JUMPI"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "653": {
      "op": "DUP1"
    },
    "654": {
      "op": "REVERT"
    },
    "655": {
      "op": "JUMPDEST"
    },
    "656": {
      "op": "POP"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "663": {
      "op": "SHL"
    },
    "664": {
      "op": "SUB"
    },
    "665": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "DUP2",
      "path": "9"
    },
    "666": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "667": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "DUP2",
      "path": "9"
    },
    "668": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "AND",
      "path": "9"
    },
    "669": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "670": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "672": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "ADD",
      "path": "9"
    },
    "673": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "674": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "AND",
      "path": "9"
    },
    "675": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD3F"
    },
    "678": {
      "fn": "Controller.revokeStrategy",
      "jump": "i",
      "offset": [
        2390,
        2576
      ],
      "op": "JUMP",
      "path": "9"
    },
    "679": {
      "offset": [
        556,
        581
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "680": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        556,
        581
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x237"
    },
    "683": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        556,
        581
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDBD"
    },
    "686": {
      "fn": "Controller.revokeStrategy",
      "jump": "i",
      "offset": [
        556,
        581
      ],
      "op": "JUMP",
      "path": "9"
    },
    "687": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "688": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "691": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "693": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "DUP1",
      "path": "9"
    },
    "694": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "695": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "SUB",
      "path": "9"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "698": {
      "op": "DUP2"
    },
    "699": {
      "op": "LT"
    },
    "700": {
      "op": "ISZERO"
    },
    "701": {
      "op": "PUSH2",
      "value": "0x2C5"
    },
    "704": {
      "op": "JUMPI"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "707": {
      "op": "DUP1"
    },
    "708": {
      "op": "REVERT"
    },
    "709": {
      "op": "JUMPDEST"
    },
    "710": {
      "op": "POP"
    },
    "711": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "712": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDCC"
    },
    "715": {
      "fn": "Controller.setSplit",
      "jump": "i",
      "offset": [
        1513,
        1643
      ],
      "op": "JUMP",
      "path": "9"
    },
    "716": {
      "offset": [
        955,
        990
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "717": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D4"
    },
    "720": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE1E"
    },
    "723": {
      "fn": "Controller.setSplit",
      "jump": "i",
      "offset": [
        955,
        990
      ],
      "op": "JUMP",
      "path": "9"
    },
    "724": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "725": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "727": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "DUP1",
      "path": "9"
    },
    "728": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "729": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "730": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "DUP3",
      "path": "9"
    },
    "731": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "732": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "733": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "734": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "DUP2",
      "path": "9"
    },
    "735": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "736": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "SUB",
      "path": "9"
    },
    "737": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "739": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "ADD",
      "path": "9"
    },
    "740": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "741": {
      "fn": "Controller.setSplit",
      "offset": [
        955,
        990
      ],
      "op": "RETURN",
      "path": "9"
    },
    "742": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "743": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D4"
    },
    "746": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "748": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "DUP1",
      "path": "9"
    },
    "749": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "750": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "SUB",
      "path": "9"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "753": {
      "op": "DUP2"
    },
    "754": {
      "op": "LT"
    },
    "755": {
      "op": "ISZERO"
    },
    "756": {
      "op": "PUSH2",
      "value": "0x2FC"
    },
    "759": {
      "op": "JUMPI"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "762": {
      "op": "DUP1"
    },
    "763": {
      "op": "REVERT"
    },
    "764": {
      "op": "JUMPDEST"
    },
    "765": {
      "op": "POP"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "op": "SUB"
    },
    "774": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "DUP2",
      "path": "9"
    },
    "775": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "776": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "DUP2",
      "path": "9"
    },
    "777": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "AND",
      "path": "9"
    },
    "778": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "779": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "781": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "DUP2",
      "path": "9"
    },
    "782": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "ADD",
      "path": "9"
    },
    "783": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "784": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "785": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "786": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "AND",
      "path": "9"
    },
    "787": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "788": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "790": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "ADD",
      "path": "9"
    },
    "791": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "792": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE24"
    },
    "795": {
      "fn": "Controller.getExpectedReturn",
      "jump": "i",
      "offset": [
        4615,
        4985
      ],
      "op": "JUMP",
      "path": "9"
    },
    "796": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "797": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D4"
    },
    "800": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "802": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "DUP1",
      "path": "9"
    },
    "803": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "804": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "SUB",
      "path": "9"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "807": {
      "op": "DUP2"
    },
    "808": {
      "op": "LT"
    },
    "809": {
      "op": "ISZERO"
    },
    "810": {
      "op": "PUSH2",
      "value": "0x332"
    },
    "813": {
      "op": "JUMPI"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "816": {
      "op": "DUP1"
    },
    "817": {
      "op": "REVERT"
    },
    "818": {
      "op": "JUMPDEST"
    },
    "819": {
      "op": "POP"
    },
    "820": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "827": {
      "op": "SHL"
    },
    "828": {
      "op": "SUB"
    },
    "829": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "AND",
      "path": "9"
    },
    "830": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1064"
    },
    "833": {
      "fn": "Controller.balanceOf",
      "jump": "i",
      "offset": [
        3832,
        3963
      ],
      "op": "JUMP",
      "path": "9"
    },
    "834": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "835": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "838": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "840": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "DUP1",
      "path": "9"
    },
    "841": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "842": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "SUB",
      "path": "9"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "845": {
      "op": "DUP2"
    },
    "846": {
      "op": "LT"
    },
    "847": {
      "op": "ISZERO"
    },
    "848": {
      "op": "PUSH2",
      "value": "0x358"
    },
    "851": {
      "op": "JUMPI"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "854": {
      "op": "DUP1"
    },
    "855": {
      "op": "REVERT"
    },
    "856": {
      "op": "JUMPDEST"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "DUP2",
      "path": "9"
    },
    "867": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "868": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "DUP2",
      "path": "9"
    },
    "869": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "AND",
      "path": "9"
    },
    "870": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "871": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "873": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "ADD",
      "path": "9"
    },
    "874": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "875": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "AND",
      "path": "9"
    },
    "876": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E8"
    },
    "879": {
      "fn": "Controller.setVault",
      "jump": "i",
      "offset": [
        1953,
        2192
      ],
      "op": "JUMP",
      "path": "9"
    },
    "880": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "881": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "884": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "886": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "DUP1",
      "path": "9"
    },
    "887": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "888": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "SUB",
      "path": "9"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "891": {
      "op": "DUP2"
    },
    "892": {
      "op": "LT"
    },
    "893": {
      "op": "ISZERO"
    },
    "894": {
      "op": "PUSH2",
      "value": "0x386"
    },
    "897": {
      "op": "JUMPI"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "900": {
      "op": "DUP1"
    },
    "901": {
      "op": "REVERT"
    },
    "902": {
      "op": "JUMPDEST"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "op": "SUB"
    },
    "912": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "DUP2",
      "path": "9"
    },
    "913": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "914": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "DUP2",
      "path": "9"
    },
    "915": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "AND",
      "path": "9"
    },
    "916": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "917": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "919": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "ADD",
      "path": "9"
    },
    "920": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "921": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "AND",
      "path": "9"
    },
    "922": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11CD"
    },
    "925": {
      "fn": "Controller.setStrategy",
      "jump": "i",
      "offset": [
        2843,
        3258
      ],
      "op": "JUMP",
      "path": "9"
    },
    "926": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "927": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "930": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "932": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "DUP1",
      "path": "9"
    },
    "933": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "934": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "SUB",
      "path": "9"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "937": {
      "op": "DUP2"
    },
    "938": {
      "op": "LT"
    },
    "939": {
      "op": "ISZERO"
    },
    "940": {
      "op": "PUSH2",
      "value": "0x3B4"
    },
    "943": {
      "op": "JUMPI"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "946": {
      "op": "DUP1"
    },
    "947": {
      "op": "REVERT"
    },
    "948": {
      "op": "JUMPDEST"
    },
    "949": {
      "op": "POP"
    },
    "950": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "AND",
      "path": "9"
    },
    "960": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1352"
    },
    "963": {
      "fn": "Controller.setOneSplit",
      "jump": "i",
      "offset": [
        1649,
        1791
      ],
      "op": "JUMP",
      "path": "9"
    },
    "964": {
      "offset": [
        648,
        670
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "965": {
      "fn": "Controller.setOneSplit",
      "offset": [
        648,
        670
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x237"
    },
    "968": {
      "fn": "Controller.setOneSplit",
      "offset": [
        648,
        670
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13C1"
    },
    "971": {
      "fn": "Controller.setOneSplit",
      "jump": "i",
      "offset": [
        648,
        670
      ],
      "op": "JUMP",
      "path": "9"
    },
    "972": {
      "offset": [
        846,
        916
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "973": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3FA"
    },
    "976": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "978": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP1",
      "path": "9"
    },
    "979": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "980": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SUB",
      "path": "9"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "983": {
      "op": "DUP2"
    },
    "984": {
      "op": "LT"
    },
    "985": {
      "op": "ISZERO"
    },
    "986": {
      "op": "PUSH2",
      "value": "0x3E2"
    },
    "989": {
      "op": "JUMPI"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "992": {
      "op": "DUP1"
    },
    "993": {
      "op": "REVERT"
    },
    "994": {
      "op": "JUMPDEST"
    },
    "995": {
      "op": "POP"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1002": {
      "op": "SHL"
    },
    "1003": {
      "op": "SUB"
    },
    "1004": {
      "offset": [
        846,
        916
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1005": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1006": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1007": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "AND",
      "path": "9"
    },
    "1008": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1009": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1011": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "ADD",
      "path": "9"
    },
    "1012": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1013": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "AND",
      "path": "9"
    },
    "1014": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13D0"
    },
    "1017": {
      "fn": "Controller.setOneSplit",
      "jump": "i",
      "offset": [
        846,
        916
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1018": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1019": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1021": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1022": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1023": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1024": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1025": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1026": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1027": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1028": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1029": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1030": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1031": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1032": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SUB",
      "path": "9"
    },
    "1033": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1035": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "ADD",
      "path": "9"
    },
    "1036": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1037": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "RETURN",
      "path": "9"
    },
    "1038": {
      "offset": [
        676,
        717
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1039": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x237"
    },
    "1042": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1044": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1045": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1046": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "SUB",
      "path": "9"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1049": {
      "op": "DUP2"
    },
    "1050": {
      "op": "LT"
    },
    "1051": {
      "op": "ISZERO"
    },
    "1052": {
      "op": "PUSH2",
      "value": "0x424"
    },
    "1055": {
      "op": "JUMPI"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1058": {
      "op": "DUP1"
    },
    "1059": {
      "op": "REVERT"
    },
    "1060": {
      "op": "JUMPDEST"
    },
    "1061": {
      "op": "POP"
    },
    "1062": {
      "offset": [
        676,
        717
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "SUB"
    },
    "1071": {
      "offset": [
        676,
        717
      ],
      "op": "AND",
      "path": "9"
    },
    "1072": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13F0"
    },
    "1075": {
      "fn": "Controller.setOneSplit",
      "jump": "i",
      "offset": [
        676,
        717
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1076": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1077": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1080": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1082": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1083": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1084": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "SUB",
      "path": "9"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1087": {
      "op": "DUP2"
    },
    "1088": {
      "op": "LT"
    },
    "1089": {
      "op": "ISZERO"
    },
    "1090": {
      "op": "PUSH2",
      "value": "0x44A"
    },
    "1093": {
      "op": "JUMPI"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1096": {
      "op": "DUP1"
    },
    "1097": {
      "op": "REVERT"
    },
    "1098": {
      "op": "JUMPDEST"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "op": "SUB"
    },
    "1109": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "AND",
      "path": "9"
    },
    "1110": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x140B"
    },
    "1113": {
      "fn": "Controller.setGovernance",
      "jump": "i",
      "offset": [
        1797,
        1947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1114": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1115": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1118": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1120": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1121": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1122": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "SUB",
      "path": "9"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1125": {
      "op": "DUP2"
    },
    "1126": {
      "op": "LT"
    },
    "1127": {
      "op": "ISZERO"
    },
    "1128": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "1131": {
      "op": "JUMPI"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1134": {
      "op": "DUP1"
    },
    "1135": {
      "op": "REVERT"
    },
    "1136": {
      "op": "JUMPDEST"
    },
    "1137": {
      "op": "POP"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1147": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1148": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "AND",
      "path": "9"
    },
    "1149": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1150": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1152": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "ADD",
      "path": "9"
    },
    "1153": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1154": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x147A"
    },
    "1157": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        3264,
        3826
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1158": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1159": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1162": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1164": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1165": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1166": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "SUB",
      "path": "9"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1169": {
      "op": "DUP2"
    },
    "1170": {
      "op": "LT"
    },
    "1171": {
      "op": "ISZERO"
    },
    "1172": {
      "op": "PUSH2",
      "value": "0x49C"
    },
    "1175": {
      "op": "JUMPI"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1178": {
      "op": "DUP1"
    },
    "1179": {
      "op": "REVERT"
    },
    "1180": {
      "op": "JUMPDEST"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1188": {
      "op": "SHL"
    },
    "1189": {
      "op": "SUB"
    },
    "1190": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1191": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1192": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1193": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "AND",
      "path": "9"
    },
    "1194": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1195": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1197": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "ADD",
      "path": "9"
    },
    "1198": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1199": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "AND",
      "path": "9"
    },
    "1200": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1661"
    },
    "1203": {
      "fn": "Controller.approveStrategy",
      "jump": "i",
      "offset": [
        2198,
        2384
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1204": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1205": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1208": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1210": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1211": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1212": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "SUB",
      "path": "9"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1215": {
      "op": "DUP2"
    },
    "1216": {
      "op": "LT"
    },
    "1217": {
      "op": "ISZERO"
    },
    "1218": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "1221": {
      "op": "JUMPI"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1224": {
      "op": "DUP1"
    },
    "1225": {
      "op": "REVERT"
    },
    "1226": {
      "op": "JUMPDEST"
    },
    "1227": {
      "op": "POP"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1237": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1238": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "AND",
      "path": "9"
    },
    "1239": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1240": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1242": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "ADD",
      "path": "9"
    },
    "1243": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1244": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16E2"
    },
    "1247": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "i",
      "offset": [
        4164,
        4385
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1248": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1249": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1252": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1254": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1255": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1256": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "SUB",
      "path": "9"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1259": {
      "op": "DUP2"
    },
    "1260": {
      "op": "LT"
    },
    "1261": {
      "op": "ISZERO"
    },
    "1262": {
      "op": "PUSH2",
      "value": "0x4F6"
    },
    "1265": {
      "op": "JUMPI"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1268": {
      "op": "DUP1"
    },
    "1269": {
      "op": "REVERT"
    },
    "1270": {
      "op": "JUMPDEST"
    },
    "1271": {
      "op": "POP"
    },
    "1272": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "op": "SUB"
    },
    "1281": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "AND",
      "path": "9"
    },
    "1282": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1762"
    },
    "1285": {
      "fn": "Controller.setStrategist",
      "jump": "i",
      "offset": [
        1357,
        1507
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1286": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1287": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1290": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1292": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1293": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1294": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "SUB",
      "path": "9"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1297": {
      "op": "DUP2"
    },
    "1298": {
      "op": "LT"
    },
    "1299": {
      "op": "ISZERO"
    },
    "1300": {
      "op": "PUSH2",
      "value": "0x51C"
    },
    "1303": {
      "op": "JUMPI"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1306": {
      "op": "DUP1"
    },
    "1307": {
      "op": "REVERT"
    },
    "1308": {
      "op": "JUMPDEST"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1316": {
      "op": "SHL"
    },
    "1317": {
      "op": "SUB"
    },
    "1318": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1319": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1320": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1321": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "AND",
      "path": "9"
    },
    "1322": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1323": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1325": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1326": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "ADD",
      "path": "9"
    },
    "1327": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1328": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1329": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "AND",
      "path": "9"
    },
    "1330": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1331": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1333": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1334": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1335": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "ADD",
      "path": "9"
    },
    "1336": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1337": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "AND",
      "path": "9"
    },
    "1338": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17D1"
    },
    "1341": {
      "fn": "Controller.setConverter",
      "jump": "i",
      "offset": [
        2582,
        2837
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1342": {
      "offset": [
        774,
        839
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1343": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x237"
    },
    "1346": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1348": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1349": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1350": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SUB",
      "path": "9"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1353": {
      "op": "DUP2"
    },
    "1354": {
      "op": "LT"
    },
    "1355": {
      "op": "ISZERO"
    },
    "1356": {
      "op": "PUSH2",
      "value": "0x554"
    },
    "1359": {
      "op": "JUMPI"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1362": {
      "op": "DUP1"
    },
    "1363": {
      "op": "REVERT"
    },
    "1364": {
      "op": "JUMPDEST"
    },
    "1365": {
      "op": "POP"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "SUB"
    },
    "1374": {
      "offset": [
        774,
        839
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1375": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1376": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1377": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "AND",
      "path": "9"
    },
    "1378": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1379": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1381": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "ADD",
      "path": "9"
    },
    "1382": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1383": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "AND",
      "path": "9"
    },
    "1384": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1870"
    },
    "1387": {
      "fn": "Controller.setConverter",
      "jump": "i",
      "offset": [
        774,
        839
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1388": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1389": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1392": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1394": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1395": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1396": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "SUB",
      "path": "9"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "op": "DUP2"
    },
    "1400": {
      "op": "LT"
    },
    "1401": {
      "op": "ISZERO"
    },
    "1402": {
      "op": "PUSH2",
      "value": "0x582"
    },
    "1405": {
      "op": "JUMPI"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1408": {
      "op": "DUP1"
    },
    "1409": {
      "op": "REVERT"
    },
    "1410": {
      "op": "JUMPDEST"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "AND",
      "path": "9"
    },
    "1422": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1896"
    },
    "1425": {
      "fn": "Controller.setRewards",
      "jump": "i",
      "offset": [
        1213,
        1351
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1426": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1427": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1430": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1432": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1433": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1434": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "SUB",
      "path": "9"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1437": {
      "op": "DUP2"
    },
    "1438": {
      "op": "LT"
    },
    "1439": {
      "op": "ISZERO"
    },
    "1440": {
      "op": "PUSH2",
      "value": "0x5A8"
    },
    "1443": {
      "op": "JUMPI"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "DUP1"
    },
    "1447": {
      "op": "REVERT"
    },
    "1448": {
      "op": "JUMPDEST"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "op": "SUB"
    },
    "1458": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1459": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1460": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "AND",
      "path": "9"
    },
    "1461": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1462": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1464": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "ADD",
      "path": "9"
    },
    "1465": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1466": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1905"
    },
    "1469": {
      "fn": "Controller.withdraw",
      "jump": "i",
      "offset": [
        6510,
        6688
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1470": {
      "offset": [
        619,
        642
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1471": {
      "fn": "Controller.withdraw",
      "offset": [
        619,
        642
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x237"
    },
    "1474": {
      "fn": "Controller.withdraw",
      "offset": [
        619,
        642
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19B3"
    },
    "1477": {
      "fn": "Controller.withdraw",
      "jump": "i",
      "offset": [
        619,
        642
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1478": {
      "offset": [
        923,
        949
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1479": {
      "fn": "Controller.withdraw",
      "offset": [
        923,
        949
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2D4"
    },
    "1482": {
      "fn": "Controller.withdraw",
      "offset": [
        923,
        949
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19C2"
    },
    "1485": {
      "fn": "Controller.withdraw",
      "jump": "i",
      "offset": [
        923,
        949
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1486": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1487": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1FF"
    },
    "1490": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1492": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1493": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1494": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "SUB",
      "path": "9"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1497": {
      "op": "DUP2"
    },
    "1498": {
      "op": "LT"
    },
    "1499": {
      "op": "ISZERO"
    },
    "1500": {
      "op": "PUSH2",
      "value": "0x5E4"
    },
    "1503": {
      "op": "JUMPI"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1506": {
      "op": "DUP1"
    },
    "1507": {
      "op": "REVERT"
    },
    "1508": {
      "op": "JUMPDEST"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1517": {
      "op": "SHL"
    },
    "1518": {
      "op": "SUB"
    },
    "1519": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "AND",
      "path": "9"
    },
    "1520": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19C8"
    },
    "1523": {
      "fn": "Controller.withdrawAll",
      "jump": "i",
      "offset": [
        3969,
        4158
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1524": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1525": {
      "fn": "Controller.yearn",
      "offset": [
        5219,
        5229
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x1"
    },
    "1527": {
      "fn": "Controller.yearn",
      "offset": [
        5219,
        5229
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "op": "SUB"
    },
    "1536": {
      "fn": "Controller.yearn",
      "offset": [
        5219,
        5229
      ],
      "op": "AND",
      "path": "9"
    },
    "1537": {
      "fn": "Controller.yearn",
      "offset": [
        5205,
        5215
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1538": {
      "fn": "Controller.yearn",
      "offset": [
        5205,
        5229
      ],
      "op": "EQ",
      "path": "9"
    },
    "1539": {
      "branch": 62,
      "fn": "Controller.yearn",
      "offset": [
        5205,
        5229
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1540": {
      "fn": "Controller.yearn",
      "offset": [
        5205,
        5257
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x617"
    },
    "1543": {
      "branch": 62,
      "fn": "Controller.yearn",
      "offset": [
        5205,
        5257
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "fn": "Controller.yearn",
      "offset": [
        5247,
        5257
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1547": {
      "fn": "Controller.yearn",
      "offset": [
        5247,
        5257
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "op": "SUB"
    },
    "1556": {
      "fn": "Controller.yearn",
      "offset": [
        5247,
        5257
      ],
      "op": "AND",
      "path": "9"
    },
    "1557": {
      "fn": "Controller.yearn",
      "offset": [
        5233,
        5243
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1558": {
      "branch": 63,
      "fn": "Controller.yearn",
      "offset": [
        5233,
        5257
      ],
      "op": "EQ",
      "path": "9"
    },
    "1559": {
      "fn": "Controller.yearn",
      "offset": [
        5205,
        5257
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1560": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x656"
    },
    "1563": {
      "branch": 63,
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1564": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1566": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1567": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1574": {
      "op": "SHL"
    },
    "1575": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1576": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1577": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1579": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1581": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1582": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "ADD",
      "path": "9"
    },
    "1583": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1584": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "1586": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1588": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1589": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "ADD",
      "path": "9"
    },
    "1590": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1591": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "1608": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1609": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "ADD",
      "path": "9"
    },
    "1610": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1611": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1612": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1613": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1614": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1615": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1616": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "SUB",
      "path": "9"
    },
    "1617": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "1619": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "ADD",
      "path": "9"
    },
    "1620": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1621": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1622": {
      "fn": "Controller.yearn",
      "offset": [
        5197,
        5273
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1623": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1625": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1626": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1627": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1636": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1637": {
      "fn": "Controller.yearn",
      "offset": [
        5434,
        5438
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "1638": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1640": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1641": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "ADD",
      "path": "9"
    },
    "1642": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1643": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1644": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1645": {
      "fn": "Controller.yearn",
      "offset": [
        5383,
        5398
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1647": {
      "fn": "Controller.yearn",
      "offset": [
        5383,
        5398
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1654": {
      "op": "SHL"
    },
    "1655": {
      "op": "SUB"
    },
    "1656": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5425
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1657": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5425
      ],
      "op": "AND",
      "path": "9"
    },
    "1658": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5425
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1659": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5425
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "1664": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5425
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1665": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1667": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1668": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1669": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "ADD",
      "path": "9"
    },
    "1670": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1671": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1673": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1674": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1675": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1676": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1677": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1678": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1679": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SUB",
      "path": "9"
    },
    "1680": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "ADD",
      "path": "9"
    },
    "1681": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1682": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5425
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1683": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1684": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "1685": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1686": {
      "op": "DUP1"
    },
    "1687": {
      "op": "ISZERO"
    },
    "1688": {
      "op": "PUSH2",
      "value": "0x6A0"
    },
    "1691": {
      "op": "JUMPI"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1694": {
      "op": "DUP1"
    },
    "1695": {
      "op": "REVERT"
    },
    "1696": {
      "op": "JUMPDEST"
    },
    "1697": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "POP",
      "path": "9"
    },
    "1698": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "GAS",
      "path": "9"
    },
    "1699": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "1700": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1701": {
      "op": "DUP1"
    },
    "1702": {
      "op": "ISZERO"
    },
    "1703": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "1706": {
      "op": "JUMPI"
    },
    "1707": {
      "op": "RETURNDATASIZE"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1710": {
      "op": "DUP1"
    },
    "1711": {
      "op": "RETURNDATACOPY"
    },
    "1712": {
      "op": "RETURNDATASIZE"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1715": {
      "op": "REVERT"
    },
    "1716": {
      "op": "JUMPDEST"
    },
    "1717": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "POP",
      "path": "9"
    },
    "1718": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "POP",
      "path": "9"
    },
    "1719": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "POP",
      "path": "9"
    },
    "1720": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "POP",
      "path": "9"
    },
    "1721": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1723": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1724": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1727": {
      "op": "DUP2"
    },
    "1728": {
      "op": "LT"
    },
    "1729": {
      "op": "ISZERO"
    },
    "1730": {
      "op": "PUSH2",
      "value": "0x6CA"
    },
    "1733": {
      "op": "JUMPI"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1736": {
      "op": "DUP1"
    },
    "1737": {
      "op": "REVERT"
    },
    "1738": {
      "op": "JUMPDEST"
    },
    "1739": {
      "op": "POP"
    },
    "1740": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1741": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 1,
      "value": "0x40"
    },
    "1743": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1744": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1745": {
      "op": "PUSH4",
      "value": "0x51CFF8D9"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1754": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1761": {
      "op": "SHL"
    },
    "1762": {
      "op": "SUB"
    },
    "1763": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1764": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1765": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "AND",
      "path": "9"
    },
    "1766": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1768": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1769": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "ADD",
      "path": "9"
    },
    "1770": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1771": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1772": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1773": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1774": {
      "fn": "Controller.yearn",
      "offset": [
        5401,
        5440
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1775": {
      "op": "POP"
    },
    "1776": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5478
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1777": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5478
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1778": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5478
      ],
      "op": "AND",
      "path": "9"
    },
    "1779": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5478
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1780": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5478
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x51CFF8D9"
    },
    "1785": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5478
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1786": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1788": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1789": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1790": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "ADD",
      "path": "9"
    },
    "1791": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1794": {
      "op": "SWAP3"
    },
    "1795": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1796": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1797": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1798": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1799": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1800": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "SUB",
      "path": "9"
    },
    "1801": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "ADD",
      "path": "9"
    },
    "1802": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1803": {
      "op": "DUP4"
    },
    "1804": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5478
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1805": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1806": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "1807": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1808": {
      "op": "DUP1"
    },
    "1809": {
      "op": "ISZERO"
    },
    "1810": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "1813": {
      "op": "JUMPI"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1816": {
      "op": "DUP1"
    },
    "1817": {
      "op": "REVERT"
    },
    "1818": {
      "op": "JUMPDEST"
    },
    "1819": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "POP",
      "path": "9"
    },
    "1820": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "GAS",
      "path": "9"
    },
    "1821": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "CALL",
      "path": "9"
    },
    "1822": {
      "fn": "Controller.yearn",
      "offset": [
        5450,
        5486
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1823": {
      "op": "DUP1"
    },
    "1824": {
      "op": "ISZERO"
    },
    "1825": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "1828": {
      "op": "JUMPI"
    },
    "1829": {
      "op": "RETURNDATASIZE"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1832": {
      "op": "DUP1"
    },
    "1833": {
      "op": "RETURNDATACOPY"
    },
    "1834": {
      "op": "RETURNDATASIZE"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1837": {
      "op": "REVERT"
    },
    "1838": {
      "op": "JUMPDEST"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1843": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1844": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1845": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1854": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1855": {
      "fn": "Controller.yearn",
      "offset": [
        5546,
        5550
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "1856": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1858": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1859": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "ADD",
      "path": "9"
    },
    "1860": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1861": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1862": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1863": {
      "fn": "Controller.yearn",
      "offset": [
        5496,
        5510
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1865": {
      "fn": "Controller.yearn",
      "offset": [
        5496,
        5510
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1866": {
      "op": "POP"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1873": {
      "op": "SHL"
    },
    "1874": {
      "op": "SUB"
    },
    "1875": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5537
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1876": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5537
      ],
      "op": "AND",
      "path": "9"
    },
    "1877": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5537
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1878": {
      "op": "POP"
    },
    "1879": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5537
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "1884": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5537
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1885": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1887": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1888": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1889": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "ADD",
      "path": "9"
    },
    "1890": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1891": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1893": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1894": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1895": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1896": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1897": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1898": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1899": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SUB",
      "path": "9"
    },
    "1900": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "ADD",
      "path": "9"
    },
    "1901": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1902": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5537
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1903": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1904": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "1905": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1906": {
      "op": "DUP1"
    },
    "1907": {
      "op": "ISZERO"
    },
    "1908": {
      "op": "PUSH2",
      "value": "0x77C"
    },
    "1911": {
      "op": "JUMPI"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1914": {
      "op": "DUP1"
    },
    "1915": {
      "op": "REVERT"
    },
    "1916": {
      "op": "JUMPDEST"
    },
    "1917": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "POP",
      "path": "9"
    },
    "1918": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "GAS",
      "path": "9"
    },
    "1919": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "1920": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1921": {
      "op": "DUP1"
    },
    "1922": {
      "op": "ISZERO"
    },
    "1923": {
      "op": "PUSH2",
      "value": "0x790"
    },
    "1926": {
      "op": "JUMPI"
    },
    "1927": {
      "op": "RETURNDATASIZE"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1930": {
      "op": "DUP1"
    },
    "1931": {
      "op": "RETURNDATACOPY"
    },
    "1932": {
      "op": "RETURNDATASIZE"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1935": {
      "op": "REVERT"
    },
    "1936": {
      "op": "JUMPDEST"
    },
    "1937": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "POP",
      "path": "9"
    },
    "1938": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "POP",
      "path": "9"
    },
    "1939": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "POP",
      "path": "9"
    },
    "1940": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "POP",
      "path": "9"
    },
    "1941": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1943": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1944": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1947": {
      "op": "DUP2"
    },
    "1948": {
      "op": "LT"
    },
    "1949": {
      "op": "ISZERO"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x7A6"
    },
    "1953": {
      "op": "JUMPI"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1956": {
      "op": "DUP1"
    },
    "1957": {
      "op": "REVERT"
    },
    "1958": {
      "op": "JUMPDEST"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1961": {
      "fn": "Controller.yearn",
      "offset": [
        5513,
        5552
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1962": {
      "op": "POP"
    },
    "1963": {
      "fn": "Controller.yearn",
      "offset": [
        5566,
        5582
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1964": {
      "fn": "Controller.yearn",
      "offset": [
        5566,
        5582
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1965": {
      "branch": 64,
      "fn": "Controller.yearn",
      "offset": [
        5566,
        5582
      ],
      "op": "GT",
      "path": "9"
    },
    "1966": {
      "fn": "Controller.yearn",
      "offset": [
        5562,
        6498
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1967": {
      "fn": "Controller.yearn",
      "offset": [
        5562,
        6498
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC38"
    },
    "1970": {
      "branch": 64,
      "fn": "Controller.yearn",
      "offset": [
        5562,
        6498
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1971": {
      "fn": "Controller.yearn",
      "offset": [
        5598,
        5613
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1973": {
      "fn": "Controller.yearn",
      "offset": [
        5616,
        5635
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7C4"
    },
    "1976": {
      "fn": "Controller.yearn",
      "offset": [
        5616,
        5622
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1977": {
      "fn": "Controller.yearn",
      "offset": [
        5627,
        5634
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1978": {
      "fn": "Controller.yearn",
      "offset": [
        5616,
        5635
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "1983": {
      "fn": "Controller.yearn",
      "offset": [
        5616,
        5626
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AAA"
    },
    "1986": {
      "fn": "Controller.yearn",
      "offset": [
        5616,
        5635
      ],
      "op": "AND",
      "path": "9"
    },
    "1987": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        5616,
        5635
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1988": {
      "fn": "Controller.yearn",
      "offset": [
        5616,
        5635
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1989": {
      "fn": "Controller.yearn",
      "offset": [
        5598,
        5635
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1990": {
      "fn": "Controller.yearn",
      "offset": [
        5598,
        5635
      ],
      "op": "POP",
      "path": "9"
    },
    "1991": {
      "fn": "Controller.yearn",
      "offset": [
        5649,
        5662
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1993": {
      "fn": "Controller.yearn",
      "offset": [
        5674,
        5683
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "SUB"
    },
    "2002": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5689
      ],
      "op": "AND",
      "path": "9"
    },
    "2003": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5689
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1F1FCD51"
    },
    "2008": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2010": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2011": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2012": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2017": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "AND",
      "path": "9"
    },
    "2018": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "2020": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "SHL",
      "path": "9"
    },
    "2021": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2022": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2023": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2025": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "ADD",
      "path": "9"
    },
    "2026": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2028": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2030": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2031": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2032": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2033": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "SUB",
      "path": "9"
    },
    "2034": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2035": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2036": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2037": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "2038": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2039": {
      "op": "DUP1"
    },
    "2040": {
      "op": "ISZERO"
    },
    "2041": {
      "op": "PUSH2",
      "value": "0x801"
    },
    "2044": {
      "op": "JUMPI"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2047": {
      "op": "DUP1"
    },
    "2048": {
      "op": "REVERT"
    },
    "2049": {
      "op": "JUMPDEST"
    },
    "2050": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "POP",
      "path": "9"
    },
    "2051": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "GAS",
      "path": "9"
    },
    "2052": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "2053": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2054": {
      "op": "DUP1"
    },
    "2055": {
      "op": "ISZERO"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x815"
    },
    "2059": {
      "op": "JUMPI"
    },
    "2060": {
      "op": "RETURNDATASIZE"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2063": {
      "op": "DUP1"
    },
    "2064": {
      "op": "RETURNDATACOPY"
    },
    "2065": {
      "op": "RETURNDATASIZE"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2068": {
      "op": "REVERT"
    },
    "2069": {
      "op": "JUMPDEST"
    },
    "2070": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "POP",
      "path": "9"
    },
    "2071": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "POP",
      "path": "9"
    },
    "2072": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "POP",
      "path": "9"
    },
    "2073": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "POP",
      "path": "9"
    },
    "2074": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2076": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2077": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2080": {
      "op": "DUP2"
    },
    "2081": {
      "op": "LT"
    },
    "2082": {
      "op": "ISZERO"
    },
    "2083": {
      "op": "PUSH2",
      "value": "0x82B"
    },
    "2086": {
      "op": "JUMPI"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2089": {
      "op": "DUP1"
    },
    "2090": {
      "op": "REVERT"
    },
    "2091": {
      "op": "JUMPDEST"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2094": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 2,
      "value": "0x40"
    },
    "2096": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2097": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2098": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2107": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2108": {
      "fn": "Controller.yearn",
      "offset": [
        5822,
        5826
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "2109": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2111": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2112": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "ADD",
      "path": "9"
    },
    "2113": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2114": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2115": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2116": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2117": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2118": {
      "op": "POP"
    },
    "2119": {
      "fn": "Controller.yearn",
      "offset": [
        5705,
        5735
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "2121": {
      "fn": "Controller.yearn",
      "offset": [
        5705,
        5735
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2122": {
      "fn": "Controller.yearn",
      "offset": [
        5749,
        5766
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2124": {
      "fn": "Controller.yearn",
      "offset": [
        5749,
        5766
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2131": {
      "op": "SHL"
    },
    "2132": {
      "op": "SUB"
    },
    "2133": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5813
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2134": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5813
      ],
      "op": "AND",
      "path": "9"
    },
    "2135": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5813
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2136": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5813
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "2141": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5813
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2142": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2144": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2145": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2146": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "ADD",
      "path": "9"
    },
    "2147": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2148": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2150": {
      "fn": "Controller.yearn",
      "offset": [
        5665,
        5691
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2151": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2152": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2153": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2154": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2155": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2156": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SUB",
      "path": "9"
    },
    "2157": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "ADD",
      "path": "9"
    },
    "2158": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2159": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5813
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2160": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2161": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "2162": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2163": {
      "op": "DUP1"
    },
    "2164": {
      "op": "ISZERO"
    },
    "2165": {
      "op": "PUSH2",
      "value": "0x87D"
    },
    "2168": {
      "op": "JUMPI"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2171": {
      "op": "DUP1"
    },
    "2172": {
      "op": "REVERT"
    },
    "2173": {
      "op": "JUMPDEST"
    },
    "2174": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "POP",
      "path": "9"
    },
    "2175": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "GAS",
      "path": "9"
    },
    "2176": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "2177": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2178": {
      "op": "DUP1"
    },
    "2179": {
      "op": "ISZERO"
    },
    "2180": {
      "op": "PUSH2",
      "value": "0x891"
    },
    "2183": {
      "op": "JUMPI"
    },
    "2184": {
      "op": "RETURNDATASIZE"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2187": {
      "op": "DUP1"
    },
    "2188": {
      "op": "RETURNDATACOPY"
    },
    "2189": {
      "op": "RETURNDATASIZE"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2192": {
      "op": "REVERT"
    },
    "2193": {
      "op": "JUMPDEST"
    },
    "2194": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "POP",
      "path": "9"
    },
    "2195": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "POP",
      "path": "9"
    },
    "2196": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "POP",
      "path": "9"
    },
    "2197": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "POP",
      "path": "9"
    },
    "2198": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2200": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2201": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2204": {
      "op": "DUP2"
    },
    "2205": {
      "op": "LT"
    },
    "2206": {
      "op": "ISZERO"
    },
    "2207": {
      "op": "PUSH2",
      "value": "0x8A7"
    },
    "2210": {
      "op": "JUMPI"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2213": {
      "op": "DUP1"
    },
    "2214": {
      "op": "REVERT"
    },
    "2215": {
      "op": "JUMPDEST"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2218": {
      "fn": "Controller.yearn",
      "offset": [
        5869,
        5877
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 3,
      "value": "0x2"
    },
    "2220": {
      "fn": "Controller.yearn",
      "offset": [
        5869,
        5877
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2221": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2222": {
      "fn": "Controller.yearn",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "2223": {
      "op": "POP"
    },
    "2224": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5881
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8CD"
    },
    "2227": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5881
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "op": "SUB"
    },
    "2236": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5868
      ],
      "op": "DUP11",
      "path": "9"
    },
    "2237": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5868
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2238": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5868
      ],
      "op": "AND",
      "path": "9"
    },
    "2239": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5868
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2240": {
      "fn": "Controller.yearn",
      "offset": [
        5869,
        5877
      ],
      "op": "AND",
      "path": "9"
    },
    "2241": {
      "fn": "Controller.yearn",
      "offset": [
        5869,
        5877
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2243": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5881
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2248": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5868
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AF5"
    },
    "2251": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5881
      ],
      "op": "AND",
      "path": "9"
    },
    "2252": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        5842,
        5881
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2253": {
      "fn": "Controller.yearn",
      "offset": [
        5842,
        5881
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2254": {
      "fn": "Controller.yearn",
      "offset": [
        5922,
        5930
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 4,
      "value": "0x2"
    },
    "2256": {
      "fn": "Controller.yearn",
      "offset": [
        5922,
        5930
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2257": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5940
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8ED"
    },
    "2260": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5940
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "op": "SUB"
    },
    "2269": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5921
      ],
      "op": "DUP11",
      "path": "9"
    },
    "2270": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5921
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2271": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5921
      ],
      "op": "AND",
      "path": "9"
    },
    "2272": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5921
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2273": {
      "fn": "Controller.yearn",
      "offset": [
        5922,
        5930
      ],
      "op": "AND",
      "path": "9"
    },
    "2274": {
      "fn": "Controller.yearn",
      "offset": [
        5932,
        5939
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2275": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5940
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2280": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5921
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AF5"
    },
    "2283": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5940
      ],
      "op": "AND",
      "path": "9"
    },
    "2284": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        5895,
        5940
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2285": {
      "fn": "Controller.yearn",
      "offset": [
        5895,
        5940
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2286": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 5,
      "value": "0x2"
    },
    "2288": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2289": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2291": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2292": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2293": {
      "op": "PUSH4",
      "value": "0x85E2C5B"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2300": {
      "op": "SHL"
    },
    "2301": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2302": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2309": {
      "op": "SHL"
    },
    "2310": {
      "op": "SUB"
    },
    "2311": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP12",
      "path": "9"
    },
    "2312": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2313": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "AND",
      "path": "9"
    },
    "2314": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2316": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2317": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2318": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2319": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2320": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2321": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "AND",
      "path": "9"
    },
    "2322": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2324": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2325": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2326": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2327": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2329": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2330": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2331": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP9",
      "path": "9"
    },
    "2332": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2333": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2334": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "2336": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2337": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2338": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP12",
      "path": "9"
    },
    "2339": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2340": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2341": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2343": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x84"
    },
    "2345": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2346": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2347": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2348": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2349": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2350": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2351": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2352": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2353": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "AND",
      "path": "9"
    },
    "2354": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2355": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6024
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x85E2C5B"
    },
    "2360": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6024
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2361": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA4"
    },
    "2363": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2364": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2365": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2366": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2367": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2368": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2369": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2370": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2371": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2372": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SUB",
      "path": "9"
    },
    "2373": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2374": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2375": {
      "fn": "Controller.yearn",
      "offset": [
        5997,
        6005
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2376": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2377": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "2378": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2379": {
      "op": "DUP1"
    },
    "2380": {
      "op": "ISZERO"
    },
    "2381": {
      "op": "PUSH2",
      "value": "0x955"
    },
    "2384": {
      "op": "JUMPI"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2387": {
      "op": "DUP1"
    },
    "2388": {
      "op": "REVERT"
    },
    "2389": {
      "op": "JUMPDEST"
    },
    "2390": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2391": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "GAS",
      "path": "9"
    },
    "2392": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "2393": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2394": {
      "op": "DUP1"
    },
    "2395": {
      "op": "ISZERO"
    },
    "2396": {
      "op": "PUSH2",
      "value": "0x969"
    },
    "2399": {
      "op": "JUMPI"
    },
    "2400": {
      "op": "RETURNDATASIZE"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2403": {
      "op": "DUP1"
    },
    "2404": {
      "op": "RETURNDATACOPY"
    },
    "2405": {
      "op": "RETURNDATASIZE"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2408": {
      "op": "REVERT"
    },
    "2409": {
      "op": "JUMPDEST"
    },
    "2410": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2411": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2412": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2413": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2414": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2416": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2417": {
      "op": "RETURNDATASIZE"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2420": {
      "op": "DUP3"
    },
    "2421": {
      "op": "RETURNDATACOPY"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2424": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2425": {
      "op": "SWAP1"
    },
    "2426": {
      "op": "DUP2"
    },
    "2427": {
      "op": "ADD"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2430": {
      "op": "NOT"
    },
    "2431": {
      "op": "AND"
    },
    "2432": {
      "op": "DUP3"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2436": {
      "op": "SWAP1"
    },
    "2437": {
      "op": "DUP2"
    },
    "2438": {
      "op": "MSTORE"
    },
    "2439": {
      "op": "DUP2"
    },
    "2440": {
      "op": "LT"
    },
    "2441": {
      "op": "ISZERO"
    },
    "2442": {
      "op": "PUSH2",
      "value": "0x992"
    },
    "2445": {
      "op": "JUMPI"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2448": {
      "op": "DUP1"
    },
    "2449": {
      "op": "REVERT"
    },
    "2450": {
      "op": "JUMPDEST"
    },
    "2451": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2452": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2453": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2455": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2456": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2457": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2458": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2459": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2461": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2462": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2463": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2464": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2465": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2466": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2467": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2468": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2469": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2470": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2471": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2472": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "2478": {
      "op": "DUP3"
    },
    "2479": {
      "op": "GT"
    },
    "2480": {
      "op": "ISZERO"
    },
    "2481": {
      "op": "PUSH2",
      "value": "0x9B9"
    },
    "2484": {
      "op": "JUMPI"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2487": {
      "op": "DUP1"
    },
    "2488": {
      "op": "REVERT"
    },
    "2489": {
      "op": "JUMPDEST"
    },
    "2490": {
      "op": "SWAP1"
    },
    "2491": {
      "op": "DUP4"
    },
    "2492": {
      "op": "ADD"
    },
    "2493": {
      "op": "SWAP1"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2496": {
      "op": "DUP3"
    },
    "2497": {
      "op": "ADD"
    },
    "2498": {
      "op": "DUP6"
    },
    "2499": {
      "op": "DUP2"
    },
    "2500": {
      "op": "GT"
    },
    "2501": {
      "op": "ISZERO"
    },
    "2502": {
      "op": "PUSH2",
      "value": "0x9CE"
    },
    "2505": {
      "op": "JUMPI"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2508": {
      "op": "DUP1"
    },
    "2509": {
      "op": "REVERT"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "op": "DUP3"
    },
    "2512": {
      "op": "MLOAD"
    },
    "2513": {
      "op": "DUP7"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2516": {
      "op": "DUP3"
    },
    "2517": {
      "op": "MUL"
    },
    "2518": {
      "op": "DUP4"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "op": "GT"
    },
    "2521": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "2527": {
      "op": "DUP3"
    },
    "2528": {
      "op": "GT"
    },
    "2529": {
      "op": "OR"
    },
    "2530": {
      "op": "ISZERO"
    },
    "2531": {
      "op": "PUSH2",
      "value": "0x9EB"
    },
    "2534": {
      "op": "JUMPI"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2537": {
      "op": "DUP1"
    },
    "2538": {
      "op": "REVERT"
    },
    "2539": {
      "op": "JUMPDEST"
    },
    "2540": {
      "op": "DUP3"
    },
    "2541": {
      "op": "MSTORE"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2544": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2547": {
      "op": "SWAP2"
    },
    "2548": {
      "op": "DUP3"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "op": "SWAP3"
    },
    "2551": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2552": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2553": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2554": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MUL",
      "path": "9"
    },
    "2555": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2556": {
      "op": "DUP4"
    },
    "2557": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2560": {
      "op": "JUMPDEST"
    },
    "2561": {
      "op": "DUP4"
    },
    "2562": {
      "op": "DUP2"
    },
    "2563": {
      "op": "LT"
    },
    "2564": {
      "op": "ISZERO"
    },
    "2565": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2568": {
      "op": "JUMPI"
    },
    "2569": {
      "op": "DUP2"
    },
    "2570": {
      "op": "DUP2"
    },
    "2571": {
      "op": "ADD"
    },
    "2572": {
      "op": "MLOAD"
    },
    "2573": {
      "op": "DUP4"
    },
    "2574": {
      "op": "DUP3"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "op": "MSTORE"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2579": {
      "op": "ADD"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0xA00"
    },
    "2583": {
      "op": "JUMP"
    },
    "2584": {
      "op": "JUMPDEST"
    },
    "2585": {
      "op": "POP"
    },
    "2586": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2587": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2588": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2589": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2590": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2591": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "ADD",
      "path": "9"
    },
    "2592": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2594": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2595": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2596": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2597": {
      "fn": "Controller.yearn",
      "offset": [
        5983,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2598": {
      "fn": "Controller.yearn",
      "offset": [
        5954,
        6058
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2599": {
      "fn": "Controller.yearn",
      "offset": [
        5954,
        6058
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2600": {
      "fn": "Controller.yearn",
      "offset": [
        5954,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2601": {
      "fn": "Controller.yearn",
      "offset": [
        5954,
        6058
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2602": {
      "fn": "Controller.yearn",
      "offset": [
        5954,
        6058
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2603": {
      "fn": "Controller.yearn",
      "offset": [
        5954,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2604": {
      "fn": "Controller.yearn",
      "offset": [
        5954,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2605": {
      "fn": "Controller.yearn",
      "offset": [
        5954,
        6058
      ],
      "op": "POP",
      "path": "9"
    },
    "2606": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 6,
      "value": "0x2"
    },
    "2608": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2610": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2611": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2612": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2613": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "2616": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "EXP",
      "path": "9"
    },
    "2617": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2618": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "DIV",
      "path": "9"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2625": {
      "op": "SHL"
    },
    "2626": {
      "op": "SUB"
    },
    "2627": {
      "fn": "Controller.yearn",
      "offset": [
        6086,
        6094
      ],
      "op": "AND",
      "path": "9"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "op": "SUB"
    },
    "2636": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6100
      ],
      "op": "AND",
      "path": "9"
    },
    "2637": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6100
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xE2A7515E"
    },
    "2642": {
      "fn": "Controller.yearn",
      "offset": [
        6101,
        6107
      ],
      "op": "DUP10",
      "path": "9"
    },
    "2643": {
      "fn": "Controller.yearn",
      "offset": [
        6109,
        6114
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2644": {
      "fn": "Controller.yearn",
      "offset": [
        6116,
        6123
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2645": {
      "fn": "Controller.yearn",
      "offset": [
        6125,
        6134
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2646": {
      "fn": "Controller.yearn",
      "offset": [
        6136,
        6149
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2647": {
      "fn": "Controller.yearn",
      "offset": [
        6151,
        6152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2649": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2651": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2652": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2653": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2658": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "AND",
      "path": "9"
    },
    "2659": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "2661": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SHL",
      "path": "9"
    },
    "2662": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2663": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2664": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2666": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2667": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2668": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2675": {
      "op": "SHL"
    },
    "2676": {
      "op": "SUB"
    },
    "2677": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "AND",
      "path": "9"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "op": "SUB"
    },
    "2686": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "AND",
      "path": "9"
    },
    "2687": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2688": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2689": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2691": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2692": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2699": {
      "op": "SHL"
    },
    "2700": {
      "op": "SUB"
    },
    "2701": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "AND",
      "path": "9"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2708": {
      "op": "SHL"
    },
    "2709": {
      "op": "SUB"
    },
    "2710": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "AND",
      "path": "9"
    },
    "2711": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2712": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2713": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2715": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2716": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2717": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2718": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2719": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2721": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2722": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2723": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2724": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2725": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2727": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2728": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2729": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2731": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2732": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2733": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2734": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2735": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2737": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2738": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2739": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2740": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SUB",
      "path": "9"
    },
    "2741": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2742": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2743": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2744": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2745": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2746": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2747": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2748": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2749": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2751": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2752": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2753": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2754": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2755": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2756": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2757": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2759": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2760": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2761": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2763": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MUL",
      "path": "9"
    },
    "2764": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2765": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2766": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2769": {
      "op": "JUMPDEST"
    },
    "2770": {
      "op": "DUP4"
    },
    "2771": {
      "op": "DUP2"
    },
    "2772": {
      "op": "LT"
    },
    "2773": {
      "op": "ISZERO"
    },
    "2774": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "2777": {
      "op": "JUMPI"
    },
    "2778": {
      "op": "DUP2"
    },
    "2779": {
      "op": "DUP2"
    },
    "2780": {
      "op": "ADD"
    },
    "2781": {
      "op": "MLOAD"
    },
    "2782": {
      "op": "DUP4"
    },
    "2783": {
      "op": "DUP3"
    },
    "2784": {
      "op": "ADD"
    },
    "2785": {
      "op": "MSTORE"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2788": {
      "op": "ADD"
    },
    "2789": {
      "op": "PUSH2",
      "value": "0xAD1"
    },
    "2792": {
      "op": "JUMP"
    },
    "2793": {
      "op": "JUMPDEST"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2796": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2797": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2798": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2799": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2800": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ADD",
      "path": "9"
    },
    "2801": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "2802": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2803": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2804": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2805": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2806": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2807": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2808": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2809": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2810": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2812": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2814": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2815": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2816": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2817": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SUB",
      "path": "9"
    },
    "2818": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2819": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2821": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2822": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2823": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "2824": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2825": {
      "op": "DUP1"
    },
    "2826": {
      "op": "ISZERO"
    },
    "2827": {
      "op": "PUSH2",
      "value": "0xB13"
    },
    "2830": {
      "op": "JUMPI"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2833": {
      "op": "DUP1"
    },
    "2834": {
      "op": "REVERT"
    },
    "2835": {
      "op": "JUMPDEST"
    },
    "2836": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2837": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "GAS",
      "path": "9"
    },
    "2838": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "CALL",
      "path": "9"
    },
    "2839": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2840": {
      "op": "DUP1"
    },
    "2841": {
      "op": "ISZERO"
    },
    "2842": {
      "op": "PUSH2",
      "value": "0xB27"
    },
    "2845": {
      "op": "JUMPI"
    },
    "2846": {
      "op": "RETURNDATASIZE"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2849": {
      "op": "DUP1"
    },
    "2850": {
      "op": "RETURNDATACOPY"
    },
    "2851": {
      "op": "RETURNDATASIZE"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2854": {
      "op": "REVERT"
    },
    "2855": {
      "op": "JUMPDEST"
    },
    "2856": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2857": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2858": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2859": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "POP",
      "path": "9"
    },
    "2860": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2862": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2863": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2866": {
      "op": "DUP2"
    },
    "2867": {
      "op": "LT"
    },
    "2868": {
      "op": "ISZERO"
    },
    "2869": {
      "op": "PUSH2",
      "value": "0xB3D"
    },
    "2872": {
      "op": "JUMPI"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2875": {
      "op": "DUP1"
    },
    "2876": {
      "op": "REVERT"
    },
    "2877": {
      "op": "JUMPDEST"
    },
    "2878": {
      "op": "POP"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 7,
      "value": "0x40"
    },
    "2882": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2883": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2884": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2891": {
      "op": "SHL"
    },
    "2892": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2893": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2894": {
      "fn": "Controller.yearn",
      "offset": [
        6208,
        6212
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "2895": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2897": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2898": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "ADD",
      "path": "9"
    },
    "2899": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2900": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2901": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "op": "SUB"
    },
    "2910": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6199
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2911": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6199
      ],
      "op": "AND",
      "path": "9"
    },
    "2912": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6199
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2913": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6199
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "2918": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6199
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2919": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2921": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2922": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2923": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "ADD",
      "path": "9"
    },
    "2924": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2925": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2927": {
      "fn": "Controller.yearn",
      "offset": [
        6072,
        6153
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2928": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2929": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2930": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2931": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2932": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "SUB",
      "path": "9"
    },
    "2933": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "ADD",
      "path": "9"
    },
    "2934": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2935": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6199
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2936": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2937": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "2938": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2939": {
      "op": "DUP1"
    },
    "2940": {
      "op": "ISZERO"
    },
    "2941": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "2944": {
      "op": "JUMPI"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2947": {
      "op": "DUP1"
    },
    "2948": {
      "op": "REVERT"
    },
    "2949": {
      "op": "JUMPDEST"
    },
    "2950": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "POP",
      "path": "9"
    },
    "2951": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "GAS",
      "path": "9"
    },
    "2952": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "2953": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2954": {
      "op": "DUP1"
    },
    "2955": {
      "op": "ISZERO"
    },
    "2956": {
      "op": "PUSH2",
      "value": "0xB99"
    },
    "2959": {
      "op": "JUMPI"
    },
    "2960": {
      "op": "RETURNDATASIZE"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2963": {
      "op": "DUP1"
    },
    "2964": {
      "op": "RETURNDATACOPY"
    },
    "2965": {
      "op": "RETURNDATASIZE"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2968": {
      "op": "REVERT"
    },
    "2969": {
      "op": "JUMPDEST"
    },
    "2970": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "POP",
      "path": "9"
    },
    "2971": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "POP",
      "path": "9"
    },
    "2972": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "POP",
      "path": "9"
    },
    "2973": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "POP",
      "path": "9"
    },
    "2974": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2976": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2977": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2980": {
      "op": "DUP2"
    },
    "2981": {
      "op": "LT"
    },
    "2982": {
      "op": "ISZERO"
    },
    "2983": {
      "op": "PUSH2",
      "value": "0xBAF"
    },
    "2986": {
      "op": "JUMPI"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2989": {
      "op": "DUP1"
    },
    "2990": {
      "op": "REVERT"
    },
    "2991": {
      "op": "JUMPDEST"
    },
    "2992": {
      "op": "POP"
    },
    "2993": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2994": {
      "fn": "Controller.yearn",
      "offset": [
        6176,
        6214
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2995": {
      "op": "POP"
    },
    "2996": {
      "fn": "Controller.yearn",
      "offset": [
        6232,
        6248
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2997": {
      "fn": "Controller.yearn",
      "offset": [
        6232,
        6248
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2998": {
      "branch": 65,
      "fn": "Controller.yearn",
      "offset": [
        6232,
        6248
      ],
      "op": "GT",
      "path": "9"
    },
    "2999": {
      "fn": "Controller.yearn",
      "offset": [
        6228,
        6488
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3000": {
      "fn": "Controller.yearn",
      "offset": [
        6228,
        6488
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC33"
    },
    "3003": {
      "branch": 65,
      "fn": "Controller.yearn",
      "offset": [
        6228,
        6488
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3004": {
      "fn": "Controller.yearn",
      "offset": [
        6278,
        6297
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 8,
      "value": "0xBCB"
    },
    "3007": {
      "fn": "Controller.yearn",
      "offset": [
        6278,
        6284
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3008": {
      "fn": "Controller.yearn",
      "offset": [
        6289,
        6296
      ],
      "op": "DUP8",
      "path": "9"
    },
    "3009": {
      "fn": "Controller.yearn",
      "offset": [
        6278,
        6297
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3014": {
      "fn": "Controller.yearn",
      "offset": [
        6278,
        6288
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AAA"
    },
    "3017": {
      "fn": "Controller.yearn",
      "offset": [
        6278,
        6297
      ],
      "op": "AND",
      "path": "9"
    },
    "3018": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        6278,
        6297
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3019": {
      "fn": "Controller.yearn",
      "offset": [
        6278,
        6297
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3020": {
      "fn": "Controller.yearn",
      "offset": [
        6268,
        6297
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3021": {
      "fn": "Controller.yearn",
      "offset": [
        6268,
        6297
      ],
      "op": "POP",
      "path": "9"
    },
    "3022": {
      "fn": "Controller.yearn",
      "offset": [
        6315,
        6330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3024": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6360
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF6"
    },
    "3027": {
      "offset": [
        985,
        990
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2710"
    },
    "3030": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6351
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBEA"
    },
    "3033": {
      "fn": "Controller.yearn",
      "offset": [
        6345,
        6350
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x8"
    },
    "3035": {
      "fn": "Controller.yearn",
      "offset": [
        6345,
        6350
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3036": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6340
      ],
      "op": "DUP9",
      "path": "9"
    },
    "3037": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6344
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C08"
    },
    "3040": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6344
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3041": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6351
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3042": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6351
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3043": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6351
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3048": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6351
      ],
      "op": "AND",
      "path": "9"
    },
    "3049": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        6333,
        6351
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3050": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6351
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3051": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6355
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3052": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6360
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3057": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6355
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C61"
    },
    "3060": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6360
      ],
      "op": "AND",
      "path": "9"
    },
    "3061": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        6333,
        6360
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3062": {
      "fn": "Controller.yearn",
      "offset": [
        6333,
        6360
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3063": {
      "fn": "Controller.yearn",
      "offset": [
        6315,
        6360
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3064": {
      "op": "POP"
    },
    "3065": {
      "fn": "Controller.yearn",
      "offset": [
        6378,
        6411
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 9,
      "value": "0xC11"
    },
    "3068": {
      "fn": "Controller.yearn",
      "offset": [
        6383,
        6388
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3069": {
      "fn": "Controller.yearn",
      "offset": [
        6390,
        6410
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC0C"
    },
    "3072": {
      "fn": "Controller.yearn",
      "offset": [
        6390,
        6397
      ],
      "op": "DUP8",
      "path": "9"
    },
    "3073": {
      "fn": "Controller.yearn",
      "offset": [
        6315,
        6360
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3074": {
      "fn": "Controller.yearn",
      "offset": [
        6390,
        6410
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3079": {
      "fn": "Controller.yearn",
      "offset": [
        6390,
        6401
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AAA"
    },
    "3082": {
      "fn": "Controller.yearn",
      "offset": [
        6390,
        6410
      ],
      "op": "AND",
      "path": "9"
    },
    "3083": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        6390,
        6410
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3084": {
      "fn": "Controller.yearn",
      "offset": [
        6390,
        6410
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3085": {
      "fn": "Controller.yearn",
      "offset": [
        6378,
        6382
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x147A"
    },
    "3088": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        6378,
        6411
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3089": {
      "fn": "Controller.yearn",
      "offset": [
        6378,
        6411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3090": {
      "fn": "Controller.yearn",
      "offset": [
        6456,
        6463
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 10,
      "value": "0x3"
    },
    "3092": {
      "fn": "Controller.yearn",
      "offset": [
        6456,
        6463
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3093": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6473
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC31"
    },
    "3096": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6473
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "op": "SUB"
    },
    "3105": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6455
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3106": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6455
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3107": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6455
      ],
      "op": "AND",
      "path": "9"
    },
    "3108": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6455
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3109": {
      "fn": "Controller.yearn",
      "offset": [
        6456,
        6463
      ],
      "op": "AND",
      "path": "9"
    },
    "3110": {
      "fn": "Controller.yearn",
      "offset": [
        6465,
        6472
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3111": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6473
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3116": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6455
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CA3"
    },
    "3119": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6473
      ],
      "op": "AND",
      "path": "9"
    },
    "3120": {
      "fn": "Controller.yearn",
      "jump": "i",
      "offset": [
        6429,
        6473
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3121": {
      "fn": "Controller.yearn",
      "offset": [
        6429,
        6473
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3122": {
      "fn": "Controller.yearn",
      "offset": [
        6228,
        6488
      ],
      "op": "POP",
      "path": "9"
    },
    "3123": {
      "fn": "Controller.yearn",
      "offset": [
        6228,
        6488
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3124": {
      "fn": "Controller.yearn",
      "offset": [
        5562,
        6498
      ],
      "op": "POP",
      "path": "9"
    },
    "3125": {
      "fn": "Controller.yearn",
      "offset": [
        5562,
        6498
      ],
      "op": "POP",
      "path": "9"
    },
    "3126": {
      "fn": "Controller.yearn",
      "offset": [
        5562,
        6498
      ],
      "op": "POP",
      "path": "9"
    },
    "3127": {
      "fn": "Controller.yearn",
      "offset": [
        5562,
        6498
      ],
      "op": "POP",
      "path": "9"
    },
    "3128": {
      "fn": "Controller.yearn",
      "offset": [
        5562,
        6498
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3129": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "POP",
      "path": "9"
    },
    "3130": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "POP",
      "path": "9"
    },
    "3131": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "POP",
      "path": "9"
    },
    "3132": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "POP",
      "path": "9"
    },
    "3133": {
      "fn": "Controller.yearn",
      "offset": [
        5085,
        6504
      ],
      "op": "POP",
      "path": "9"
    },
    "3134": {
      "fn": "Controller.yearn",
      "jump": "o",
      "offset": [
        5085,
        6504
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3135": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3136": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4502,
        4512
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 11,
      "value": "0x1"
    },
    "3138": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4502,
        4512
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "op": "SUB"
    },
    "3147": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4502,
        4512
      ],
      "op": "AND",
      "path": "9"
    },
    "3148": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4488,
        4498
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3149": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4488,
        4512
      ],
      "op": "EQ",
      "path": "9"
    },
    "3150": {
      "branch": 66,
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4488,
        4512
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3151": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4488,
        4540
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC62"
    },
    "3154": {
      "branch": 66,
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3155": {
      "op": "POP"
    },
    "3156": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4530,
        4540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3158": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4530,
        4540
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "op": "SUB"
    },
    "3167": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4530,
        4540
      ],
      "op": "AND",
      "path": "9"
    },
    "3168": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4516,
        4526
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3169": {
      "branch": 67,
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4516,
        4540
      ],
      "op": "EQ",
      "path": "9"
    },
    "3170": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4488,
        4540
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3171": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCA1"
    },
    "3174": {
      "branch": 67,
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3175": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3177": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3178": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3185": {
      "op": "SHL"
    },
    "3186": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3187": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3188": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3190": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3192": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3193": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "ADD",
      "path": "9"
    },
    "3194": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3195": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "3197": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3199": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3200": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "ADD",
      "path": "9"
    },
    "3201": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3202": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3216": {
      "op": "SHL"
    },
    "3217": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "3219": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3220": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "ADD",
      "path": "9"
    },
    "3221": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3222": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3223": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3224": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3225": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3226": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3227": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "SUB",
      "path": "9"
    },
    "3228": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3230": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "ADD",
      "path": "9"
    },
    "3231": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3232": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3233": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4480,
        4556
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3234": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4575,
        4584
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 12
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "op": "SUB"
    },
    "3243": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4594
      ],
      "op": "AND",
      "path": "9"
    },
    "3244": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4594
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x51CFF8D9"
    },
    "3249": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3250": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3252": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3253": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3254": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3259": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "AND",
      "path": "9"
    },
    "3260": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "3262": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "SHL",
      "path": "9"
    },
    "3263": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3264": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3265": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3267": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "ADD",
      "path": "9"
    },
    "3268": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3269": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3276": {
      "op": "SHL"
    },
    "3277": {
      "op": "SUB"
    },
    "3278": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "AND",
      "path": "9"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "op": "SUB"
    },
    "3287": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "AND",
      "path": "9"
    },
    "3288": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3289": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3290": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3292": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "ADD",
      "path": "9"
    },
    "3293": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3294": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "POP",
      "path": "9"
    },
    "3295": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "POP",
      "path": "9"
    },
    "3296": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3298": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3300": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3301": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3302": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3303": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "SUB",
      "path": "9"
    },
    "3304": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3305": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3307": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP8",
      "path": "9"
    },
    "3308": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3309": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "3310": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3311": {
      "op": "DUP1"
    },
    "3312": {
      "op": "ISZERO"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0xCF9"
    },
    "3316": {
      "op": "JUMPI"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "REVERT"
    },
    "3321": {
      "op": "JUMPDEST"
    },
    "3322": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "POP",
      "path": "9"
    },
    "3323": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "GAS",
      "path": "9"
    },
    "3324": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "CALL",
      "path": "9"
    },
    "3325": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3326": {
      "op": "DUP1"
    },
    "3327": {
      "op": "ISZERO"
    },
    "3328": {
      "op": "PUSH2",
      "value": "0xD0D"
    },
    "3331": {
      "op": "JUMPI"
    },
    "3332": {
      "op": "RETURNDATASIZE"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3335": {
      "op": "DUP1"
    },
    "3336": {
      "op": "RETURNDATACOPY"
    },
    "3337": {
      "op": "RETURNDATASIZE"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3340": {
      "op": "REVERT"
    },
    "3341": {
      "op": "JUMPDEST"
    },
    "3342": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "POP",
      "path": "9"
    },
    "3343": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "POP",
      "path": "9"
    },
    "3344": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "POP",
      "path": "9"
    },
    "3345": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4566,
        4602
      ],
      "op": "POP",
      "path": "9"
    },
    "3346": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "POP",
      "path": "9"
    },
    "3347": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        4391,
        4609
      ],
      "op": "POP",
      "path": "9"
    },
    "3348": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "o",
      "offset": [
        4391,
        4609
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3349": {
      "offset": [
        587,
        612
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3350": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3352": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "op": "SUB"
    },
    "3361": {
      "offset": [
        587,
        612
      ],
      "op": "AND",
      "path": "9"
    },
    "3362": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        587,
        612
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3363": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "o",
      "offset": [
        587,
        612
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3364": {
      "offset": [
        723,
        768
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3365": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "3367": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3369": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3370": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3372": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3373": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3374": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3375": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3377": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3378": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3379": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3386": {
      "op": "SHL"
    },
    "3387": {
      "op": "SUB"
    },
    "3388": {
      "offset": [
        723,
        768
      ],
      "op": "AND",
      "path": "9"
    },
    "3389": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "offset": [
        723,
        768
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3390": {
      "fn": "Controller.inCaseStrategyTokenGetStuck",
      "jump": "o",
      "offset": [
        723,
        768
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3391": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2390,
        2576
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3392": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2488,
        2498
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 13,
      "value": "0x0"
    },
    "3394": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2488,
        2498
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3401": {
      "op": "SHL"
    },
    "3402": {
      "op": "SUB"
    },
    "3403": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2488,
        2498
      ],
      "op": "AND",
      "path": "9"
    },
    "3404": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2474,
        2484
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3405": {
      "branch": 68,
      "fn": "Controller.revokeStrategy",
      "offset": [
        2474,
        2498
      ],
      "op": "EQ",
      "path": "9"
    },
    "3406": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD8C"
    },
    "3409": {
      "branch": 68,
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3410": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3412": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3413": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3414": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3422": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3423": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3425": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3427": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3428": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "ADD",
      "path": "9"
    },
    "3429": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3430": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "3432": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3434": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3435": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "ADD",
      "path": "9"
    },
    "3436": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3437": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3451": {
      "op": "SHL"
    },
    "3452": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "3454": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3455": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "ADD",
      "path": "9"
    },
    "3456": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3457": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3458": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3459": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3460": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3461": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3462": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "SUB",
      "path": "9"
    },
    "3463": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3465": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "ADD",
      "path": "9"
    },
    "3466": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3467": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3468": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2466,
        2514
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "op": "SUB"
    },
    "3477": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 14
    },
    "3478": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3479": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "AND",
      "path": "9"
    },
    "3480": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2564,
        2569
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3482": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3483": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3484": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3485": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2542
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "3487": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3489": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3490": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3491": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3492": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3494": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3495": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3496": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2550
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3497": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3498": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3499": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "3500": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "AND",
      "path": "9"
    },
    "3501": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3502": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3503": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3504": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3505": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3506": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3507": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2561
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3508": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2569
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3509": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2569
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3512": {
      "op": "NOT"
    },
    "3513": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2569
      ],
      "op": "AND",
      "path": "9"
    },
    "3514": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2569
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3515": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        2524,
        2569
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3516": {
      "fn": "Controller.revokeStrategy",
      "jump": "o",
      "offset": [
        2390,
        2576
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3517": {
      "offset": [
        556,
        581
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3518": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        556,
        581
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3520": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        556,
        581
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3527": {
      "op": "SHL"
    },
    "3528": {
      "op": "SUB"
    },
    "3529": {
      "offset": [
        556,
        581
      ],
      "op": "AND",
      "path": "9"
    },
    "3530": {
      "fn": "Controller.revokeStrategy",
      "offset": [
        556,
        581
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3531": {
      "fn": "Controller.revokeStrategy",
      "jump": "o",
      "offset": [
        556,
        581
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3532": {
      "fn": "Controller.setSplit",
      "offset": [
        1513,
        1643
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3533": {
      "fn": "Controller.setSplit",
      "offset": [
        1586,
        1596
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 15,
      "value": "0x0"
    },
    "3535": {
      "fn": "Controller.setSplit",
      "offset": [
        1586,
        1596
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3542": {
      "op": "SHL"
    },
    "3543": {
      "op": "SUB"
    },
    "3544": {
      "fn": "Controller.setSplit",
      "offset": [
        1586,
        1596
      ],
      "op": "AND",
      "path": "9"
    },
    "3545": {
      "fn": "Controller.setSplit",
      "offset": [
        1572,
        1582
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3546": {
      "branch": 69,
      "fn": "Controller.setSplit",
      "offset": [
        1572,
        1596
      ],
      "op": "EQ",
      "path": "9"
    },
    "3547": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE19"
    },
    "3550": {
      "branch": 69,
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3551": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3553": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3554": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3561": {
      "op": "SHL"
    },
    "3562": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3563": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3564": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3566": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3568": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3569": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "ADD",
      "path": "9"
    },
    "3570": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3571": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "3573": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3575": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3576": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "ADD",
      "path": "9"
    },
    "3577": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3578": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3592": {
      "op": "SHL"
    },
    "3593": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "3595": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3596": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "ADD",
      "path": "9"
    },
    "3597": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3598": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3599": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3600": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3601": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3602": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3603": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "SUB",
      "path": "9"
    },
    "3604": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3606": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "ADD",
      "path": "9"
    },
    "3607": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3608": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "REVERT",
      "path": "9"
    },
    "3609": {
      "fn": "Controller.setSplit",
      "offset": [
        1564,
        1612
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3610": {
      "fn": "Controller.setSplit",
      "offset": [
        1622,
        1627
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 16,
      "value": "0x8"
    },
    "3612": {
      "fn": "Controller.setSplit",
      "offset": [
        1622,
        1636
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3613": {
      "fn": "Controller.setSplit",
      "jump": "o",
      "offset": [
        1513,
        1643
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3614": {
      "offset": [
        955,
        990
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3615": {
      "offset": [
        985,
        990
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2710"
    },
    "3618": {
      "offset": [
        955,
        990
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3619": {
      "fn": "Controller.setSplit",
      "jump": "o",
      "offset": [
        955,
        990
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3620": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3621": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4743,
        4759
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3623": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4771,
        4787
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3624": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4797,
        4803
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "op": "SUB"
    },
    "3633": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4814
      ],
      "op": "AND",
      "path": "9"
    },
    "3634": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4814
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "3639": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4815,
        4824
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3640": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3642": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3643": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3644": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3649": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "AND",
      "path": "9"
    },
    "3650": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "3652": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "SHL",
      "path": "9"
    },
    "3653": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3654": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3655": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3657": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "ADD",
      "path": "9"
    },
    "3658": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3659": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "op": "SUB"
    },
    "3668": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "AND",
      "path": "9"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3675": {
      "op": "SHL"
    },
    "3676": {
      "op": "SUB"
    },
    "3677": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "AND",
      "path": "9"
    },
    "3678": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3679": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3680": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3682": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "ADD",
      "path": "9"
    },
    "3683": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3684": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "POP",
      "path": "9"
    },
    "3685": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "POP",
      "path": "9"
    },
    "3686": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3688": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3690": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3691": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3692": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3693": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "SUB",
      "path": "9"
    },
    "3694": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3695": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3696": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3697": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "3698": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3699": {
      "op": "DUP1"
    },
    "3700": {
      "op": "ISZERO"
    },
    "3701": {
      "op": "PUSH2",
      "value": "0xE7D"
    },
    "3704": {
      "op": "JUMPI"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3707": {
      "op": "DUP1"
    },
    "3708": {
      "op": "REVERT"
    },
    "3709": {
      "op": "JUMPDEST"
    },
    "3710": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "POP",
      "path": "9"
    },
    "3711": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "GAS",
      "path": "9"
    },
    "3712": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "3713": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3714": {
      "op": "DUP1"
    },
    "3715": {
      "op": "ISZERO"
    },
    "3716": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3719": {
      "op": "JUMPI"
    },
    "3720": {
      "op": "RETURNDATASIZE"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3723": {
      "op": "DUP1"
    },
    "3724": {
      "op": "RETURNDATACOPY"
    },
    "3725": {
      "op": "RETURNDATASIZE"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3728": {
      "op": "REVERT"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "POP",
      "path": "9"
    },
    "3731": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "POP",
      "path": "9"
    },
    "3732": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "POP",
      "path": "9"
    },
    "3733": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "POP",
      "path": "9"
    },
    "3734": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3736": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3737": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3740": {
      "op": "DUP2"
    },
    "3741": {
      "op": "LT"
    },
    "3742": {
      "op": "ISZERO"
    },
    "3743": {
      "op": "PUSH2",
      "value": "0xEA7"
    },
    "3746": {
      "op": "JUMPI"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3749": {
      "op": "DUP1"
    },
    "3750": {
      "op": "REVERT"
    },
    "3751": {
      "op": "JUMPDEST"
    },
    "3752": {
      "op": "POP"
    },
    "3753": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3754": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3756": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3757": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3758": {
      "op": "PUSH4",
      "value": "0x1F1FCD51"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3767": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3768": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3769": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3770": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3771": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3772": {
      "op": "POP"
    },
    "3773": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4835,
        4848
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3775": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4835,
        4848
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3782": {
      "op": "SHL"
    },
    "3783": {
      "op": "SUB"
    },
    "3784": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4875
      ],
      "op": "DUP9",
      "path": "9"
    },
    "3785": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4875
      ],
      "op": "AND",
      "path": "9"
    },
    "3786": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4875
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3787": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4875
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1F1FCD51"
    },
    "3792": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4875
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3793": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3795": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3796": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3797": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "ADD",
      "path": "9"
    },
    "3798": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3799": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3801": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4790,
        4825
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3802": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3803": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3804": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3805": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3806": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "SUB",
      "path": "9"
    },
    "3807": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "ADD",
      "path": "9"
    },
    "3808": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3809": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4875
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3810": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3811": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "3812": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3813": {
      "op": "DUP1"
    },
    "3814": {
      "op": "ISZERO"
    },
    "3815": {
      "op": "PUSH2",
      "value": "0xEEF"
    },
    "3818": {
      "op": "JUMPI"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3821": {
      "op": "DUP1"
    },
    "3822": {
      "op": "REVERT"
    },
    "3823": {
      "op": "JUMPDEST"
    },
    "3824": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "POP",
      "path": "9"
    },
    "3825": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "GAS",
      "path": "9"
    },
    "3826": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "3827": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3828": {
      "op": "DUP1"
    },
    "3829": {
      "op": "ISZERO"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xF03"
    },
    "3833": {
      "op": "JUMPI"
    },
    "3834": {
      "op": "RETURNDATASIZE"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3837": {
      "op": "DUP1"
    },
    "3838": {
      "op": "RETURNDATACOPY"
    },
    "3839": {
      "op": "RETURNDATASIZE"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3842": {
      "op": "REVERT"
    },
    "3843": {
      "op": "JUMPDEST"
    },
    "3844": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "POP",
      "path": "9"
    },
    "3845": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "POP",
      "path": "9"
    },
    "3846": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "POP",
      "path": "9"
    },
    "3847": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "POP",
      "path": "9"
    },
    "3848": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3850": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3851": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3854": {
      "op": "DUP2"
    },
    "3855": {
      "op": "LT"
    },
    "3856": {
      "op": "ISZERO"
    },
    "3857": {
      "op": "PUSH2",
      "value": "0xF19"
    },
    "3860": {
      "op": "JUMPI"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3863": {
      "op": "DUP1"
    },
    "3864": {
      "op": "REVERT"
    },
    "3865": {
      "op": "JUMPDEST"
    },
    "3866": {
      "op": "POP"
    },
    "3867": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3868": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 17,
      "value": "0x2"
    },
    "3870": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3871": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3873": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3874": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3875": {
      "op": "PUSH4",
      "value": "0x85E2C5B"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3882": {
      "op": "SHL"
    },
    "3883": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3884": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3891": {
      "op": "SHL"
    },
    "3892": {
      "op": "SUB"
    },
    "3893": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP10",
      "path": "9"
    },
    "3894": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3895": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "AND",
      "path": "9"
    },
    "3896": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3898": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3899": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "3900": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3901": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3902": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP6",
      "path": "9"
    },
    "3903": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "AND",
      "path": "9"
    },
    "3904": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "3906": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3907": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "3908": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3909": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "3911": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3912": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "3913": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP8",
      "path": "9"
    },
    "3914": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3915": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3916": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "3918": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3919": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "3920": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP10",
      "path": "9"
    },
    "3921": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3922": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3923": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3925": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x84"
    },
    "3927": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3928": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "3929": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3930": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3931": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3932": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3933": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3934": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "3935": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4851,
        4877
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "3936": {
      "op": "POP"
    },
    "3937": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3938": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3939": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "AND",
      "path": "9"
    },
    "3940": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3941": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4943
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x85E2C5B"
    },
    "3946": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4943
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3947": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA4"
    },
    "3949": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3950": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3951": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "3952": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "3953": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3954": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3955": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3956": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3957": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SUB",
      "path": "9"
    },
    "3958": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "3959": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3960": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4916,
        4924
      ],
      "op": "DUP7",
      "path": "9"
    },
    "3961": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3962": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "3963": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3964": {
      "op": "DUP1"
    },
    "3965": {
      "op": "ISZERO"
    },
    "3966": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "3969": {
      "op": "JUMPI"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3972": {
      "op": "DUP1"
    },
    "3973": {
      "op": "REVERT"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "3976": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "GAS",
      "path": "9"
    },
    "3977": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "3978": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3979": {
      "op": "DUP1"
    },
    "3980": {
      "op": "ISZERO"
    },
    "3981": {
      "op": "PUSH2",
      "value": "0xF9A"
    },
    "3984": {
      "op": "JUMPI"
    },
    "3985": {
      "op": "RETURNDATASIZE"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3988": {
      "op": "DUP1"
    },
    "3989": {
      "op": "RETURNDATACOPY"
    },
    "3990": {
      "op": "RETURNDATASIZE"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3993": {
      "op": "REVERT"
    },
    "3994": {
      "op": "JUMPDEST"
    },
    "3995": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "3996": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "3997": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "3998": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "3999": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4001": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4002": {
      "op": "RETURNDATASIZE"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4005": {
      "op": "DUP3"
    },
    "4006": {
      "op": "RETURNDATACOPY"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4009": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "4010": {
      "op": "SWAP1"
    },
    "4011": {
      "op": "DUP2"
    },
    "4012": {
      "op": "ADD"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4015": {
      "op": "NOT"
    },
    "4016": {
      "op": "AND"
    },
    "4017": {
      "op": "DUP3"
    },
    "4018": {
      "op": "ADD"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4021": {
      "op": "SWAP1"
    },
    "4022": {
      "op": "DUP2"
    },
    "4023": {
      "op": "MSTORE"
    },
    "4024": {
      "op": "DUP2"
    },
    "4025": {
      "op": "LT"
    },
    "4026": {
      "op": "ISZERO"
    },
    "4027": {
      "op": "PUSH2",
      "value": "0xFC3"
    },
    "4030": {
      "op": "JUMPI"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4033": {
      "op": "DUP1"
    },
    "4034": {
      "op": "REVERT"
    },
    "4035": {
      "op": "JUMPDEST"
    },
    "4036": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4037": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4038": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4040": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4041": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "4042": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4043": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4044": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4046": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4047": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4048": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4049": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4050": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4051": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4052": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "4053": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4054": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4055": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4056": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP5",
      "path": "9"
    },
    "4057": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4063": {
      "op": "DUP3"
    },
    "4064": {
      "op": "GT"
    },
    "4065": {
      "op": "ISZERO"
    },
    "4066": {
      "op": "PUSH2",
      "value": "0xFEA"
    },
    "4069": {
      "op": "JUMPI"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4072": {
      "op": "DUP1"
    },
    "4073": {
      "op": "REVERT"
    },
    "4074": {
      "op": "JUMPDEST"
    },
    "4075": {
      "op": "SWAP1"
    },
    "4076": {
      "op": "DUP4"
    },
    "4077": {
      "op": "ADD"
    },
    "4078": {
      "op": "SWAP1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "ADD"
    },
    "4083": {
      "op": "DUP6"
    },
    "4084": {
      "op": "DUP2"
    },
    "4085": {
      "op": "GT"
    },
    "4086": {
      "op": "ISZERO"
    },
    "4087": {
      "op": "PUSH2",
      "value": "0xFFF"
    },
    "4090": {
      "op": "JUMPI"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4093": {
      "op": "DUP1"
    },
    "4094": {
      "op": "REVERT"
    },
    "4095": {
      "op": "JUMPDEST"
    },
    "4096": {
      "op": "DUP3"
    },
    "4097": {
      "op": "MLOAD"
    },
    "4098": {
      "op": "DUP7"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4101": {
      "op": "DUP3"
    },
    "4102": {
      "op": "MUL"
    },
    "4103": {
      "op": "DUP4"
    },
    "4104": {
      "op": "ADD"
    },
    "4105": {
      "op": "GT"
    },
    "4106": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4112": {
      "op": "DUP3"
    },
    "4113": {
      "op": "GT"
    },
    "4114": {
      "op": "OR"
    },
    "4115": {
      "op": "ISZERO"
    },
    "4116": {
      "op": "PUSH2",
      "value": "0x101C"
    },
    "4119": {
      "op": "JUMPI"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4122": {
      "op": "DUP1"
    },
    "4123": {
      "op": "REVERT"
    },
    "4124": {
      "op": "JUMPDEST"
    },
    "4125": {
      "op": "DUP3"
    },
    "4126": {
      "op": "MSTORE"
    },
    "4127": {
      "op": "POP"
    },
    "4128": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4129": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4132": {
      "op": "SWAP2"
    },
    "4133": {
      "op": "DUP3"
    },
    "4134": {
      "op": "ADD"
    },
    "4135": {
      "op": "SWAP3"
    },
    "4136": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4137": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "4138": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4139": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MUL",
      "path": "9"
    },
    "4140": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4141": {
      "op": "DUP4"
    },
    "4142": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4145": {
      "op": "JUMPDEST"
    },
    "4146": {
      "op": "DUP4"
    },
    "4147": {
      "op": "DUP2"
    },
    "4148": {
      "op": "LT"
    },
    "4149": {
      "op": "ISZERO"
    },
    "4150": {
      "op": "PUSH2",
      "value": "0x1049"
    },
    "4153": {
      "op": "JUMPI"
    },
    "4154": {
      "op": "DUP2"
    },
    "4155": {
      "op": "DUP2"
    },
    "4156": {
      "op": "ADD"
    },
    "4157": {
      "op": "MLOAD"
    },
    "4158": {
      "op": "DUP4"
    },
    "4159": {
      "op": "DUP3"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "MSTORE"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4164": {
      "op": "ADD"
    },
    "4165": {
      "op": "PUSH2",
      "value": "0x1031"
    },
    "4168": {
      "op": "JUMP"
    },
    "4169": {
      "op": "JUMPDEST"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4172": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4173": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4174": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4175": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4176": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "ADD",
      "path": "9"
    },
    "4177": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4179": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4180": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4181": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4182": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4902,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4183": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4887,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4184": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4887,
        4978
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4185": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4887,
        4978
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4186": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4887,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4187": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4887,
        4978
      ],
      "op": "POP",
      "path": "9"
    },
    "4188": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "POP",
      "path": "9"
    },
    "4189": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "POP",
      "path": "9"
    },
    "4190": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4191": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4192": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "POP",
      "path": "9"
    },
    "4193": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "POP",
      "path": "9"
    },
    "4194": {
      "fn": "Controller.getExpectedReturn",
      "offset": [
        4615,
        4985
      ],
      "op": "POP",
      "path": "9"
    },
    "4195": {
      "fn": "Controller.getExpectedReturn",
      "jump": "o",
      "offset": [
        4615,
        4985
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4196": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4203": {
      "op": "SHL"
    },
    "4204": {
      "op": "SUB"
    },
    "4205": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 18
    },
    "4206": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4207": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "AND",
      "path": "9"
    },
    "4208": {
      "fn": "Controller.balanceOf",
      "offset": [
        3890,
        3897
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4210": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4211": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4212": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4213": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3935
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "4215": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4217": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4218": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4219": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4220": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4222": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4223": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4224": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4225": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4226": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4227": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4228": {
      "op": "PUSH4",
      "value": "0x722713F7"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4235": {
      "op": "SHL"
    },
    "4236": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4237": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4238": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4239": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4240": {
      "fn": "Controller.balanceOf",
      "offset": [
        3890,
        3897
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4241": {
      "fn": "Controller.balanceOf",
      "offset": [
        3890,
        3897
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4242": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "AND",
      "path": "9"
    },
    "4243": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4244": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3954
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x722713F7"
    },
    "4249": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3954
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4250": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4252": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4253": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "DUP5",
      "path": "9"
    },
    "4254": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "ADD",
      "path": "9"
    },
    "4255": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4256": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4257": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4258": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4259": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4260": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4261": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "SUB",
      "path": "9"
    },
    "4262": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "ADD",
      "path": "9"
    },
    "4263": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4264": {
      "fn": "Controller.balanceOf",
      "offset": [
        3925,
        3943
      ],
      "op": "DUP7",
      "path": "9"
    },
    "4265": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4266": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "4267": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4268": {
      "op": "DUP1"
    },
    "4269": {
      "op": "ISZERO"
    },
    "4270": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4273": {
      "op": "JUMPI"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4276": {
      "op": "DUP1"
    },
    "4277": {
      "op": "REVERT"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "POP",
      "path": "9"
    },
    "4280": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "GAS",
      "path": "9"
    },
    "4281": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "4282": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4283": {
      "op": "DUP1"
    },
    "4284": {
      "op": "ISZERO"
    },
    "4285": {
      "op": "PUSH2",
      "value": "0x10CA"
    },
    "4288": {
      "op": "JUMPI"
    },
    "4289": {
      "op": "RETURNDATASIZE"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4292": {
      "op": "DUP1"
    },
    "4293": {
      "op": "RETURNDATACOPY"
    },
    "4294": {
      "op": "RETURNDATASIZE"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4297": {
      "op": "REVERT"
    },
    "4298": {
      "op": "JUMPDEST"
    },
    "4299": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "POP",
      "path": "9"
    },
    "4300": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "POP",
      "path": "9"
    },
    "4301": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "POP",
      "path": "9"
    },
    "4302": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "POP",
      "path": "9"
    },
    "4303": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4305": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4306": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4309": {
      "op": "DUP2"
    },
    "4310": {
      "op": "LT"
    },
    "4311": {
      "op": "ISZERO"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0x10E0"
    },
    "4315": {
      "op": "JUMPI"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4318": {
      "op": "DUP1"
    },
    "4319": {
      "op": "REVERT"
    },
    "4320": {
      "op": "JUMPDEST"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4323": {
      "fn": "Controller.balanceOf",
      "offset": [
        3916,
        3956
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4324": {
      "fn": "Controller.balanceOf",
      "offset": [
        3832,
        3963
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4325": {
      "op": "POP"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "fn": "Controller.balanceOf",
      "jump": "o",
      "offset": [
        3832,
        3963
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4328": {
      "fn": "Controller.setVault",
      "offset": [
        1953,
        2192
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4329": {
      "fn": "Controller.setVault",
      "offset": [
        2042,
        2052
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 19,
      "value": "0x1"
    },
    "4331": {
      "fn": "Controller.setVault",
      "offset": [
        2042,
        2052
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4338": {
      "op": "SHL"
    },
    "4339": {
      "op": "SUB"
    },
    "4340": {
      "fn": "Controller.setVault",
      "offset": [
        2042,
        2052
      ],
      "op": "AND",
      "path": "9"
    },
    "4341": {
      "fn": "Controller.setVault",
      "offset": [
        2028,
        2038
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4342": {
      "fn": "Controller.setVault",
      "offset": [
        2028,
        2052
      ],
      "op": "EQ",
      "path": "9"
    },
    "4343": {
      "branch": 70,
      "fn": "Controller.setVault",
      "offset": [
        2028,
        2052
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4344": {
      "fn": "Controller.setVault",
      "offset": [
        2028,
        2080
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x110B"
    },
    "4347": {
      "branch": 70,
      "fn": "Controller.setVault",
      "offset": [
        2028,
        2080
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4348": {
      "op": "POP"
    },
    "4349": {
      "fn": "Controller.setVault",
      "offset": [
        2070,
        2080
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4351": {
      "fn": "Controller.setVault",
      "offset": [
        2070,
        2080
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4358": {
      "op": "SHL"
    },
    "4359": {
      "op": "SUB"
    },
    "4360": {
      "fn": "Controller.setVault",
      "offset": [
        2070,
        2080
      ],
      "op": "AND",
      "path": "9"
    },
    "4361": {
      "fn": "Controller.setVault",
      "offset": [
        2056,
        2066
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4362": {
      "branch": 71,
      "fn": "Controller.setVault",
      "offset": [
        2056,
        2080
      ],
      "op": "EQ",
      "path": "9"
    },
    "4363": {
      "fn": "Controller.setVault",
      "offset": [
        2028,
        2080
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4364": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x114A"
    },
    "4367": {
      "branch": 71,
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4368": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4370": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4371": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4378": {
      "op": "SHL"
    },
    "4379": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4380": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4381": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4383": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4385": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4386": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "ADD",
      "path": "9"
    },
    "4387": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4388": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "4390": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4392": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4393": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "ADD",
      "path": "9"
    },
    "4394": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4395": {
      "op": "PUSH11",
      "value": "0x85CDD1C985D1959DA5CDD"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "4409": {
      "op": "SHL"
    },
    "4410": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "4412": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4413": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "ADD",
      "path": "9"
    },
    "4414": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4415": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4416": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4417": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4418": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4419": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4420": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "SUB",
      "path": "9"
    },
    "4421": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "4423": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "ADD",
      "path": "9"
    },
    "4424": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4425": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4426": {
      "fn": "Controller.setVault",
      "offset": [
        2020,
        2096
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "op": "SUB"
    },
    "4435": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 20
    },
    "4436": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4437": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "AND",
      "path": "9"
    },
    "4438": {
      "fn": "Controller.setVault",
      "offset": [
        2140,
        2141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4440": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4441": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4442": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4443": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2120
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4445": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4447": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4448": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4450": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4451": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4452": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4453": {
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2128
      ],
      "op": "AND",
      "path": "9"
    },
    "4454": {
      "branch": 72,
      "fn": "Controller.setVault",
      "offset": [
        2114,
        2142
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4455": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x119F"
    },
    "4458": {
      "branch": 72,
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4459": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4461": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4462": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4471": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4472": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4474": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4476": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4477": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "ADD",
      "path": "9"
    },
    "4478": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4479": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "4481": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4483": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4484": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "ADD",
      "path": "9"
    },
    "4485": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4486": {
      "op": "PUSH5",
      "value": "0x1D985D5B1D"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "4494": {
      "op": "SHL"
    },
    "4495": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "4497": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4498": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "ADD",
      "path": "9"
    },
    "4499": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4500": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4501": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4502": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4503": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4504": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4505": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "SUB",
      "path": "9"
    },
    "4506": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "4508": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "ADD",
      "path": "9"
    },
    "4509": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4510": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4511": {
      "fn": "Controller.setVault",
      "offset": [
        2106,
        2152
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4518": {
      "op": "SHL"
    },
    "4519": {
      "op": "SUB"
    },
    "4520": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 21
    },
    "4521": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4522": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "AND",
      "path": "9"
    },
    "4523": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4525": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4526": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4527": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4528": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2168
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4530": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4532": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4533": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4535": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4536": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2176
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4537": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4538": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4545": {
      "op": "SHL"
    },
    "4546": {
      "op": "SUB"
    },
    "4547": {
      "op": "NOT"
    },
    "4548": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "AND",
      "path": "9"
    },
    "4549": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4550": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4551": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4552": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "AND",
      "path": "9"
    },
    "4553": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "OR",
      "path": "9"
    },
    "4554": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4555": {
      "fn": "Controller.setVault",
      "offset": [
        2162,
        2185
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4556": {
      "fn": "Controller.setVault",
      "jump": "o",
      "offset": [
        1953,
        2192
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4557": {
      "fn": "Controller.setStrategy",
      "offset": [
        2843,
        3258
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4558": {
      "fn": "Controller.setStrategy",
      "offset": [
        2938,
        2948
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 22,
      "value": "0x1"
    },
    "4560": {
      "fn": "Controller.setStrategy",
      "offset": [
        2938,
        2948
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4567": {
      "op": "SHL"
    },
    "4568": {
      "op": "SUB"
    },
    "4569": {
      "fn": "Controller.setStrategy",
      "offset": [
        2938,
        2948
      ],
      "op": "AND",
      "path": "9"
    },
    "4570": {
      "fn": "Controller.setStrategy",
      "offset": [
        2924,
        2934
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4571": {
      "fn": "Controller.setStrategy",
      "offset": [
        2924,
        2948
      ],
      "op": "EQ",
      "path": "9"
    },
    "4572": {
      "branch": 73,
      "fn": "Controller.setStrategy",
      "offset": [
        2924,
        2948
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4573": {
      "fn": "Controller.setStrategy",
      "offset": [
        2924,
        2976
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11F0"
    },
    "4576": {
      "branch": 73,
      "fn": "Controller.setStrategy",
      "offset": [
        2924,
        2976
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "fn": "Controller.setStrategy",
      "offset": [
        2966,
        2976
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4580": {
      "fn": "Controller.setStrategy",
      "offset": [
        2966,
        2976
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4587": {
      "op": "SHL"
    },
    "4588": {
      "op": "SUB"
    },
    "4589": {
      "fn": "Controller.setStrategy",
      "offset": [
        2966,
        2976
      ],
      "op": "AND",
      "path": "9"
    },
    "4590": {
      "fn": "Controller.setStrategy",
      "offset": [
        2952,
        2962
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4591": {
      "branch": 74,
      "fn": "Controller.setStrategy",
      "offset": [
        2952,
        2976
      ],
      "op": "EQ",
      "path": "9"
    },
    "4592": {
      "fn": "Controller.setStrategy",
      "offset": [
        2924,
        2976
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4593": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x122F"
    },
    "4596": {
      "branch": 74,
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4597": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4599": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4600": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4609": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4610": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4612": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4614": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4615": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "9"
    },
    "4616": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4617": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "4619": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4621": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4622": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "9"
    },
    "4623": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4624": {
      "op": "PUSH11",
      "value": "0x85CDD1C985D1959DA5CDD"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "4638": {
      "op": "SHL"
    },
    "4639": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "4641": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4642": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "9"
    },
    "4643": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4644": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4645": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4646": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4647": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4648": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4649": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "SUB",
      "path": "9"
    },
    "4650": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "4652": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "9"
    },
    "4653": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4654": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4655": {
      "fn": "Controller.setStrategy",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4662": {
      "op": "SHL"
    },
    "4663": {
      "op": "SUB"
    },
    "4664": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 23
    },
    "4665": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4666": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "AND",
      "path": "9"
    },
    "4667": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4669": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4670": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4671": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4672": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3028
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "4674": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4676": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4677": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4678": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4679": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4681": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4682": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4683": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3036
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4684": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4685": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "DUP6",
      "path": "9"
    },
    "4686": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "AND",
      "path": "9"
    },
    "4687": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4688": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4689": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4690": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4691": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4692": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4693": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4694": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "4696": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "AND",
      "path": "9"
    },
    "4697": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3055
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4698": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3055
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4699": {
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3047
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4701": {
      "branch": 75,
      "fn": "Controller.setStrategy",
      "offset": [
        3010,
        3055
      ],
      "op": "EQ",
      "path": "9"
    },
    "4702": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x129A"
    },
    "4705": {
      "branch": 75,
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4706": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4708": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4709": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4716": {
      "op": "SHL"
    },
    "4717": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4718": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4719": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4721": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4723": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4724": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "ADD",
      "path": "9"
    },
    "4725": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4726": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9"
    },
    "4728": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4730": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4731": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "ADD",
      "path": "9"
    },
    "4732": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4733": {
      "op": "PUSH9",
      "value": "0x8585C1C1C9BDD9959"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "4745": {
      "op": "SHL"
    },
    "4746": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "4748": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4749": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "ADD",
      "path": "9"
    },
    "4750": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4751": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4752": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4753": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4754": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4755": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4756": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "SUB",
      "path": "9"
    },
    "4757": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "4759": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "ADD",
      "path": "9"
    },
    "4760": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4761": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4762": {
      "fn": "Controller.setStrategy",
      "offset": [
        3002,
        3069
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4769": {
      "op": "SHL"
    },
    "4770": {
      "op": "SUB"
    },
    "4771": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4772": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4773": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "AND",
      "path": "9"
    },
    "4774": {
      "fn": "Controller.setStrategy",
      "offset": [
        3080,
        3096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4776": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4777": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4778": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4779": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3109
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "4781": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4783": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4784": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4786": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4787": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4788": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4789": {
      "fn": "Controller.setStrategy",
      "offset": [
        3099,
        3117
      ],
      "op": "AND",
      "path": "9"
    },
    "4790": {
      "fn": "Controller.setStrategy",
      "offset": [
        3131,
        3153
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4791": {
      "branch": 76,
      "fn": "Controller.setStrategy",
      "offset": [
        3131,
        3153
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4792": {
      "fn": "Controller.setStrategy",
      "offset": [
        3127,
        3212
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1323"
    },
    "4795": {
      "branch": 76,
      "fn": "Controller.setStrategy",
      "offset": [
        3127,
        3212
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4796": {
      "fn": "Controller.setStrategy",
      "offset": [
        3178,
        3186
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 24
    },
    "4797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4803": {
      "op": "SHL"
    },
    "4804": {
      "op": "SUB"
    },
    "4805": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3199
      ],
      "op": "AND",
      "path": "9"
    },
    "4806": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3199
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x853828B6"
    },
    "4811": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4813": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4814": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4815": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4820": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "AND",
      "path": "9"
    },
    "4821": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "4823": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "SHL",
      "path": "9"
    },
    "4824": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4825": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4826": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4828": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "ADD",
      "path": "9"
    },
    "4829": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4831": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4833": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4834": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4835": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4836": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "SUB",
      "path": "9"
    },
    "4837": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4838": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4840": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP8",
      "path": "9"
    },
    "4841": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4842": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "4843": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4844": {
      "op": "DUP1"
    },
    "4845": {
      "op": "ISZERO"
    },
    "4846": {
      "op": "PUSH2",
      "value": "0x12F6"
    },
    "4849": {
      "op": "JUMPI"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4852": {
      "op": "DUP1"
    },
    "4853": {
      "op": "REVERT"
    },
    "4854": {
      "op": "JUMPDEST"
    },
    "4855": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "POP",
      "path": "9"
    },
    "4856": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "GAS",
      "path": "9"
    },
    "4857": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "CALL",
      "path": "9"
    },
    "4858": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4859": {
      "op": "DUP1"
    },
    "4860": {
      "op": "ISZERO"
    },
    "4861": {
      "op": "PUSH2",
      "value": "0x130A"
    },
    "4864": {
      "op": "JUMPI"
    },
    "4865": {
      "op": "RETURNDATASIZE"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4868": {
      "op": "DUP1"
    },
    "4869": {
      "op": "RETURNDATACOPY"
    },
    "4870": {
      "op": "RETURNDATASIZE"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4873": {
      "op": "REVERT"
    },
    "4874": {
      "op": "JUMPDEST"
    },
    "4875": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "POP",
      "path": "9"
    },
    "4876": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "POP",
      "path": "9"
    },
    "4877": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "POP",
      "path": "9"
    },
    "4878": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "POP",
      "path": "9"
    },
    "4879": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4881": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4882": {
      "fn": "Controller.setStrategy",
      "offset": [
        3169,
        3201
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4885": {
      "op": "DUP2"
    },
    "4886": {
      "op": "LT"
    },
    "4887": {
      "op": "ISZERO"
    },
    "4888": {
      "op": "PUSH2",
      "value": "0x1320"
    },
    "4891": {
      "op": "JUMPI"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4894": {
      "op": "DUP1"
    },
    "4895": {
      "op": "REVERT"
    },
    "4896": {
      "op": "JUMPDEST"
    },
    "4897": {
      "op": "POP"
    },
    "4898": {
      "op": "POP"
    },
    "4899": {
      "fn": "Controller.setStrategy",
      "offset": [
        3127,
        3212
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4900": {
      "op": "POP"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4907": {
      "op": "SHL"
    },
    "4908": {
      "op": "SUB"
    },
    "4909": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 25
    },
    "4910": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4911": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "AND",
      "path": "9"
    },
    "4912": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4914": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4915": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4916": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4917": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3231
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "4919": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4921": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4922": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4924": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4925": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3239
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4926": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4927": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "op": "SUB"
    },
    "4936": {
      "op": "NOT"
    },
    "4937": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "AND",
      "path": "9"
    },
    "4938": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4939": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4940": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4941": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "AND",
      "path": "9"
    },
    "4942": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "OR",
      "path": "9"
    },
    "4943": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4944": {
      "fn": "Controller.setStrategy",
      "offset": [
        3221,
        3251
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4945": {
      "fn": "Controller.setStrategy",
      "jump": "o",
      "offset": [
        2843,
        3258
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4946": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1649,
        1791
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4947": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1728,
        1738
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 26,
      "value": "0x0"
    },
    "4949": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1728,
        1738
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4956": {
      "op": "SHL"
    },
    "4957": {
      "op": "SUB"
    },
    "4958": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1728,
        1738
      ],
      "op": "AND",
      "path": "9"
    },
    "4959": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1714,
        1724
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4960": {
      "branch": 77,
      "fn": "Controller.setOneSplit",
      "offset": [
        1714,
        1738
      ],
      "op": "EQ",
      "path": "9"
    },
    "4961": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x139F"
    },
    "4964": {
      "branch": 77,
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4965": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4967": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4968": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4975": {
      "op": "SHL"
    },
    "4976": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4977": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4978": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4980": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4982": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4983": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "ADD",
      "path": "9"
    },
    "4984": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4985": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "4987": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4989": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4990": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "ADD",
      "path": "9"
    },
    "4991": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4992": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5006": {
      "op": "SHL"
    },
    "5007": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "5009": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5010": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "ADD",
      "path": "9"
    },
    "5011": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5012": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5013": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5014": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5015": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5016": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5017": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "SUB",
      "path": "9"
    },
    "5018": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "5020": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "ADD",
      "path": "9"
    },
    "5021": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5022": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "REVERT",
      "path": "9"
    },
    "5023": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1706,
        1754
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5024": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1772
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 27,
      "value": "0x2"
    },
    "5026": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5027": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5034": {
      "op": "SHL"
    },
    "5035": {
      "op": "SUB"
    },
    "5036": {
      "op": "NOT"
    },
    "5037": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "AND",
      "path": "9"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5044": {
      "op": "SHL"
    },
    "5045": {
      "op": "SUB"
    },
    "5046": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5047": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5048": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5049": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "AND",
      "path": "9"
    },
    "5050": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5051": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5052": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5053": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "OR",
      "path": "9"
    },
    "5054": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5055": {
      "fn": "Controller.setOneSplit",
      "offset": [
        1764,
        1784
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5056": {
      "fn": "Controller.setOneSplit",
      "jump": "o",
      "offset": [
        1649,
        1791
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5057": {
      "offset": [
        648,
        670
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5058": {
      "fn": "Controller.setOneSplit",
      "offset": [
        648,
        670
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "5060": {
      "fn": "Controller.setOneSplit",
      "offset": [
        648,
        670
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5067": {
      "op": "SHL"
    },
    "5068": {
      "op": "SUB"
    },
    "5069": {
      "offset": [
        648,
        670
      ],
      "op": "AND",
      "path": "9"
    },
    "5070": {
      "fn": "Controller.setOneSplit",
      "offset": [
        648,
        670
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5071": {
      "fn": "Controller.setOneSplit",
      "jump": "o",
      "offset": [
        648,
        670
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5072": {
      "offset": [
        846,
        916
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5073": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "5075": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5077": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5078": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5079": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5080": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5082": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5083": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5084": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5085": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5087": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5088": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP5",
      "path": "9"
    },
    "5089": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5090": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5091": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5092": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5093": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5094": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5095": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5096": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5097": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5098": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5099": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "5101": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "AND",
      "path": "9"
    },
    "5102": {
      "fn": "Controller.setOneSplit",
      "offset": [
        846,
        916
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5103": {
      "fn": "Controller.setOneSplit",
      "jump": "o",
      "offset": [
        846,
        916
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5104": {
      "offset": [
        676,
        717
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5105": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5107": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5109": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5110": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5112": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5113": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5114": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5115": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5117": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5118": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5119": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5126": {
      "op": "SHL"
    },
    "5127": {
      "op": "SUB"
    },
    "5128": {
      "offset": [
        676,
        717
      ],
      "op": "AND",
      "path": "9"
    },
    "5129": {
      "fn": "Controller.setOneSplit",
      "offset": [
        676,
        717
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5130": {
      "fn": "Controller.setOneSplit",
      "jump": "o",
      "offset": [
        676,
        717
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5131": {
      "fn": "Controller.setGovernance",
      "offset": [
        1797,
        1947
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5132": {
      "fn": "Controller.setGovernance",
      "offset": [
        1880,
        1890
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 28,
      "value": "0x0"
    },
    "5134": {
      "fn": "Controller.setGovernance",
      "offset": [
        1880,
        1890
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5141": {
      "op": "SHL"
    },
    "5142": {
      "op": "SUB"
    },
    "5143": {
      "fn": "Controller.setGovernance",
      "offset": [
        1880,
        1890
      ],
      "op": "AND",
      "path": "9"
    },
    "5144": {
      "fn": "Controller.setGovernance",
      "offset": [
        1866,
        1876
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5145": {
      "branch": 78,
      "fn": "Controller.setGovernance",
      "offset": [
        1866,
        1890
      ],
      "op": "EQ",
      "path": "9"
    },
    "5146": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1458"
    },
    "5149": {
      "branch": 78,
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5150": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5152": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5153": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5160": {
      "op": "SHL"
    },
    "5161": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5162": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5163": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5165": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5167": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5168": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "ADD",
      "path": "9"
    },
    "5169": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5170": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "5172": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "5174": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5175": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "ADD",
      "path": "9"
    },
    "5176": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5177": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5191": {
      "op": "SHL"
    },
    "5192": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "5194": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5195": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "ADD",
      "path": "9"
    },
    "5196": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5197": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5198": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5199": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5200": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5201": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5202": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "SUB",
      "path": "9"
    },
    "5203": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "5205": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "ADD",
      "path": "9"
    },
    "5206": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5207": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "REVERT",
      "path": "9"
    },
    "5208": {
      "fn": "Controller.setGovernance",
      "offset": [
        1858,
        1906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5209": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1926
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 29,
      "value": "0x0"
    },
    "5211": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5212": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5219": {
      "op": "SHL"
    },
    "5220": {
      "op": "SUB"
    },
    "5221": {
      "op": "NOT"
    },
    "5222": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "AND",
      "path": "9"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5229": {
      "op": "SHL"
    },
    "5230": {
      "op": "SUB"
    },
    "5231": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5232": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5233": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5234": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "AND",
      "path": "9"
    },
    "5235": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5236": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5237": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5238": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "OR",
      "path": "9"
    },
    "5239": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5240": {
      "fn": "Controller.setGovernance",
      "offset": [
        1916,
        1940
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5241": {
      "fn": "Controller.setGovernance",
      "jump": "o",
      "offset": [
        1797,
        1947
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5242": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5249": {
      "op": "SHL"
    },
    "5250": {
      "op": "SUB"
    },
    "5251": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5252": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5253": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "AND",
      "path": "9"
    },
    "5254": {
      "fn": "Controller.earn",
      "offset": [
        3328,
        3345
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5256": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5257": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5258": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5259": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3358
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "5261": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5263": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5264": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5265": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5266": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5268": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5269": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5270": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5271": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5272": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5273": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5274": {
      "op": "PUSH4",
      "value": "0x1F1FCD51"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5281": {
      "op": "SHL"
    },
    "5282": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5283": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5284": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5285": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5286": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "5287": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "AND",
      "path": "9"
    },
    "5288": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "5289": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "DUP5",
      "path": "9"
    },
    "5290": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5291": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3416
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1F1FCD51"
    },
    "5296": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3416
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "5297": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5299": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5300": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5301": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "ADD",
      "path": "9"
    },
    "5302": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "5303": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5304": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5305": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5306": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "SUB",
      "path": "9"
    },
    "5307": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "ADD",
      "path": "9"
    },
    "5308": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5309": {
      "fn": "Controller.earn",
      "offset": [
        3348,
        3366
      ],
      "op": "DUP7",
      "path": "9"
    },
    "5310": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5311": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "5312": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5313": {
      "op": "DUP1"
    },
    "5314": {
      "op": "ISZERO"
    },
    "5315": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "5318": {
      "op": "JUMPI"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5321": {
      "op": "DUP1"
    },
    "5322": {
      "op": "REVERT"
    },
    "5323": {
      "op": "JUMPDEST"
    },
    "5324": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "POP",
      "path": "9"
    },
    "5325": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "GAS",
      "path": "9"
    },
    "5326": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "5327": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5328": {
      "op": "DUP1"
    },
    "5329": {
      "op": "ISZERO"
    },
    "5330": {
      "op": "PUSH2",
      "value": "0x14DF"
    },
    "5333": {
      "op": "JUMPI"
    },
    "5334": {
      "op": "RETURNDATASIZE"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5337": {
      "op": "DUP1"
    },
    "5338": {
      "op": "RETURNDATACOPY"
    },
    "5339": {
      "op": "RETURNDATASIZE"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5342": {
      "op": "REVERT"
    },
    "5343": {
      "op": "JUMPDEST"
    },
    "5344": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "POP",
      "path": "9"
    },
    "5345": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "POP",
      "path": "9"
    },
    "5346": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "POP",
      "path": "9"
    },
    "5347": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "POP",
      "path": "9"
    },
    "5348": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5350": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5351": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5354": {
      "op": "DUP2"
    },
    "5355": {
      "op": "LT"
    },
    "5356": {
      "op": "ISZERO"
    },
    "5357": {
      "op": "PUSH2",
      "value": "0x14F5"
    },
    "5360": {
      "op": "JUMPI"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5363": {
      "op": "DUP1"
    },
    "5364": {
      "op": "REVERT"
    },
    "5365": {
      "op": "JUMPDEST"
    },
    "5366": {
      "op": "POP"
    },
    "5367": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5368": {
      "fn": "Controller.earn",
      "offset": [
        3392,
        3418
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5369": {
      "op": "POP"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5376": {
      "op": "SHL"
    },
    "5377": {
      "op": "SUB"
    },
    "5378": {
      "fn": "Controller.earn",
      "offset": [
        3432,
        3447
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5379": {
      "fn": "Controller.earn",
      "offset": [
        3432,
        3447
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5380": {
      "fn": "Controller.earn",
      "offset": [
        3432,
        3447
      ],
      "op": "AND",
      "path": "9"
    },
    "5381": {
      "fn": "Controller.earn",
      "offset": [
        3432,
        3447
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5382": {
      "fn": "Controller.earn",
      "offset": [
        3432,
        3447
      ],
      "op": "DUP6",
      "path": "9"
    },
    "5383": {
      "fn": "Controller.earn",
      "offset": [
        3432,
        3447
      ],
      "op": "AND",
      "path": "9"
    },
    "5384": {
      "branch": 79,
      "fn": "Controller.earn",
      "offset": [
        3432,
        3447
      ],
      "op": "EQ",
      "path": "9"
    },
    "5385": {
      "fn": "Controller.earn",
      "offset": [
        3428,
        3781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15EE"
    },
    "5388": {
      "branch": 79,
      "fn": "Controller.earn",
      "offset": [
        3428,
        3781
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5395": {
      "op": "SHL"
    },
    "5396": {
      "op": "SUB"
    },
    "5397": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5398": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "DUP6",
      "path": "9"
    },
    "5399": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "AND",
      "path": "9"
    },
    "5400": {
      "fn": "Controller.earn",
      "offset": [
        3463,
        3480
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5402": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5403": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5404": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5405": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3493
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6"
    },
    "5407": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5409": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5410": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5411": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5412": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5414": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5415": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5416": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3501
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5417": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "DUP7",
      "path": "9"
    },
    "5418": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "DUP7",
      "path": "9"
    },
    "5419": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "AND",
      "path": "9"
    },
    "5420": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "DUP5",
      "path": "9"
    },
    "5421": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5422": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5423": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5424": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5425": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5426": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5427": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5428": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5429": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5430": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "AND",
      "path": "9"
    },
    "5431": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5432": {
      "fn": "Controller.earn",
      "offset": [
        3522,
        3569
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 30,
      "value": "0x1548"
    },
    "5435": {
      "fn": "Controller.earn",
      "offset": [
        3522,
        3569
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5436": {
      "fn": "Controller.earn",
      "offset": [
        3483,
        3508
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5437": {
      "fn": "Controller.earn",
      "offset": [
        3561,
        3568
      ],
      "op": "DUP7",
      "path": "9"
    },
    "5438": {
      "fn": "Controller.earn",
      "offset": [
        3522,
        3569
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "5443": {
      "fn": "Controller.earn",
      "offset": [
        3522,
        3549
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CA3"
    },
    "5446": {
      "fn": "Controller.earn",
      "offset": [
        3522,
        3569
      ],
      "op": "AND",
      "path": "9"
    },
    "5447": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        3522,
        3569
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5448": {
      "fn": "Controller.earn",
      "offset": [
        3522,
        3569
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5449": {
      "fn": "Controller.earn",
      "offset": [
        3603,
        3612
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 31
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5456": {
      "op": "SHL"
    },
    "5457": {
      "op": "SUB"
    },
    "5458": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3621
      ],
      "op": "AND",
      "path": "9"
    },
    "5459": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3621
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xDEF2489B"
    },
    "5464": {
      "fn": "Controller.earn",
      "offset": [
        3622,
        3631
      ],
      "op": "DUP5",
      "path": "9"
    },
    "5465": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5467": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5468": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5469": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "5474": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "AND",
      "path": "9"
    },
    "5475": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "5477": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "SHL",
      "path": "9"
    },
    "5478": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5479": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5480": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5482": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "ADD",
      "path": "9"
    },
    "5483": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5484": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5491": {
      "op": "SHL"
    },
    "5492": {
      "op": "SUB"
    },
    "5493": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "AND",
      "path": "9"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5500": {
      "op": "SHL"
    },
    "5501": {
      "op": "SUB"
    },
    "5502": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "AND",
      "path": "9"
    },
    "5503": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5504": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5505": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5507": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "ADD",
      "path": "9"
    },
    "5508": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5509": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "POP",
      "path": "9"
    },
    "5510": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "POP",
      "path": "9"
    },
    "5511": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5513": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5515": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5516": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5517": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5518": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "SUB",
      "path": "9"
    },
    "5519": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5520": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5522": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP8",
      "path": "9"
    },
    "5523": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5524": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "5525": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5526": {
      "op": "DUP1"
    },
    "5527": {
      "op": "ISZERO"
    },
    "5528": {
      "op": "PUSH2",
      "value": "0x15A0"
    },
    "5531": {
      "op": "JUMPI"
    },
    "5532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5534": {
      "op": "DUP1"
    },
    "5535": {
      "op": "REVERT"
    },
    "5536": {
      "op": "JUMPDEST"
    },
    "5537": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "POP",
      "path": "9"
    },
    "5538": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "GAS",
      "path": "9"
    },
    "5539": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "CALL",
      "path": "9"
    },
    "5540": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5541": {
      "op": "DUP1"
    },
    "5542": {
      "op": "ISZERO"
    },
    "5543": {
      "op": "PUSH2",
      "value": "0x15B4"
    },
    "5546": {
      "op": "JUMPI"
    },
    "5547": {
      "op": "RETURNDATASIZE"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5550": {
      "op": "DUP1"
    },
    "5551": {
      "op": "RETURNDATACOPY"
    },
    "5552": {
      "op": "RETURNDATASIZE"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5555": {
      "op": "REVERT"
    },
    "5556": {
      "op": "JUMPDEST"
    },
    "5557": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "POP",
      "path": "9"
    },
    "5558": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "POP",
      "path": "9"
    },
    "5559": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "POP",
      "path": "9"
    },
    "5560": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "POP",
      "path": "9"
    },
    "5561": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5563": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5564": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5567": {
      "op": "DUP2"
    },
    "5568": {
      "op": "LT"
    },
    "5569": {
      "op": "ISZERO"
    },
    "5570": {
      "op": "PUSH2",
      "value": "0x15CA"
    },
    "5573": {
      "op": "JUMPI"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5576": {
      "op": "DUP1"
    },
    "5577": {
      "op": "REVERT"
    },
    "5578": {
      "op": "JUMPDEST"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5581": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "fn": "Controller.earn",
      "offset": [
        3646,
        3692
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 32,
      "value": "0x15E8"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5592": {
      "op": "SHL"
    },
    "5593": {
      "op": "SUB"
    },
    "5594": {
      "fn": "Controller.earn",
      "offset": [
        3646,
        3672
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5595": {
      "fn": "Controller.earn",
      "offset": [
        3646,
        3672
      ],
      "op": "AND",
      "path": "9"
    },
    "5596": {
      "fn": "Controller.earn",
      "offset": [
        3673,
        3682
      ],
      "op": "DUP5",
      "path": "9"
    },
    "5597": {
      "fn": "Controller.earn",
      "offset": [
        3593,
        3632
      ],
      "op": "DUP7",
      "path": "9"
    },
    "5598": {
      "fn": "Controller.earn",
      "offset": [
        3646,
        3692
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "5603": {
      "fn": "Controller.earn",
      "offset": [
        3646,
        3672
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CA3"
    },
    "5606": {
      "fn": "Controller.earn",
      "offset": [
        3646,
        3692
      ],
      "op": "AND",
      "path": "9"
    },
    "5607": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        3646,
        3692
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5608": {
      "fn": "Controller.earn",
      "offset": [
        3646,
        3692
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5609": {
      "fn": "Controller.earn",
      "offset": [
        3428,
        3781
      ],
      "op": "POP",
      "path": "9"
    },
    "5610": {
      "fn": "Controller.earn",
      "offset": [
        3428,
        3781
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1608"
    },
    "5613": {
      "fn": "Controller.earn",
      "offset": [
        3428,
        3781
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5614": {
      "fn": "Controller.earn",
      "offset": [
        3428,
        3781
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5615": {
      "fn": "Controller.earn",
      "offset": [
        3723,
        3770
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 33,
      "value": "0x1608"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5624": {
      "op": "SHL"
    },
    "5625": {
      "op": "SUB"
    },
    "5626": {
      "fn": "Controller.earn",
      "offset": [
        3723,
        3750
      ],
      "op": "DUP6",
      "path": "9"
    },
    "5627": {
      "fn": "Controller.earn",
      "offset": [
        3723,
        3750
      ],
      "op": "AND",
      "path": "9"
    },
    "5628": {
      "fn": "Controller.earn",
      "offset": [
        3751,
        3760
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5629": {
      "fn": "Controller.earn",
      "offset": [
        3762,
        3769
      ],
      "op": "DUP6",
      "path": "9"
    },
    "5630": {
      "fn": "Controller.earn",
      "offset": [
        3723,
        3770
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "5635": {
      "fn": "Controller.earn",
      "offset": [
        3723,
        3750
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CA3"
    },
    "5638": {
      "fn": "Controller.earn",
      "offset": [
        3723,
        3770
      ],
      "op": "AND",
      "path": "9"
    },
    "5639": {
      "fn": "Controller.earn",
      "jump": "i",
      "offset": [
        3723,
        3770
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5640": {
      "fn": "Controller.earn",
      "offset": [
        3723,
        3770
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5641": {
      "fn": "Controller.earn",
      "offset": [
        3799,
        3808
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 34
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5648": {
      "op": "SHL"
    },
    "5649": {
      "op": "SUB"
    },
    "5650": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3817
      ],
      "op": "AND",
      "path": "9"
    },
    "5651": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3817
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xD0E30DB0"
    },
    "5656": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5658": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5659": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5660": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "5665": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "AND",
      "path": "9"
    },
    "5666": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "5668": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "SHL",
      "path": "9"
    },
    "5669": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5670": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5671": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5673": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "ADD",
      "path": "9"
    },
    "5674": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5676": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5678": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5679": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5680": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5681": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "SUB",
      "path": "9"
    },
    "5682": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5683": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5685": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "DUP8",
      "path": "9"
    },
    "5686": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5687": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "5688": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5689": {
      "op": "DUP1"
    },
    "5690": {
      "op": "ISZERO"
    },
    "5691": {
      "op": "PUSH2",
      "value": "0x1643"
    },
    "5694": {
      "op": "JUMPI"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5697": {
      "op": "DUP1"
    },
    "5698": {
      "op": "REVERT"
    },
    "5699": {
      "op": "JUMPDEST"
    },
    "5700": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "POP",
      "path": "9"
    },
    "5701": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "GAS",
      "path": "9"
    },
    "5702": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "CALL",
      "path": "9"
    },
    "5703": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5704": {
      "op": "DUP1"
    },
    "5705": {
      "op": "ISZERO"
    },
    "5706": {
      "op": "PUSH2",
      "value": "0x1657"
    },
    "5709": {
      "op": "JUMPI"
    },
    "5710": {
      "op": "RETURNDATASIZE"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5713": {
      "op": "DUP1"
    },
    "5714": {
      "op": "RETURNDATACOPY"
    },
    "5715": {
      "op": "RETURNDATASIZE"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5718": {
      "op": "REVERT"
    },
    "5719": {
      "op": "JUMPDEST"
    },
    "5720": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "POP",
      "path": "9"
    },
    "5721": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "POP",
      "path": "9"
    },
    "5722": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "POP",
      "path": "9"
    },
    "5723": {
      "fn": "Controller.earn",
      "offset": [
        3790,
        3819
      ],
      "op": "POP",
      "path": "9"
    },
    "5724": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "POP",
      "path": "9"
    },
    "5725": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "POP",
      "path": "9"
    },
    "5726": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "POP",
      "path": "9"
    },
    "5727": {
      "fn": "Controller.earn",
      "offset": [
        3264,
        3826
      ],
      "op": "POP",
      "path": "9"
    },
    "5728": {
      "fn": "Controller.earn",
      "jump": "o",
      "offset": [
        3264,
        3826
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5729": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2198,
        2384
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5730": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2297,
        2307
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 35,
      "value": "0x0"
    },
    "5732": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2297,
        2307
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5739": {
      "op": "SHL"
    },
    "5740": {
      "op": "SUB"
    },
    "5741": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2297,
        2307
      ],
      "op": "AND",
      "path": "9"
    },
    "5742": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2283,
        2293
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5743": {
      "branch": 80,
      "fn": "Controller.approveStrategy",
      "offset": [
        2283,
        2307
      ],
      "op": "EQ",
      "path": "9"
    },
    "5744": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16AE"
    },
    "5747": {
      "branch": 80,
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5748": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5750": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5751": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5758": {
      "op": "SHL"
    },
    "5759": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5760": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5761": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5763": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5765": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5766": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "ADD",
      "path": "9"
    },
    "5767": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5768": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "5770": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "5772": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5773": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "ADD",
      "path": "9"
    },
    "5774": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5775": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5789": {
      "op": "SHL"
    },
    "5790": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "5792": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5793": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "ADD",
      "path": "9"
    },
    "5794": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5795": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5796": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5797": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5798": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5799": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5800": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "SUB",
      "path": "9"
    },
    "5801": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "5803": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "ADD",
      "path": "9"
    },
    "5804": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5805": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "REVERT",
      "path": "9"
    },
    "5806": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2275,
        2323
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5813": {
      "op": "SHL"
    },
    "5814": {
      "op": "SUB"
    },
    "5815": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 36
    },
    "5816": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5817": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "AND",
      "path": "9"
    },
    "5818": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5820": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5821": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5822": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5823": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2351
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "5825": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5827": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5828": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5829": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5830": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5832": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5833": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5834": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2359
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5835": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "5836": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5837": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "5838": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "AND",
      "path": "9"
    },
    "5839": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5840": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5841": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5842": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5843": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5844": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5845": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2370
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "5846": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2377
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5847": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2377
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5850": {
      "op": "NOT"
    },
    "5851": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2377
      ],
      "op": "AND",
      "path": "9"
    },
    "5852": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2373,
        2377
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "5854": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2377
      ],
      "op": "OR",
      "path": "9"
    },
    "5855": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2377
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5856": {
      "fn": "Controller.approveStrategy",
      "offset": [
        2333,
        2377
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5857": {
      "fn": "Controller.approveStrategy",
      "jump": "o",
      "offset": [
        2198,
        2384
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5858": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5859": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4266,
        4276
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 37,
      "value": "0x1"
    },
    "5861": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4266,
        4276
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5868": {
      "op": "SHL"
    },
    "5869": {
      "op": "SUB"
    },
    "5870": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4266,
        4276
      ],
      "op": "AND",
      "path": "9"
    },
    "5871": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4252,
        4262
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5872": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4252,
        4276
      ],
      "op": "EQ",
      "path": "9"
    },
    "5873": {
      "branch": 81,
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4252,
        4276
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5874": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4252,
        4304
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1705"
    },
    "5877": {
      "branch": 81,
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4252,
        4304
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5878": {
      "op": "POP"
    },
    "5879": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4294,
        4304
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5881": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4294,
        4304
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5888": {
      "op": "SHL"
    },
    "5889": {
      "op": "SUB"
    },
    "5890": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4294,
        4304
      ],
      "op": "AND",
      "path": "9"
    },
    "5891": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4280,
        4290
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5892": {
      "branch": 82,
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4280,
        4304
      ],
      "op": "EQ",
      "path": "9"
    },
    "5893": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4252,
        4304
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5894": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1744"
    },
    "5897": {
      "branch": 82,
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5898": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5900": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5901": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5908": {
      "op": "SHL"
    },
    "5909": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5910": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5911": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "5913": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5915": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5916": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "ADD",
      "path": "9"
    },
    "5917": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5918": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "5920": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "5922": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5923": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "ADD",
      "path": "9"
    },
    "5924": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5925": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5939": {
      "op": "SHL"
    },
    "5940": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "5942": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5943": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "ADD",
      "path": "9"
    },
    "5944": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5945": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5946": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5947": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5948": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5949": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5950": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "SUB",
      "path": "9"
    },
    "5951": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "5953": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "ADD",
      "path": "9"
    },
    "5954": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5955": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "REVERT",
      "path": "9"
    },
    "5956": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4244,
        4320
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5957": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4330,
        4378
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 38,
      "value": "0x175E"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5966": {
      "op": "SHL"
    },
    "5967": {
      "op": "SUB"
    },
    "5968": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4330,
        4357
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5969": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4330,
        4357
      ],
      "op": "AND",
      "path": "9"
    },
    "5970": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4358,
        4368
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5971": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4370,
        4377
      ],
      "op": "DUP4",
      "path": "9"
    },
    "5972": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4330,
        4378
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "5977": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4330,
        4357
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CA3"
    },
    "5980": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4330,
        4378
      ],
      "op": "AND",
      "path": "9"
    },
    "5981": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "i",
      "offset": [
        4330,
        4378
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5982": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4330,
        4378
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5983": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "POP",
      "path": "9"
    },
    "5984": {
      "fn": "Controller.inCaseTokensGetStuck",
      "offset": [
        4164,
        4385
      ],
      "op": "POP",
      "path": "9"
    },
    "5985": {
      "fn": "Controller.inCaseTokensGetStuck",
      "jump": "o",
      "offset": [
        4164,
        4385
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5986": {
      "fn": "Controller.setStrategist",
      "offset": [
        1357,
        1507
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5987": {
      "fn": "Controller.setStrategist",
      "offset": [
        1440,
        1450
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 39,
      "value": "0x0"
    },
    "5989": {
      "fn": "Controller.setStrategist",
      "offset": [
        1440,
        1450
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5996": {
      "op": "SHL"
    },
    "5997": {
      "op": "SUB"
    },
    "5998": {
      "fn": "Controller.setStrategist",
      "offset": [
        1440,
        1450
      ],
      "op": "AND",
      "path": "9"
    },
    "5999": {
      "fn": "Controller.setStrategist",
      "offset": [
        1426,
        1436
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6000": {
      "branch": 83,
      "fn": "Controller.setStrategist",
      "offset": [
        1426,
        1450
      ],
      "op": "EQ",
      "path": "9"
    },
    "6001": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17AF"
    },
    "6004": {
      "branch": 83,
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6005": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6007": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6008": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6015": {
      "op": "SHL"
    },
    "6016": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6017": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6018": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6020": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6022": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6023": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "ADD",
      "path": "9"
    },
    "6024": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6025": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "6027": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "6029": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6030": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "ADD",
      "path": "9"
    },
    "6031": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6032": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6046": {
      "op": "SHL"
    },
    "6047": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "6049": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6050": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "ADD",
      "path": "9"
    },
    "6051": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6052": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6053": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6054": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6055": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6056": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6057": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "SUB",
      "path": "9"
    },
    "6058": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "6060": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "ADD",
      "path": "9"
    },
    "6061": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6062": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "REVERT",
      "path": "9"
    },
    "6063": {
      "fn": "Controller.setStrategist",
      "offset": [
        1418,
        1466
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6064": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1486
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 40,
      "value": "0x1"
    },
    "6066": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6067": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6074": {
      "op": "SHL"
    },
    "6075": {
      "op": "SUB"
    },
    "6076": {
      "op": "NOT"
    },
    "6077": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "AND",
      "path": "9"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6084": {
      "op": "SHL"
    },
    "6085": {
      "op": "SUB"
    },
    "6086": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6087": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6088": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6089": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "AND",
      "path": "9"
    },
    "6090": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6091": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6092": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6093": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "OR",
      "path": "9"
    },
    "6094": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6095": {
      "fn": "Controller.setStrategist",
      "offset": [
        1476,
        1500
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6096": {
      "fn": "Controller.setStrategist",
      "jump": "o",
      "offset": [
        1357,
        1507
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6097": {
      "fn": "Controller.setConverter",
      "offset": [
        2582,
        2837
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6098": {
      "fn": "Controller.setConverter",
      "offset": [
        2726,
        2736
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 41,
      "value": "0x1"
    },
    "6100": {
      "fn": "Controller.setConverter",
      "offset": [
        2726,
        2736
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6107": {
      "op": "SHL"
    },
    "6108": {
      "op": "SUB"
    },
    "6109": {
      "fn": "Controller.setConverter",
      "offset": [
        2726,
        2736
      ],
      "op": "AND",
      "path": "9"
    },
    "6110": {
      "fn": "Controller.setConverter",
      "offset": [
        2712,
        2722
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6111": {
      "fn": "Controller.setConverter",
      "offset": [
        2712,
        2736
      ],
      "op": "EQ",
      "path": "9"
    },
    "6112": {
      "branch": 84,
      "fn": "Controller.setConverter",
      "offset": [
        2712,
        2736
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6113": {
      "fn": "Controller.setConverter",
      "offset": [
        2712,
        2764
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17F4"
    },
    "6116": {
      "branch": 84,
      "fn": "Controller.setConverter",
      "offset": [
        2712,
        2764
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6117": {
      "op": "POP"
    },
    "6118": {
      "fn": "Controller.setConverter",
      "offset": [
        2754,
        2764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6120": {
      "fn": "Controller.setConverter",
      "offset": [
        2754,
        2764
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6127": {
      "op": "SHL"
    },
    "6128": {
      "op": "SUB"
    },
    "6129": {
      "fn": "Controller.setConverter",
      "offset": [
        2754,
        2764
      ],
      "op": "AND",
      "path": "9"
    },
    "6130": {
      "fn": "Controller.setConverter",
      "offset": [
        2740,
        2750
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6131": {
      "branch": 85,
      "fn": "Controller.setConverter",
      "offset": [
        2740,
        2764
      ],
      "op": "EQ",
      "path": "9"
    },
    "6132": {
      "fn": "Controller.setConverter",
      "offset": [
        2712,
        2764
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6133": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1833"
    },
    "6136": {
      "branch": 85,
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6137": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6139": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6140": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6147": {
      "op": "SHL"
    },
    "6148": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6149": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6150": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6152": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6154": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6155": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "ADD",
      "path": "9"
    },
    "6156": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6157": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "6159": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "6161": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6162": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "ADD",
      "path": "9"
    },
    "6163": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6164": {
      "op": "PUSH11",
      "value": "0x85CDD1C985D1959DA5CDD"
    },
    "6176": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6178": {
      "op": "SHL"
    },
    "6179": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "6181": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6182": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "ADD",
      "path": "9"
    },
    "6183": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6184": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6185": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6186": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6187": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6188": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6189": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "SUB",
      "path": "9"
    },
    "6190": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "6192": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "ADD",
      "path": "9"
    },
    "6193": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6194": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "REVERT",
      "path": "9"
    },
    "6195": {
      "fn": "Controller.setConverter",
      "offset": [
        2704,
        2780
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "op": "SUB"
    },
    "6204": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "SWAP3",
      "path": "9",
      "statement": 42
    },
    "6205": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6206": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "AND",
      "path": "9"
    },
    "6207": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6209": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6210": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6211": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6212": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2800
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6"
    },
    "6214": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6216": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6217": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6218": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6219": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6221": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6222": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6223": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2808
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6224": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "6225": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "DUP7",
      "path": "9"
    },
    "6226": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "AND",
      "path": "9"
    },
    "6227": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6228": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6229": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "6230": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6231": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6232": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6233": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6234": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6235": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2817
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6236": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6237": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6244": {
      "op": "SHL"
    },
    "6245": {
      "op": "SUB"
    },
    "6246": {
      "op": "NOT"
    },
    "6247": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "AND",
      "path": "9"
    },
    "6248": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6249": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6250": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6251": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "AND",
      "path": "9"
    },
    "6252": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "OR",
      "path": "9"
    },
    "6253": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6254": {
      "fn": "Controller.setConverter",
      "offset": [
        2790,
        2830
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6255": {
      "fn": "Controller.setConverter",
      "jump": "o",
      "offset": [
        2582,
        2837
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6256": {
      "offset": [
        774,
        839
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6257": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6"
    },
    "6259": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6261": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6262": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6263": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6264": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6266": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6267": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6268": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6269": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6271": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6272": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "DUP5",
      "path": "9"
    },
    "6273": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6274": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6275": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6276": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6277": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6278": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6279": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6280": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6281": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6282": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6289": {
      "op": "SHL"
    },
    "6290": {
      "op": "SUB"
    },
    "6291": {
      "offset": [
        774,
        839
      ],
      "op": "AND",
      "path": "9"
    },
    "6292": {
      "fn": "Controller.setConverter",
      "offset": [
        774,
        839
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6293": {
      "fn": "Controller.setConverter",
      "jump": "o",
      "offset": [
        774,
        839
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6294": {
      "fn": "Controller.setRewards",
      "offset": [
        1213,
        1351
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6295": {
      "fn": "Controller.setRewards",
      "offset": [
        1290,
        1300
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 43,
      "value": "0x0"
    },
    "6297": {
      "fn": "Controller.setRewards",
      "offset": [
        1290,
        1300
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6304": {
      "op": "SHL"
    },
    "6305": {
      "op": "SUB"
    },
    "6306": {
      "fn": "Controller.setRewards",
      "offset": [
        1290,
        1300
      ],
      "op": "AND",
      "path": "9"
    },
    "6307": {
      "fn": "Controller.setRewards",
      "offset": [
        1276,
        1286
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6308": {
      "branch": 86,
      "fn": "Controller.setRewards",
      "offset": [
        1276,
        1300
      ],
      "op": "EQ",
      "path": "9"
    },
    "6309": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18E3"
    },
    "6312": {
      "branch": 86,
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6313": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6315": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6316": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6323": {
      "op": "SHL"
    },
    "6324": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6325": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6326": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6328": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6330": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6331": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "ADD",
      "path": "9"
    },
    "6332": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6333": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "6335": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "6337": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6338": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "ADD",
      "path": "9"
    },
    "6339": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6340": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6354": {
      "op": "SHL"
    },
    "6355": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "6357": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6358": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "ADD",
      "path": "9"
    },
    "6359": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6360": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6361": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6362": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6363": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6364": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6365": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "SUB",
      "path": "9"
    },
    "6366": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "6368": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "ADD",
      "path": "9"
    },
    "6369": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6370": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "REVERT",
      "path": "9"
    },
    "6371": {
      "fn": "Controller.setRewards",
      "offset": [
        1268,
        1316
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6372": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1333
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 44,
      "value": "0x3"
    },
    "6374": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6375": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6382": {
      "op": "SHL"
    },
    "6383": {
      "op": "SUB"
    },
    "6384": {
      "op": "NOT"
    },
    "6385": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "AND",
      "path": "9"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6392": {
      "op": "SHL"
    },
    "6393": {
      "op": "SUB"
    },
    "6394": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6395": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6396": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6397": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "AND",
      "path": "9"
    },
    "6398": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6399": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6400": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6401": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "OR",
      "path": "9"
    },
    "6402": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6403": {
      "fn": "Controller.setRewards",
      "offset": [
        1326,
        1344
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "6404": {
      "fn": "Controller.setRewards",
      "jump": "o",
      "offset": [
        1213,
        1351
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6405": {
      "fn": "Controller.withdraw",
      "offset": [
        6510,
        6688
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6412": {
      "op": "SHL"
    },
    "6413": {
      "op": "SUB"
    },
    "6414": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 45
    },
    "6415": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6416": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "AND",
      "path": "9"
    },
    "6417": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6419": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6420": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6421": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6422": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6606
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6424": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6426": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6427": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6429": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6430": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6431": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6432": {
      "fn": "Controller.withdraw",
      "offset": [
        6600,
        6614
      ],
      "op": "AND",
      "path": "9"
    },
    "6433": {
      "fn": "Controller.withdraw",
      "offset": [
        6586,
        6596
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6434": {
      "branch": 87,
      "fn": "Controller.withdraw",
      "offset": [
        6586,
        6614
      ],
      "op": "EQ",
      "path": "9"
    },
    "6435": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x195C"
    },
    "6438": {
      "branch": 87,
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6439": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6441": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6442": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6449": {
      "op": "SHL"
    },
    "6450": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6451": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6452": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6454": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6456": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6457": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "9"
    },
    "6458": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6459": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6"
    },
    "6461": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "6463": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6464": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "9"
    },
    "6465": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6466": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "6475": {
      "op": "SHL"
    },
    "6476": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "6478": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6479": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "9"
    },
    "6480": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6481": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6482": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6483": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6484": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6485": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6486": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "SUB",
      "path": "9"
    },
    "6487": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "6489": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "ADD",
      "path": "9"
    },
    "6490": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6491": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "REVERT",
      "path": "9"
    },
    "6492": {
      "fn": "Controller.withdraw",
      "offset": [
        6578,
        6625
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6499": {
      "op": "SHL"
    },
    "6500": {
      "op": "SUB"
    },
    "6501": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 46
    },
    "6502": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6503": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "AND",
      "path": "9"
    },
    "6504": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6506": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6507": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6508": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6509": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6654
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "6511": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6513": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6514": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6516": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6517": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6518": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6519": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6520": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6521": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6522": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "6527": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6529": {
      "op": "SHL"
    },
    "6530": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6531": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6532": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6534": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6535": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "ADD",
      "path": "9"
    },
    "6536": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP7",
      "path": "9"
    },
    "6537": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6538": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6539": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6540": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6541": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "6542": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "AND",
      "path": "9"
    },
    "6543": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6544": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6672
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x2E1A7D4D"
    },
    "6549": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6672
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6550": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "6552": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6553": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP5",
      "path": "9"
    },
    "6554": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "ADD",
      "path": "9"
    },
    "6555": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "6556": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6557": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "6558": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6559": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6560": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6561": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "SUB",
      "path": "9"
    },
    "6562": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "ADD",
      "path": "9"
    },
    "6563": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6564": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6565": {
      "fn": "Controller.withdraw",
      "offset": [
        6644,
        6662
      ],
      "op": "DUP8",
      "path": "9"
    },
    "6566": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6567": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "6568": {
      "fn": "Controller.withdraw",
      "offset": [
        6635,
        6681
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6569": {
      "op": "DUP1"
    },
    "6570": {
      "op": "ISZERO"
    },
    "6571": {
      "op": "PUSH2",
      "value": "0xCF9"
    },
    "6574": {
      "op": "JUMPI"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6577": {
      "op": "DUP1"
    },
    "6578": {
      "op": "REVERT"
    },
    "6579": {
      "offset": [
        619,
        642
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6580": {
      "fn": "Controller.withdraw",
      "offset": [
        619,
        642
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "6582": {
      "fn": "Controller.withdraw",
      "offset": [
        619,
        642
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6589": {
      "op": "SHL"
    },
    "6590": {
      "op": "SUB"
    },
    "6591": {
      "offset": [
        619,
        642
      ],
      "op": "AND",
      "path": "9"
    },
    "6592": {
      "fn": "Controller.withdraw",
      "offset": [
        619,
        642
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6593": {
      "fn": "Controller.withdraw",
      "jump": "o",
      "offset": [
        619,
        642
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6594": {
      "offset": [
        923,
        949
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6595": {
      "fn": "Controller.withdraw",
      "offset": [
        923,
        949
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x8"
    },
    "6597": {
      "fn": "Controller.withdraw",
      "offset": [
        923,
        949
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6598": {
      "fn": "Controller.withdraw",
      "offset": [
        923,
        949
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6599": {
      "fn": "Controller.withdraw",
      "jump": "o",
      "offset": [
        923,
        949
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6600": {
      "fn": "Controller.withdrawAll",
      "offset": [
        3969,
        4158
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6601": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4045,
        4055
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 47,
      "value": "0x1"
    },
    "6603": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4045,
        4055
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6610": {
      "op": "SHL"
    },
    "6611": {
      "op": "SUB"
    },
    "6612": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4045,
        4055
      ],
      "op": "AND",
      "path": "9"
    },
    "6613": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4031,
        4041
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6614": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4031,
        4055
      ],
      "op": "EQ",
      "path": "9"
    },
    "6615": {
      "branch": 88,
      "fn": "Controller.withdrawAll",
      "offset": [
        4031,
        4055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6616": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4031,
        4083
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x19EB"
    },
    "6619": {
      "branch": 88,
      "fn": "Controller.withdrawAll",
      "offset": [
        4031,
        4083
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6620": {
      "op": "POP"
    },
    "6621": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4073,
        4083
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6623": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4073,
        4083
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6630": {
      "op": "SHL"
    },
    "6631": {
      "op": "SUB"
    },
    "6632": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4073,
        4083
      ],
      "op": "AND",
      "path": "9"
    },
    "6633": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4059,
        4069
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6634": {
      "branch": 89,
      "fn": "Controller.withdrawAll",
      "offset": [
        4059,
        4083
      ],
      "op": "EQ",
      "path": "9"
    },
    "6635": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4031,
        4083
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6636": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A2A"
    },
    "6639": {
      "branch": 89,
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6640": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6642": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6643": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6650": {
      "op": "SHL"
    },
    "6651": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6652": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6653": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6655": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6657": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6658": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "ADD",
      "path": "9"
    },
    "6659": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6660": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "6662": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "6664": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6665": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "ADD",
      "path": "9"
    },
    "6666": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6667": {
      "op": "PUSH11",
      "value": "0x85CDD1C985D1959DA5CDD"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6681": {
      "op": "SHL"
    },
    "6682": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "6684": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6685": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "ADD",
      "path": "9"
    },
    "6686": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6687": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6688": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6689": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6690": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6691": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6692": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "SUB",
      "path": "9"
    },
    "6693": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "6695": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "ADD",
      "path": "9"
    },
    "6696": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6697": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "REVERT",
      "path": "9"
    },
    "6698": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4023,
        4099
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6705": {
      "op": "SHL"
    },
    "6706": {
      "op": "SUB"
    },
    "6707": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 48
    },
    "6708": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6709": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "AND",
      "path": "9"
    },
    "6710": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6712": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6713": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6714": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6715": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4128
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "6717": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6719": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6720": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6721": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6722": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6724": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6725": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6726": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6727": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6728": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6729": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6730": {
      "op": "PUSH4",
      "value": "0x429C145B"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6737": {
      "op": "SHL"
    },
    "6738": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6739": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6740": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "6741": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6742": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "6743": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "AND",
      "path": "9"
    },
    "6744": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "6745": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4149
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x853828B6"
    },
    "6750": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4149
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "6751": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6753": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6754": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "DUP5",
      "path": "9"
    },
    "6755": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "ADD",
      "path": "9"
    },
    "6756": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "6757": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "6758": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "DUP4",
      "path": "9"
    },
    "6759": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6760": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "SUB",
      "path": "9"
    },
    "6761": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "ADD",
      "path": "9"
    },
    "6762": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6763": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6764": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6765": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4118,
        4136
      ],
      "op": "DUP8",
      "path": "9"
    },
    "6766": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "DUP1",
      "path": "9"
    },
    "6767": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "6768": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6769": {
      "op": "DUP1"
    },
    "6770": {
      "op": "ISZERO"
    },
    "6771": {
      "op": "PUSH2",
      "value": "0x1A7B"
    },
    "6774": {
      "op": "JUMPI"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6777": {
      "op": "DUP1"
    },
    "6778": {
      "op": "REVERT"
    },
    "6779": {
      "op": "JUMPDEST"
    },
    "6780": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "POP",
      "path": "9"
    },
    "6781": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "GAS",
      "path": "9"
    },
    "6782": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "CALL",
      "path": "9"
    },
    "6783": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "6784": {
      "op": "DUP1"
    },
    "6785": {
      "op": "ISZERO"
    },
    "6786": {
      "op": "PUSH2",
      "value": "0x1A8F"
    },
    "6789": {
      "op": "JUMPI"
    },
    "6790": {
      "op": "RETURNDATASIZE"
    },
    "6791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6793": {
      "op": "DUP1"
    },
    "6794": {
      "op": "RETURNDATACOPY"
    },
    "6795": {
      "op": "RETURNDATASIZE"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6798": {
      "op": "REVERT"
    },
    "6799": {
      "op": "JUMPDEST"
    },
    "6800": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "POP",
      "path": "9"
    },
    "6801": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "POP",
      "path": "9"
    },
    "6802": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "POP",
      "path": "9"
    },
    "6803": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "POP",
      "path": "9"
    },
    "6804": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6806": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6807": {
      "fn": "Controller.withdrawAll",
      "offset": [
        4109,
        4151
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6810": {
      "op": "DUP2"
    },
    "6811": {
      "op": "LT"
    },
    "6812": {
      "op": "ISZERO"
    },
    "6813": {
      "op": "PUSH2",
      "value": "0x1AA5"
    },
    "6816": {
      "op": "JUMPI"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6819": {
      "op": "DUP1"
    },
    "6820": {
      "op": "REVERT"
    },
    "6821": {
      "op": "JUMPDEST"
    },
    "6822": {
      "op": "POP"
    },
    "6823": {
      "op": "POP"
    },
    "6824": {
      "op": "POP"
    },
    "6825": {
      "fn": "Controller.withdrawAll",
      "jump": "o",
      "offset": [
        3969,
        4158
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6826": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6827": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6829": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 49,
      "value": "0x1AEC"
    },
    "6832": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6833": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6834": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6836": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6837": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6838": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6840": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6841": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6843": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6844": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6845": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "6847": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6848": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6849": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6851": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6852": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6885": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6886": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6887": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "6888": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CF5"
    },
    "6891": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6892": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6893": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6894": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "6895": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6896": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6897": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6898": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "6899": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "6900": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6901": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6902": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 50
    },
    "6903": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6904": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6905": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B7B"
    },
    "6908": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6912": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6913": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6914": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6921": {
      "op": "SHL"
    },
    "6922": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6923": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6924": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "6925": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6927": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6928": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "6929": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6936": {
      "op": "SHL"
    },
    "6937": {
      "op": "SUB"
    },
    "6938": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6939": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6940": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "6941": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "6943": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6944": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "6945": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6946": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6947": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6948": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6949": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6950": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "AND",
      "path": "6"
    },
    "6951": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6952": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "6957": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6958": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "6960": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6961": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6962": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "6963": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6964": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6966": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6967": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6968": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6969": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6970": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6971": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6972": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "6973": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "6974": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6975": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6976": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6977": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "6978": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6979": {
      "op": "DUP1"
    },
    "6980": {
      "op": "ISZERO"
    },
    "6981": {
      "op": "PUSH2",
      "value": "0x1B4D"
    },
    "6984": {
      "op": "JUMPI"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6987": {
      "op": "DUP1"
    },
    "6988": {
      "op": "REVERT"
    },
    "6989": {
      "op": "JUMPDEST"
    },
    "6990": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "6991": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "GAS",
      "path": "6"
    },
    "6992": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "6993": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6994": {
      "op": "DUP1"
    },
    "6995": {
      "op": "ISZERO"
    },
    "6996": {
      "op": "PUSH2",
      "value": "0x1B61"
    },
    "6999": {
      "op": "JUMPI"
    },
    "7000": {
      "op": "RETURNDATASIZE"
    },
    "7001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7003": {
      "op": "DUP1"
    },
    "7004": {
      "op": "RETURNDATACOPY"
    },
    "7005": {
      "op": "RETURNDATASIZE"
    },
    "7006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7008": {
      "op": "REVERT"
    },
    "7009": {
      "op": "JUMPDEST"
    },
    "7010": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7011": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7012": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7013": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7014": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7016": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7017": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7020": {
      "op": "DUP2"
    },
    "7021": {
      "op": "LT"
    },
    "7022": {
      "op": "ISZERO"
    },
    "7023": {
      "op": "PUSH2",
      "value": "0x1B77"
    },
    "7026": {
      "op": "JUMPI"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7029": {
      "op": "DUP1"
    },
    "7030": {
      "op": "REVERT"
    },
    "7031": {
      "op": "JUMPDEST"
    },
    "7032": {
      "op": "POP"
    },
    "7033": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7034": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7035": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7036": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BB6"
    },
    "7039": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7040": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7042": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7049": {
      "op": "SHL"
    },
    "7050": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7051": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7052": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7054": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7055": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7056": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7057": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7059": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7060": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7061": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7062": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7063": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7064": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7065": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7067": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7068": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7069": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7071": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7072": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7073": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2037"
    },
    "7076": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7078": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7079": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "7080": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7082": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7083": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7084": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7085": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7086": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7088": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7089": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7090": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7091": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7092": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7093": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7094": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7095": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 51,
      "value": "0x40"
    },
    "7097": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7098": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7105": {
      "op": "SHL"
    },
    "7106": {
      "op": "SUB"
    },
    "7107": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7108": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "AND",
      "path": "6"
    },
    "7109": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7111": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7112": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7113": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7114": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7116": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7117": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7118": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7119": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7120": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7121": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7122": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7123": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7124": {
      "op": "DUP1"
    },
    "7125": {
      "op": "DUP4"
    },
    "7126": {
      "op": "SUB"
    },
    "7127": {
      "op": "SWAP1"
    },
    "7128": {
      "op": "SWAP2"
    },
    "7129": {
      "op": "ADD"
    },
    "7130": {
      "op": "DUP2"
    },
    "7131": {
      "op": "MSTORE"
    },
    "7132": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7134": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7135": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7136": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7137": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7138": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7139": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7140": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7142": {
      "op": "DUP2"
    },
    "7143": {
      "op": "ADD"
    },
    "7144": {
      "op": "DUP1"
    },
    "7145": {
      "op": "MLOAD"
    },
    "7146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7152": {
      "op": "SHL"
    },
    "7153": {
      "op": "SUB"
    },
    "7154": {
      "op": "AND"
    },
    "7155": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7160": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7162": {
      "op": "SHL"
    },
    "7163": {
      "op": "OR"
    },
    "7164": {
      "op": "SWAP1"
    },
    "7165": {
      "op": "MSTORE"
    },
    "7166": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AA5"
    },
    "7169": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7170": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7171": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7172": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D8C"
    },
    "7175": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7176": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7177": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7179": {
      "branch": 94,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7180": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C17"
    },
    "7183": {
      "branch": 94,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7184": {
      "op": "POP"
    },
    "7185": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 52,
      "value": "0x0"
    },
    "7187": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AEF"
    },
    "7190": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7191": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7192": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7193": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7194": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "7195": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7196": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7197": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7198": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7199": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 53,
      "value": "0x1C24"
    },
    "7202": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7203": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "7204": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7205": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "7206": {
      "branch": 95,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "7207": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AEC"
    },
    "7210": {
      "branch": 95,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7211": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7213": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7220": {
      "op": "SHL"
    },
    "7221": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7222": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7223": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7225": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7226": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7227": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7228": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7230": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7231": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7232": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7233": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7234": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7235": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7236": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7238": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7239": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7240": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7242": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7243": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7244": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FEC"
    },
    "7247": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "7249": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7250": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "7251": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7253": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "7254": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7255": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7256": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "7257": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7259": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7260": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7261": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7262": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "7263": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7264": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7265": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7266": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7268": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 54,
      "value": "0x1AEC"
    },
    "7271": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7272": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7273": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7275": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7276": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7277": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7279": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7280": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7282": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7283": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7284": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "7286": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7287": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7288": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7290": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7291": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "7324": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7325": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7326": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "7327": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4A"
    },
    "7330": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7331": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7332": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 55,
      "value": "0x40"
    },
    "7334": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7335": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7342": {
      "op": "SHL"
    },
    "7343": {
      "op": "SUB"
    },
    "7344": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7345": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "7346": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7348": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7349": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7350": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7355": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7356": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7357": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7358": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7359": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7360": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7361": {
      "op": "DUP1"
    },
    "7362": {
      "op": "DUP4"
    },
    "7363": {
      "op": "SUB"
    },
    "7364": {
      "op": "SWAP1"
    },
    "7365": {
      "op": "SWAP2"
    },
    "7366": {
      "op": "ADD"
    },
    "7367": {
      "op": "DUP2"
    },
    "7368": {
      "op": "MSTORE"
    },
    "7369": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7371": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7372": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7373": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7374": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7375": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7376": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7377": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7379": {
      "op": "DUP2"
    },
    "7380": {
      "op": "ADD"
    },
    "7381": {
      "op": "DUP1"
    },
    "7382": {
      "op": "MLOAD"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7389": {
      "op": "SHL"
    },
    "7390": {
      "op": "SUB"
    },
    "7391": {
      "op": "AND"
    },
    "7392": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7399": {
      "op": "SHL"
    },
    "7400": {
      "op": "OR"
    },
    "7401": {
      "op": "SWAP1"
    },
    "7402": {
      "op": "MSTORE"
    },
    "7403": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AA5"
    },
    "7406": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7407": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7408": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7409": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D8C"
    },
    "7412": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7413": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7414": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7416": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 56
    },
    "7417": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7418": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7419": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "7420": {
      "branch": 96,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7421": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D84"
    },
    "7424": {
      "branch": 96,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7425": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7427": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7434": {
      "op": "SHL"
    },
    "7435": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7436": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7437": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7439": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7440": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7441": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7442": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7444": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7445": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7446": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7447": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7448": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7449": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7450": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7451": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7452": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7453": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7454": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7455": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7456": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7458": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7459": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7460": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7461": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7462": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7463": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7464": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7466": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7467": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7468": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7469": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7470": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7473": {
      "op": "JUMPDEST"
    },
    "7474": {
      "op": "DUP4"
    },
    "7475": {
      "op": "DUP2"
    },
    "7476": {
      "op": "LT"
    },
    "7477": {
      "op": "ISZERO"
    },
    "7478": {
      "op": "PUSH2",
      "value": "0x1D49"
    },
    "7481": {
      "op": "JUMPI"
    },
    "7482": {
      "op": "DUP2"
    },
    "7483": {
      "op": "DUP2"
    },
    "7484": {
      "op": "ADD"
    },
    "7485": {
      "op": "MLOAD"
    },
    "7486": {
      "op": "DUP4"
    },
    "7487": {
      "op": "DUP3"
    },
    "7488": {
      "op": "ADD"
    },
    "7489": {
      "op": "MSTORE"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7492": {
      "op": "ADD"
    },
    "7493": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7496": {
      "op": "JUMP"
    },
    "7497": {
      "op": "JUMPDEST"
    },
    "7498": {
      "op": "POP"
    },
    "7499": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7500": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7501": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7502": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7503": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7504": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7505": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7506": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7507": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7508": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7510": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "7511": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7512": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7513": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D76"
    },
    "7516": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7517": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7518": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7519": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7520": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7521": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7522": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7524": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7525": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7527": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7528": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7531": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "7532": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7533": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "7534": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "7535": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7536": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7537": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7539": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7540": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7541": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7542": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7543": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7544": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7545": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7546": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7547": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7548": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7550": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7551": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7552": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7553": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7554": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7555": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7556": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7557": {
      "op": "POP"
    },
    "7558": {
      "op": "POP"
    },
    "7559": {
      "op": "POP"
    },
    "7560": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7561": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "7562": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7563": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7564": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7565": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 57,
      "value": "0x1D9E"
    },
    "7568": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7575": {
      "op": "SHL"
    },
    "7576": {
      "op": "SUB"
    },
    "7577": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "7578": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FAF"
    },
    "7581": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7582": {
      "branch": 90,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7583": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DEF"
    },
    "7586": {
      "branch": 90,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7587": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7589": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7590": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7591": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7597": {
      "op": "SHL"
    },
    "7598": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7599": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7600": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7602": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7604": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7605": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7606": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7607": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "7609": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7611": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7612": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7613": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7614": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "7647": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7649": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7650": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7651": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7652": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7653": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7654": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7655": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7656": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7657": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "7658": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7660": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7661": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7662": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7663": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7664": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7666": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7668": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7675": {
      "op": "SHL"
    },
    "7676": {
      "op": "SUB"
    },
    "7677": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "7678": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7679": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7681": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7682": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7683": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7684": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7685": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7686": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7687": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7689": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "7690": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7691": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7692": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7693": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7694": {
      "op": "JUMPDEST"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7697": {
      "op": "DUP4"
    },
    "7698": {
      "op": "LT"
    },
    "7699": {
      "op": "PUSH2",
      "value": "0x1E2D"
    },
    "7702": {
      "op": "JUMPI"
    },
    "7703": {
      "op": "DUP1"
    },
    "7704": {
      "op": "MLOAD"
    },
    "7705": {
      "op": "DUP3"
    },
    "7706": {
      "op": "MSTORE"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7709": {
      "op": "NOT"
    },
    "7710": {
      "op": "SWAP1"
    },
    "7711": {
      "op": "SWAP3"
    },
    "7712": {
      "op": "ADD"
    },
    "7713": {
      "op": "SWAP2"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7716": {
      "op": "SWAP2"
    },
    "7717": {
      "op": "DUP3"
    },
    "7718": {
      "op": "ADD"
    },
    "7719": {
      "op": "SWAP2"
    },
    "7720": {
      "op": "ADD"
    },
    "7721": {
      "op": "PUSH2",
      "value": "0x1E0E"
    },
    "7724": {
      "op": "JUMP"
    },
    "7725": {
      "op": "JUMPDEST"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7728": {
      "op": "DUP4"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7731": {
      "op": "SUB"
    },
    "7732": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7735": {
      "op": "EXP"
    },
    "7736": {
      "op": "SUB"
    },
    "7737": {
      "op": "DUP1"
    },
    "7738": {
      "op": "NOT"
    },
    "7739": {
      "op": "DUP3"
    },
    "7740": {
      "op": "MLOAD"
    },
    "7741": {
      "op": "AND"
    },
    "7742": {
      "op": "DUP2"
    },
    "7743": {
      "op": "DUP5"
    },
    "7744": {
      "op": "MLOAD"
    },
    "7745": {
      "op": "AND"
    },
    "7746": {
      "op": "DUP1"
    },
    "7747": {
      "op": "DUP3"
    },
    "7748": {
      "op": "OR"
    },
    "7749": {
      "op": "DUP6"
    },
    "7750": {
      "op": "MSTORE"
    },
    "7751": {
      "op": "POP"
    },
    "7752": {
      "op": "POP"
    },
    "7753": {
      "op": "POP"
    },
    "7754": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7755": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7756": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7757": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7758": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7759": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "7760": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7761": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7762": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7763": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7765": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7767": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7768": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7769": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7770": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "7771": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7772": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7774": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7775": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "7776": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "7777": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7778": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7779": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7780": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7781": {
      "op": "DUP1"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7784": {
      "op": "DUP2"
    },
    "7785": {
      "op": "EQ"
    },
    "7786": {
      "op": "PUSH2",
      "value": "0x1E8F"
    },
    "7789": {
      "op": "JUMPI"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7792": {
      "op": "MLOAD"
    },
    "7793": {
      "op": "SWAP2"
    },
    "7794": {
      "op": "POP"
    },
    "7795": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7797": {
      "op": "NOT"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7800": {
      "op": "RETURNDATASIZE"
    },
    "7801": {
      "op": "ADD"
    },
    "7802": {
      "op": "AND"
    },
    "7803": {
      "op": "DUP3"
    },
    "7804": {
      "op": "ADD"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7807": {
      "op": "MSTORE"
    },
    "7808": {
      "op": "RETURNDATASIZE"
    },
    "7809": {
      "op": "DUP3"
    },
    "7810": {
      "op": "MSTORE"
    },
    "7811": {
      "op": "RETURNDATASIZE"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7816": {
      "op": "DUP5"
    },
    "7817": {
      "op": "ADD"
    },
    "7818": {
      "op": "RETURNDATACOPY"
    },
    "7819": {
      "op": "PUSH2",
      "value": "0x1E94"
    },
    "7822": {
      "op": "JUMP"
    },
    "7823": {
      "op": "JUMPDEST"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7826": {
      "op": "SWAP2"
    },
    "7827": {
      "op": "POP"
    },
    "7828": {
      "op": "JUMPDEST"
    },
    "7829": {
      "op": "POP"
    },
    "7830": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7831": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7832": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7833": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "7834": {
      "branch": 91,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 58
    },
    "7835": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EEB"
    },
    "7838": {
      "branch": 91,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7839": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7841": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7842": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7849": {
      "op": "SHL"
    },
    "7850": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7851": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7852": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7854": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7856": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7857": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "7858": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7859": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7860": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7861": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7863": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7864": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "7865": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7866": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "7899": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7901": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7902": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "7903": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7904": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7905": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7906": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7907": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7908": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7909": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "7910": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7912": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "7913": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7914": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7915": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7916": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7917": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7918": {
      "branch": 92,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7919": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F44"
    },
    "7922": {
      "branch": 92,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7923": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 59
    },
    "7924": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7925": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7927": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "7928": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7929": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7932": {
      "op": "DUP2"
    },
    "7933": {
      "op": "LT"
    },
    "7934": {
      "op": "ISZERO"
    },
    "7935": {
      "op": "PUSH2",
      "value": "0x1F07"
    },
    "7938": {
      "op": "JUMPI"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7941": {
      "op": "DUP1"
    },
    "7942": {
      "op": "REVERT"
    },
    "7943": {
      "op": "JUMPDEST"
    },
    "7944": {
      "op": "POP"
    },
    "7945": {
      "branch": 93,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7946": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F44"
    },
    "7949": {
      "branch": 93,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7950": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7952": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7959": {
      "op": "SHL"
    },
    "7960": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7961": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7962": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7964": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "7965": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7966": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7967": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7969": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "7970": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7971": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7972": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "7973": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7974": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7975": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "7977": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7978": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7979": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7981": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "7982": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7983": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x200D"
    },
    "7986": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "7988": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7989": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "7990": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7992": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "7993": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7994": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "7995": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "7996": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7998": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7999": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8000": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8001": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8002": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8003": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8004": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8005": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "POP",
      "path": "6"
    },
    "8006": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "POP",
      "path": "6"
    },
    "8007": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "POP",
      "path": "6"
    },
    "8008": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "POP",
      "path": "6"
    },
    "8009": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "o",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8010": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8011": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8013": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 60
    },
    "8014": {
      "branch": 97,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8015": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F99"
    },
    "8018": {
      "branch": 97,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8019": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8021": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8022": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8028": {
      "op": "SHL"
    },
    "8029": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8030": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8031": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8033": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8035": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8036": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8037": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8038": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8039": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8040": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8041": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8042": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "8044": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8045": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8046": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8047": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8048": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8049": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8050": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8051": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8052": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8053": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "8055": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8056": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8057": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8058": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8059": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8060": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8061": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "8062": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8063": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8064": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8065": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8066": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8068": {
      "op": "DUP4"
    },
    "8069": {
      "op": "ISZERO"
    },
    "8070": {
      "op": "PUSH2",
      "value": "0x1D49"
    },
    "8073": {
      "op": "JUMPI"
    },
    "8074": {
      "op": "DUP2"
    },
    "8075": {
      "op": "DUP2"
    },
    "8076": {
      "op": "ADD"
    },
    "8077": {
      "op": "MLOAD"
    },
    "8078": {
      "op": "DUP4"
    },
    "8079": {
      "op": "DUP3"
    },
    "8080": {
      "op": "ADD"
    },
    "8081": {
      "op": "MSTORE"
    },
    "8082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8084": {
      "op": "ADD"
    },
    "8085": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "8088": {
      "op": "JUMP"
    },
    "8089": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8090": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "8091": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8093": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8094": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8095": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8096": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA5"
    },
    "8099": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8100": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "8101": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8102": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "8103": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "8104": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "8105": {
      "op": "POP"
    },
    "8106": {
      "op": "POP"
    },
    "8107": {
      "op": "POP"
    },
    "8108": {
      "op": "POP"
    },
    "8109": {
      "op": "POP"
    },
    "8110": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8111": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8112": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8114": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8115": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "8116": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "8149": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 61
    },
    "8150": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8151": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "8152": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8153": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8154": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8155": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FE3"
    },
    "8158": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8159": {
      "op": "POP"
    },
    "8160": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8161": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8162": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8163": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8164": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8165": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8166": {
      "op": "POP"
    },
    "8167": {
      "op": "POP"
    },
    "8168": {
      "op": "POP"
    },
    "8169": {
      "op": "POP"
    },
    "8170": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "6670d4f89a382258c5d398fbb9b0f60fd7039939",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.16;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../../interfaces/yearn/Converter.sol\";\nimport \"../../interfaces/yearn/OneSplitAudit.sol\";\nimport \"../../interfaces/yearn/Strategy.sol\";\n\ncontract Controller {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    address public governance;\n    address public strategist;\n\n    address public onesplit;\n    address public rewards;\n    mapping(address => address) public vaults;\n    mapping(address => address) public strategies;\n    mapping(address => mapping(address => address)) public converters;\n\n    mapping(address => mapping(address => bool)) public approvedStrategies;\n\n    uint256 public split = 500;\n    uint256 public constant max = 10000;\n\n    constructor(address _rewards) public {\n        governance = msg.sender;\n        strategist = msg.sender;\n        onesplit = address(0x50FDA034C0Ce7a8f7EFDAebDA7Aa7cA21CC1267e);\n        rewards = _rewards;\n    }\n\n    function setRewards(address _rewards) public {\n        require(msg.sender == governance, \"!governance\");\n        rewards = _rewards;\n    }\n\n    function setStrategist(address _strategist) public {\n        require(msg.sender == governance, \"!governance\");\n        strategist = _strategist;\n    }\n\n    function setSplit(uint256 _split) public {\n        require(msg.sender == governance, \"!governance\");\n        split = _split;\n    }\n\n    function setOneSplit(address _onesplit) public {\n        require(msg.sender == governance, \"!governance\");\n        onesplit = _onesplit;\n    }\n\n    function setGovernance(address _governance) public {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setVault(address _token, address _vault) public {\n        require(msg.sender == strategist || msg.sender == governance, \"!strategist\");\n        require(vaults[_token] == address(0), \"vault\");\n        vaults[_token] = _vault;\n    }\n\n    function approveStrategy(address _token, address _strategy) public {\n        require(msg.sender == governance, \"!governance\");\n        approvedStrategies[_token][_strategy] = true;\n    }\n\n    function revokeStrategy(address _token, address _strategy) public {\n        require(msg.sender == governance, \"!governance\");\n        approvedStrategies[_token][_strategy] = false;\n    }\n\n    function setConverter(\n        address _input,\n        address _output,\n        address _converter\n    ) public {\n        require(msg.sender == strategist || msg.sender == governance, \"!strategist\");\n        converters[_input][_output] = _converter;\n    }\n\n    function setStrategy(address _token, address _strategy) public {\n        require(msg.sender == strategist || msg.sender == governance, \"!strategist\");\n        require(approvedStrategies[_token][_strategy] == true, \"!approved\");\n\n        address _current = strategies[_token];\n        if (_current != address(0)) {\n            Strategy(_current).withdrawAll();\n        }\n        strategies[_token] = _strategy;\n    }\n\n    function earn(address _token, uint256 _amount) public {\n        address _strategy = strategies[_token];\n        address _want = Strategy(_strategy).want();\n        if (_want != _token) {\n            address converter = converters[_token][_want];\n            IERC20(_token).safeTransfer(converter, _amount);\n            _amount = Converter(converter).convert(_strategy);\n            IERC20(_want).safeTransfer(_strategy, _amount);\n        } else {\n            IERC20(_token).safeTransfer(_strategy, _amount);\n        }\n        Strategy(_strategy).deposit();\n    }\n\n    function balanceOf(address _token) external view returns (uint256) {\n        return Strategy(strategies[_token]).balanceOf();\n    }\n\n    function withdrawAll(address _token) public {\n        require(msg.sender == strategist || msg.sender == governance, \"!strategist\");\n        Strategy(strategies[_token]).withdrawAll();\n    }\n\n    function inCaseTokensGetStuck(address _token, uint256 _amount) public {\n        require(msg.sender == strategist || msg.sender == governance, \"!governance\");\n        IERC20(_token).safeTransfer(msg.sender, _amount);\n    }\n\n    function inCaseStrategyTokenGetStuck(address _strategy, address _token) public {\n        require(msg.sender == strategist || msg.sender == governance, \"!governance\");\n        Strategy(_strategy).withdraw(_token);\n    }\n\n    function getExpectedReturn(\n        address _strategy,\n        address _token,\n        uint256 parts\n    ) public view returns (uint256 expected) {\n        uint256 _balance = IERC20(_token).balanceOf(_strategy);\n        address _want = Strategy(_strategy).want();\n        (expected, ) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _balance, parts, 0);\n    }\n\n    // Only allows to withdraw non-core strategy tokens ~ this is over and above normal yield\n    function yearn(\n        address _strategy,\n        address _token,\n        uint256 parts\n    ) public {\n        require(msg.sender == strategist || msg.sender == governance, \"!governance\");\n        // This contract should never have value in it, but just incase since this is a public call\n        uint256 _before = IERC20(_token).balanceOf(address(this));\n        Strategy(_strategy).withdraw(_token);\n        uint256 _after = IERC20(_token).balanceOf(address(this));\n        if (_after > _before) {\n            uint256 _amount = _after.sub(_before);\n            address _want = Strategy(_strategy).want();\n            uint256[] memory _distribution;\n            uint256 _expected;\n            _before = IERC20(_want).balanceOf(address(this));\n            IERC20(_token).safeApprove(onesplit, 0);\n            IERC20(_token).safeApprove(onesplit, _amount);\n            (_expected, _distribution) = OneSplitAudit(onesplit).getExpectedReturn(_token, _want, _amount, parts, 0);\n            OneSplitAudit(onesplit).swap(_token, _want, _amount, _expected, _distribution, 0);\n            _after = IERC20(_want).balanceOf(address(this));\n            if (_after > _before) {\n                _amount = _after.sub(_before);\n                uint256 _reward = _amount.mul(split).div(max);\n                earn(_want, _amount.sub(_reward));\n                IERC20(_want).safeTransfer(rewards, _reward);\n            }\n        }\n    }\n\n    function withdraw(address _token, uint256 _amount) public {\n        require(msg.sender == vaults[_token], \"!vault\");\n        Strategy(strategies[_token]).withdraw(_amount);\n    }\n}\n",
  "sourceMap": "434:6256:9:-;;;946:3;923:26;;997:210;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:210:9;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;997:210:9;1044:10;:23;;-1:-1:-1;;;;;;1044:23:9;;;1057:10;1044:23;;;;;;;1077;;;;;;;;;;1110:8;:62;;;;1129:42;1110:62;;;1182:7;:18;;-1:-1:-1;;;;;1182:18:9;;;;;;;;;;;;;434:6256;;;;;;",
  "sourcePath": "contracts/controllers/Controller.sol",
  "type": "contract"
}