{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "addDelegatedVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "addVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "addWrappedVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "getVaultInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isWrapped",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isDelegated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVaults",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVaultsInfo",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "controllerArray",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "tokenArray",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "strategyArray",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "isWrappedArray",
          "type": "bool[]"
        },
        {
          "internalType": "bool[]",
          "name": "isDelegatedArray",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVaultsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDelegatedVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingGovernance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingGovernance",
          "type": "address"
        }
      ],
      "name": "setPendingGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "10": "contracts/registries/YRegistry.sol",
    "7": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
    "8": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/EnumerableSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/registries/YRegistry.sol",
    "exportedSymbols": {
      "YRegistry": [
        1458
      ]
    },
    "id": 1459,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 773,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:10"
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 774,
        "nodeType": "ImportDirective",
        "scope": 1459,
        "sourceUnit": 15223,
        "src": "59:53:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 775,
        "nodeType": "ImportDirective",
        "scope": 1459,
        "sourceUnit": 15587,
        "src": "113:53:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelinV2/contracts/utils/EnumerableSet.sol",
        "id": 776,
        "nodeType": "ImportDirective",
        "scope": 1459,
        "sourceUnit": 15882,
        "src": "167:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 777,
        "nodeType": "ImportDirective",
        "scope": 1459,
        "sourceUnit": 15932,
        "src": "228:48:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IStrategy.sol",
        "file": "../../interfaces/yearn/IStrategy.sol",
        "id": 778,
        "nodeType": "ImportDirective",
        "scope": 1459,
        "sourceUnit": 15966,
        "src": "277:46:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IVault.sol",
        "file": "../../interfaces/yearn/IVault.sol",
        "id": 779,
        "nodeType": "ImportDirective",
        "scope": 1459,
        "sourceUnit": 16009,
        "src": "324:43:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IWrappedVault.sol",
        "file": "../../interfaces/yearn/IWrappedVault.sol",
        "id": 780,
        "nodeType": "ImportDirective",
        "scope": 1459,
        "sourceUnit": 16047,
        "src": "368:50:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1458,
        "linearizedBaseContracts": [
          1458
        ],
        "name": "YRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 783,
            "libraryName": {
              "contractScope": null,
              "id": 781,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15586,
              "src": "451:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$15586",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "445:26:10",
            "typeName": {
              "id": 782,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "463:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 786,
            "libraryName": {
              "contractScope": null,
              "id": 784,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15222,
              "src": "482:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$15222",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "476:27:10",
            "typeName": {
              "id": 785,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "495:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 789,
            "libraryName": {
              "contractScope": null,
              "id": 787,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15881,
              "src": "514:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$15881",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "508:49:10",
            "typeName": {
              "contractScope": null,
              "id": 788,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15676,
              "src": "532:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$15676_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": false,
            "id": 791,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 1458,
            "src": "563:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 790,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "563:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 793,
            "name": "pendingGovernance",
            "nodeType": "VariableDeclaration",
            "scope": 1458,
            "src": "594:32:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 792,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "594:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 795,
            "name": "vaults",
            "nodeType": "VariableDeclaration",
            "scope": 1458,
            "src": "633:39:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 794,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15676,
              "src": "633:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$15676_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 797,
            "name": "controllers",
            "nodeType": "VariableDeclaration",
            "scope": 1458,
            "src": "678:44:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 796,
              "name": "EnumerableSet.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15676,
              "src": "678:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$15676_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 801,
            "name": "wrappedVaults",
            "nodeType": "VariableDeclaration",
            "scope": 1458,
            "src": "729:49:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 800,
              "keyType": {
                "id": 798,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "737:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "729:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 799,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "748:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 805,
            "name": "isDelegatedVault",
            "nodeType": "VariableDeclaration",
            "scope": 1458,
            "src": "785:48:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 804,
              "keyType": {
                "id": 802,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "793:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "785:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 803,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "804:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 823,
              "nodeType": "Block",
              "src": "880:107:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 811,
                          "name": "_governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "898:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "921:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "913:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "913:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "898:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d697373696e6720476f7665726e616e6365",
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "925:20:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45ea615f0e9962cd03526c4a1fb700afb1f51eea208079264719f0955757cb9a",
                          "typeString": "literal_string \"Missing Governance\""
                        },
                        "value": "Missing Governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45ea615f0e9962cd03526c4a1fb700afb1f51eea208079264719f0955757cb9a",
                          "typeString": "literal_string \"Missing Governance\""
                        }
                      ],
                      "id": 810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "890:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "890:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "890:56:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 819,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "956:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 820,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "969:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "956:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "956:24:10"
                }
              ]
            },
            "documentation": null,
            "id": 824,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "852:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "851:21:10"
            },
            "returnParameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:0:10"
            },
            "scope": 1458,
            "src": "840:147:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "1050:35:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "595265676973747279",
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1067:11:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_962d8d9332ec7ec42cc62fabb2b026ef6d00a731307b34a1dd08854b92809193",
                      "typeString": "literal_string \"YRegistry\""
                    },
                    "value": "YRegistry"
                  },
                  "functionReturnParameters": 828,
                  "id": 830,
                  "nodeType": "Return",
                  "src": "1060:18:10"
                }
              ]
            },
            "documentation": null,
            "id": 832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:10"
            },
            "returnParameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1035:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:15:10"
            },
            "scope": 1458,
            "src": "993:92:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "1147:131:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 840,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "1166:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 839,
                      "name": "setVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "1157:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:16:10"
                },
                {
                  "assignments": [
                    844,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "scope": 853,
                      "src": "1185:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1185:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 848,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 846,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "1228:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 845,
                      "name": "getVaultData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "1215:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "function (address) view returns (address,address,address,bool,bool)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1184:51:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 850,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "1260:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 849,
                      "name": "setController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "1246:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:25:10"
                }
              ]
            },
            "documentation": null,
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 837,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 836,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1445,
                  "src": "1132:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:14:10"
              }
            ],
            "name": "addVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "1109:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1108:16:10"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:0:10"
            },
            "scope": 1458,
            "src": "1091:187:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "1347:414:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 862,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "1366:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 861,
                      "name": "setVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "1357:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:16:10"
                },
                {
                  "assignments": [
                    866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 866,
                      "name": "wrappedVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 888,
                      "src": "1383:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 865,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1383:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 872,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 868,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "1420:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 867,
                          "name": "IWrappedVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16046,
                          "src": "1406:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWrappedVault_$16046_$",
                            "typeString": "type(contract IWrappedVault)"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWrappedVault_$16046",
                          "typeString": "contract IWrappedVault"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16040,
                      "src": "1406:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1383:52:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 874,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "1461:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 875,
                        "name": "wrappedVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "1469:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 873,
                      "name": "setWrappedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "1445:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 877,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:37:10"
                },
                {
                  "assignments": [
                    879,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 879,
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "scope": 888,
                      "src": "1494:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 878,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1494:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 883,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 881,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 856,
                        "src": "1537:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 880,
                      "name": "getVaultData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "1524:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "function (address) view returns (address,address,address,bool,bool)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1493:51:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 885,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "1606:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 884,
                      "name": "setController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "1592:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:25:10"
                }
              ]
            },
            "documentation": null,
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 859,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 858,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1445,
                  "src": "1332:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1332:14:10"
              }
            ],
            "name": "addWrappedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1309:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1308:16:10"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1347:0:10"
            },
            "scope": 1458,
            "src": "1284:477:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "1832:340:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 897,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "1851:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 896,
                      "name": "setVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "1842:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:16:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 901,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "1886:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 900,
                      "name": "setDelegatedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "1868:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:25:10"
                },
                {
                  "assignments": [
                    905,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 905,
                      "name": "controller",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "1905:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 904,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1905:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 909,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 907,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "1948:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 906,
                      "name": "getVaultData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "1935:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "function (address) view returns (address,address,address,bool,bool)"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1904:51:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 911,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "2017:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 910,
                      "name": "setController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "2003:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:25:10"
                }
              ]
            },
            "documentation": null,
            "id": 915,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 894,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 893,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1445,
                  "src": "1817:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1817:14:10"
              }
            ],
            "name": "addDelegatedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "1794:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1793:16:10"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:0:10"
            },
            "scope": 1458,
            "src": "1767:405:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "2221:264:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 921,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 917,
                            "src": "2239:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15538,
                          "src": "2239:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2239:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5661756c74206973206e6f74206120636f6e7472616374",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:25:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b61d42454773f334f65e71e5c1fc77de617e9e1369b9ead17791de36a255dc42",
                          "typeString": "literal_string \"Vault is not a contract\""
                        },
                        "value": "Vault is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b61d42454773f334f65e71e5c1fc77de617e9e1369b9ead17791de36a255dc42",
                          "typeString": "literal_string \"Vault is not a contract\""
                        }
                      ],
                      "id": 920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "2231:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2231:55:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "2231:55:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2355:24:10",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 930,
                              "name": "_vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "2372:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 928,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "2356:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "contains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15808,
                            "src": "2356:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2356:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5661756c7420616c726561647920657869737473",
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2381:22:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0999fb05a1dd68f23363525f070b845ff85dd897a9c25a08bb1f7d5db13d8b1",
                          "typeString": "literal_string \"Vault already exists\""
                        },
                        "value": "Vault already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0999fb05a1dd68f23363525f070b845ff85dd897a9c25a08bb1f7d5db13d8b1",
                          "typeString": "literal_string \"Vault already exists\""
                        }
                      ],
                      "id": 927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "2347:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:57:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:57:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 939,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "2471:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 936,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "2460:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 938,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15710,
                      "src": "2460:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$15676_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2460:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "2460:18:10"
                }
              ]
            },
            "documentation": null,
            "id": 943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "2196:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2195:16:10"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:0:10"
            },
            "scope": 1458,
            "src": "2178:307:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "2564:133:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 951,
                            "name": "_wrappedVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 947,
                            "src": "2582:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15538,
                          "src": "2582:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2582:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "577261707065645661756c74206973206e6f74206120636f6e7472616374",
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:32:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2531cb441c3145628d812cd291e20ccdd41aa5e6af3a099b2b21f46e155d22fb",
                          "typeString": "literal_string \"WrappedVault is not a contract\""
                        },
                        "value": "WrappedVault is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2531cb441c3145628d812cd291e20ccdd41aa5e6af3a099b2b21f46e155d22fb",
                          "typeString": "literal_string \"WrappedVault is not a contract\""
                        }
                      ],
                      "id": 950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "2574:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2574:69:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "ExpressionStatement",
                  "src": "2574:69:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 957,
                        "name": "wrappedVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "2653:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 959,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 958,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "2667:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2653:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 960,
                      "name": "_wrappedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 947,
                      "src": "2677:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2653:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "2653:37:10"
                }
              ]
            },
            "documentation": null,
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWrappedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 945,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "2516:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 947,
                  "name": "_wrappedVault",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "2532:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2515:39:10"
            },
            "returnParameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2564:0:10"
            },
            "scope": 1458,
            "src": "2491:206:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 975,
              "nodeType": "Block",
              "src": "2755:114:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 969,
                        "name": "isDelegatedVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "2831:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 971,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 970,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "2848:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2831:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2858:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2831:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "2831:31:10"
                }
              ]
            },
            "documentation": null,
            "id": 976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDelegatedVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "2730:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2730:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2729:16:10"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2755:0:10"
            },
            "scope": 1458,
            "src": "2703:166:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "2928:157:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2990:34:10",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 983,
                          "name": "_controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 978,
                          "src": "3012:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 981,
                          "name": "controllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 797,
                          "src": "2991:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contains",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15808,
                        "src": "2991:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                        }
                      },
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2991:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 993,
                  "nodeType": "IfStatement",
                  "src": "2986:93:10",
                  "trueBody": {
                    "id": 992,
                    "nodeType": "Block",
                    "src": "3026:53:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 989,
                              "name": "_controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "3056:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 986,
                              "name": "controllers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "3040:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 988,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15710,
                            "src": "3040:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$15676_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3040:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 991,
                        "nodeType": "ExpressionStatement",
                        "src": "3040:28:10"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 978,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "2898:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2897:21:10"
            },
            "returnParameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2928:0:10"
            },
            "scope": 1458,
            "src": "2875:210:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1178,
              "nodeType": "Block",
              "src": "3337:1652:10",
              "statements": [
                {
                  "assignments": [
                    1011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1011,
                      "name": "vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 1178,
                      "src": "3347:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1010,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3347:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1013,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1012,
                    "name": "_vault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 997,
                    "src": "3363:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3347:22:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1014,
                      "name": "isWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "3379:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1015,
                          "name": "wrappedVaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 801,
                          "src": "3391:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 1017,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1016,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "3405:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3391:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3424:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3416:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3416:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "3391:35:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3379:47:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:47:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1024,
                    "name": "isWrapped",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1006,
                    "src": "3440:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1032,
                  "nodeType": "IfStatement",
                  "src": "3436:69:10",
                  "trueBody": {
                    "id": 1031,
                    "nodeType": "Block",
                    "src": "3451:54:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1025,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1011,
                            "src": "3465:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1026,
                              "name": "wrappedVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 801,
                              "src": "3473:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1028,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1027,
                              "name": "_vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "3487:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3473:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3465:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1030,
                        "nodeType": "ExpressionStatement",
                        "src": "3465:29:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1033,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1008,
                      "src": "3514:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1034,
                        "name": "isDelegatedVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "3528:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1036,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1035,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "3545:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3528:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3514:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "3514:37:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "3600:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1041,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1011,
                              "src": "3620:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1040,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16008,
                            "src": "3613:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$16008_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3613:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$16008",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "controller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15997,
                        "src": "3613:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3613:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3600:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "3600:39:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1047,
                      "name": "isWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "3653:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1049,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1011,
                                "src": "3673:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1048,
                              "name": "IVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16008,
                              "src": "3666:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVault_$16008_$",
                                "typeString": "type(contract IVault)"
                              }
                            },
                            "id": 1050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3666:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$16008",
                              "typeString": "contract IVault"
                            }
                          },
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "underlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15977,
                          "src": "3666:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3666:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3704:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3696:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3696:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "3666:40:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3653:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1075,
                    "nodeType": "Block",
                    "src": "3794:54:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1067,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1002,
                            "src": "3808:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1069,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1011,
                                    "src": "3823:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1068,
                                  "name": "IVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16008,
                                  "src": "3816:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVault_$16008_$",
                                    "typeString": "type(contract IVault)"
                                  }
                                },
                                "id": 1070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3816:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVault_$16008",
                                  "typeString": "contract IVault"
                                }
                              },
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15972,
                              "src": "3816:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3816:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3808:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1074,
                        "nodeType": "ExpressionStatement",
                        "src": "3808:29:10"
                      }
                    ]
                  },
                  "id": 1076,
                  "nodeType": "IfStatement",
                  "src": "3649:199:10",
                  "trueBody": {
                    "id": 1066,
                    "nodeType": "Block",
                    "src": "3708:80:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1058,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1002,
                            "src": "3722:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1060,
                                    "name": "_vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 997,
                                    "src": "3737:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1059,
                                  "name": "IVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16008,
                                  "src": "3730:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVault_$16008_$",
                                    "typeString": "type(contract IVault)"
                                  }
                                },
                                "id": 1061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3730:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVault_$16008",
                                  "typeString": "contract IVault"
                                }
                              },
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15972,
                              "src": "3730:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3730:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3722:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1065,
                        "nodeType": "ExpressionStatement",
                        "src": "3722:30:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1077,
                    "name": "isDelegated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1008,
                    "src": "3862:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1097,
                    "nodeType": "Block",
                    "src": "3958:77:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1088,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "3972:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1093,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1002,
                                "src": "4018:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1090,
                                    "name": "controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1000,
                                    "src": "3995:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1089,
                                  "name": "IController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15931,
                                  "src": "3983:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IController_$15931_$",
                                    "typeString": "type(contract IController)"
                                  }
                                },
                                "id": 1091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3983:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IController_$15931",
                                  "typeString": "contract IController"
                                }
                              },
                              "id": 1092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strategies",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15930,
                              "src": "3983:34:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3983:41:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3972:52:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "3972:52:10"
                      }
                    ]
                  },
                  "id": 1098,
                  "nodeType": "IfStatement",
                  "src": "3858:177:10",
                  "trueBody": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "3875:77:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1078,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "3889:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1083,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1011,
                                "src": "3935:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1080,
                                    "name": "controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1000,
                                    "src": "3912:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1079,
                                  "name": "IController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15931,
                                  "src": "3900:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IController_$15931_$",
                                    "typeString": "type(contract IController)"
                                  }
                                },
                                "id": 1081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3900:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IController_$15931",
                                  "typeString": "contract IController"
                                }
                              },
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strategies",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15930,
                              "src": "3900:34:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3900:41:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3889:52:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1086,
                        "nodeType": "ExpressionStatement",
                        "src": "3889:52:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1100,
                      "name": "controllerVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 1178,
                      "src": "4102:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1099,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4102:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1104,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4136:1:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4128:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4128:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4102:36:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1105,
                    "name": "isDelegated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1008,
                    "src": "4152:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1125,
                    "nodeType": "Block",
                    "src": "4254:80:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1116,
                            "name": "controllerVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "4268:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1121,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1002,
                                "src": "4317:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1118,
                                    "name": "controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1000,
                                    "src": "4298:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1117,
                                  "name": "IController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15931,
                                  "src": "4286:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IController_$15931_$",
                                    "typeString": "type(contract IController)"
                                  }
                                },
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4286:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IController_$15931",
                                  "typeString": "contract IController"
                                }
                              },
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaults",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15923,
                              "src": "4286:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4286:37:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4268:55:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1124,
                        "nodeType": "ExpressionStatement",
                        "src": "4268:55:10"
                      }
                    ]
                  },
                  "id": 1126,
                  "nodeType": "IfStatement",
                  "src": "4148:186:10",
                  "trueBody": {
                    "id": 1115,
                    "nodeType": "Block",
                    "src": "4165:83:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1106,
                            "name": "controllerVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "4179:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1111,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "4228:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1108,
                                    "name": "controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1000,
                                    "src": "4209:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1107,
                                  "name": "IController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15931,
                                  "src": "4197:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IController_$15931_$",
                                    "typeString": "type(contract IController)"
                                  }
                                },
                                "id": 1109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4197:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IController_$15931",
                                  "typeString": "contract IController"
                                }
                              },
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaults",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15923,
                              "src": "4197:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 1112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4197:40:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4179:58:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1114,
                        "nodeType": "ExpressionStatement",
                        "src": "4179:58:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1128,
                          "name": "controllerVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "4351:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1129,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1011,
                          "src": "4370:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4351:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726f6c6c6572207661756c74206164647265737320646f6573206e6f74206d61746368",
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4377:41:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3946f4f7066d800a56f1ef8b6cdc6f269876ddfdb66ed23918c2e46c8810de4",
                          "typeString": "literal_string \"Controller vault address does not match\""
                        },
                        "value": "Controller vault address does not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3946f4f7066d800a56f1ef8b6cdc6f269876ddfdb66ed23918c2e46c8810de4",
                          "typeString": "literal_string \"Controller vault address does not match\""
                        }
                      ],
                      "id": 1127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "4343:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4343:76:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "4343:76:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1134,
                    "name": "isWrapped",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1006,
                    "src": "4523:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4720:12:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1151,
                        "name": "isDelegated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "4721:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 1169,
                    "nodeType": "IfStatement",
                    "src": "4716:196:10",
                    "trueBody": {
                      "id": 1168,
                      "nodeType": "Block",
                      "src": "4734:178:10",
                      "statements": [
                        {
                          "assignments": [
                            1154
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1154,
                              "name": "strategyToken",
                              "nodeType": "VariableDeclaration",
                              "scope": 1168,
                              "src": "4748:21:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "typeName": {
                                "id": 1153,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4748:7:10",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 1160,
                          "initialValue": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1156,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1004,
                                    "src": "4782:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1155,
                                  "name": "IStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15965,
                                  "src": "4772:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IStrategy_$15965_$",
                                    "typeString": "type(contract IStrategy)"
                                  }
                                },
                                "id": 1157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4772:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$15965",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "want",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15938,
                              "src": "4772:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4772:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4748:50:10"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1162,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1002,
                                  "src": "4820:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1163,
                                  "name": "strategyToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "4829:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4820:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "537472617465677920746f6b656e206164647265737320646f6573206e6f74206d61746368",
                                "id": 1165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4844:39:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_14f8402d4f48397d7db894569fad1db16049c3e7d55c0e69233eca05d54ffe87",
                                  "typeString": "literal_string \"Strategy token address does not match\""
                                },
                                "value": "Strategy token address does not match"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_14f8402d4f48397d7db894569fad1db16049c3e7d55c0e69233eca05d54ffe87",
                                  "typeString": "literal_string \"Strategy token address does not match\""
                                }
                              ],
                              "id": 1161,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                17624,
                                17625
                              ],
                              "referencedDeclaration": 17625,
                              "src": "4812:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4812:72:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1167,
                          "nodeType": "ExpressionStatement",
                          "src": "4812:72:10"
                        }
                      ]
                    }
                  },
                  "id": 1170,
                  "nodeType": "IfStatement",
                  "src": "4519:393:10",
                  "trueBody": {
                    "id": 1150,
                    "nodeType": "Block",
                    "src": "4534:176:10",
                    "statements": [
                      {
                        "assignments": [
                          1136
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1136,
                            "name": "underlying",
                            "nodeType": "VariableDeclaration",
                            "scope": 1150,
                            "src": "4548:18:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1135,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4548:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1142,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1138,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1011,
                                  "src": "4576:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1137,
                                "name": "IVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16008,
                                "src": "4569:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVault_$16008_$",
                                  "typeString": "type(contract IVault)"
                                }
                              },
                              "id": 1139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4569:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$16008",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "underlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15977,
                            "src": "4569:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4569:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4548:47:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1144,
                                "name": "underlying",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1136,
                                "src": "4617:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1145,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1002,
                                "src": "4631:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4617:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "577261707065645661756c7420746f6b656e206164647265737320646f6573206e6f74206d61746368",
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4638:43:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a64613fd1e5f13c533499913111df92eadd390fdeec2e499f6fdbd914dd6017",
                                "typeString": "literal_string \"WrappedVault token address does not match\""
                              },
                              "value": "WrappedVault token address does not match"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4a64613fd1e5f13c533499913111df92eadd390fdeec2e499f6fdbd914dd6017",
                                "typeString": "literal_string \"WrappedVault token address does not match\""
                              }
                            ],
                            "id": 1143,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              17624,
                              17625
                            ],
                            "referencedDeclaration": 17625,
                            "src": "4609:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4609:73:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1149,
                        "nodeType": "ExpressionStatement",
                        "src": "4609:73:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 1171,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "4930:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1172,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "4942:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1173,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "4949:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1174,
                        "name": "isWrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "4959:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1175,
                        "name": "isDelegated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "4970:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1176,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4929:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 1009,
                  "id": 1177,
                  "nodeType": "Return",
                  "src": "4922:60:10"
                }
              ]
            },
            "documentation": null,
            "id": 1179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "3113:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3113:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3112:16:10"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1000,
                  "name": "controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "3189:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1002,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "3221:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1004,
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "3248:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1006,
                  "name": "isWrapped",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "3278:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1008,
                  "name": "isDelegated",
                  "nodeType": "VariableDeclaration",
                  "scope": 1179,
                  "src": "3306:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3175:157:10"
            },
            "scope": 1458,
            "src": "3091:1898:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1191,
              "nodeType": "Block",
              "src": "5088:41:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1188,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "5116:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1186,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "5105:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1187,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15880,
                      "src": "5105:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5105:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1185,
                  "id": 1190,
                  "nodeType": "Return",
                  "src": "5098:24:10"
                }
              ]
            },
            "documentation": null,
            "id": 1192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1181,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1192,
                  "src": "5035:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5035:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5034:15:10"
            },
            "returnParameters": {
              "id": 1185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1184,
                  "name": "vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1192,
                  "src": "5073:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5073:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5072:15:10"
            },
            "scope": 1458,
            "src": "5017:112:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1201,
              "nodeType": "Block",
              "src": "5194:39:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1197,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "5211:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15865,
                      "src": "5211:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5211:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1196,
                  "id": 1200,
                  "nodeType": "Return",
                  "src": "5204:22:10"
                }
              ]
            },
            "documentation": null,
            "id": 1202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultsLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5159:2:10"
            },
            "returnParameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1195,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "5185:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5185:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5184:9:10"
            },
            "scope": 1458,
            "src": "5135:98:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "5301:216:10",
              "statements": [
                {
                  "assignments": [
                    1211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1211,
                      "name": "vaultsArray",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "5311:28:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5311:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1210,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5311:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1219,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1215,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "5356:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15865,
                          "src": "5356:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5356:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5342:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5346:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1213,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5346:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5342:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5311:61:10"
                },
                {
                  "body": {
                    "id": 1241,
                    "nodeType": "Block",
                    "src": "5428:55:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1232,
                              "name": "vaultsArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1211,
                              "src": "5442:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1234,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1233,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "5454:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5442:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1237,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1221,
                                "src": "5470:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1235,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "5459:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15880,
                              "src": "5459:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                              }
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5459:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5442:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1240,
                        "nodeType": "ExpressionStatement",
                        "src": "5442:30:10"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1224,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1221,
                      "src": "5402:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1225,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "5406:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15865,
                        "src": "5406:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5406:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5402:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1242,
                  "initializationExpression": {
                    "assignments": [
                      1221
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1221,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "5387:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5387:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1223,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5399:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5387:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5423:3:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1229,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1221,
                        "src": "5423:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1231,
                    "nodeType": "ExpressionStatement",
                    "src": "5423:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "5382:101:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1243,
                    "name": "vaultsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1211,
                    "src": "5499:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1207,
                  "id": 1244,
                  "nodeType": "Return",
                  "src": "5492:18:10"
                }
              ]
            },
            "documentation": null,
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5257:2:10"
            },
            "returnParameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1206,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "5283:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1204,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5283:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1205,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5283:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5282:18:10"
            },
            "scope": 1458,
            "src": "5239:278:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1279,
              "nodeType": "Block",
              "src": "5769:163:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 1261,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1251,
                          "src": "5780:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1262,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "5792:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1263,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "5799:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1264,
                          "name": "isWrapped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1257,
                          "src": "5809:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1265,
                          "name": "isDelegated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "5820:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1266,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5779:53:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,address,address,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1268,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1248,
                          "src": "5848:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1267,
                        "name": "getVaultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "5835:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                          "typeString": "function (address) view returns (address,address,address,bool,bool)"
                        }
                      },
                      "id": 1269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5835:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,address,address,bool,bool)"
                      }
                    },
                    "src": "5779:76:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "5779:76:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 1272,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "5873:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1273,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "5885:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1274,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "5892:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1275,
                        "name": "isWrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1257,
                        "src": "5902:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1276,
                        "name": "isDelegated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1259,
                        "src": "5913:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1277,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5872:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(address,address,address,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 1260,
                  "id": 1278,
                  "nodeType": "Return",
                  "src": "5865:60:10"
                }
              ]
            },
            "documentation": null,
            "id": 1280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1248,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "5545:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5545:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5544:16:10"
            },
            "returnParameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "name": "controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "5621:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5621:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "5653:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5653:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "5680:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5680:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1257,
                  "name": "isWrapped",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "5710:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5710:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1259,
                  "name": "isDelegated",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "5738:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5738:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5607:157:10"
            },
            "scope": 1458,
            "src": "5523:409:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1409,
              "nodeType": "Block",
              "src": "6241:703:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1298,
                      "name": "controllerArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "6251:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1302,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "6283:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15865,
                            "src": "6283:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6283:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6269:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1299,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6273:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1300,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6273:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 1305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6269:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6251:48:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "6251:48:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1308,
                      "name": "tokenArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1287,
                      "src": "6309:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1312,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "6336:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15865,
                            "src": "6336:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6336:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6322:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6326:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1310,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6326:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6322:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6309:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "6309:43:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1318,
                      "name": "strategyArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1290,
                      "src": "6362:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1322,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "6392:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1323,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15865,
                            "src": "6392:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6392:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6378:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6382:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1320,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6382:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 1325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6378:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6362:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 1327,
                  "nodeType": "ExpressionStatement",
                  "src": "6362:46:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1328,
                      "name": "isWrappedArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1293,
                      "src": "6418:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1332,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "6446:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1333,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15865,
                            "src": "6446:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6446:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6435:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (bool[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1329,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6439:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1330,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6439:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        }
                      },
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6435:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory",
                        "typeString": "bool[] memory"
                      }
                    },
                    "src": "6418:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "6418:44:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1338,
                      "name": "isDelegatedArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1296,
                      "src": "6472:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1342,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "6502:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 1343,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15865,
                            "src": "6502:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6502:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6491:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (bool[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1339,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6495:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1340,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6495:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        }
                      },
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6491:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory",
                        "typeString": "bool[] memory"
                      }
                    },
                    "src": "6472:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "id": 1347,
                  "nodeType": "ExpressionStatement",
                  "src": "6472:46:10"
                },
                {
                  "body": {
                    "id": 1407,
                    "nodeType": "Block",
                    "src": "6575:363:10",
                    "statements": [
                      {
                        "assignments": [
                          1361,
                          1363,
                          1365,
                          1367,
                          1369
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1361,
                            "name": "_controller",
                            "nodeType": "VariableDeclaration",
                            "scope": 1407,
                            "src": "6590:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1360,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6590:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1363,
                            "name": "_token",
                            "nodeType": "VariableDeclaration",
                            "scope": 1407,
                            "src": "6611:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1362,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6611:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1365,
                            "name": "_strategy",
                            "nodeType": "VariableDeclaration",
                            "scope": 1407,
                            "src": "6627:17:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1364,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6627:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1367,
                            "name": "_isWrapped",
                            "nodeType": "VariableDeclaration",
                            "scope": 1407,
                            "src": "6646:15:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1366,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6646:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1369,
                            "name": "_isDelegated",
                            "nodeType": "VariableDeclaration",
                            "scope": 1407,
                            "src": "6663:17:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1368,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6663:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1376,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1373,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1349,
                                  "src": "6708:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1371,
                                  "name": "vaults",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 795,
                                  "src": "6697:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                                    "typeString": "struct EnumerableSet.AddressSet storage ref"
                                  }
                                },
                                "id": 1372,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "get",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15880,
                                "src": "6697:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                                  "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                }
                              },
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6697:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1370,
                            "name": "getVaultData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "6684:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                              "typeString": "function (address) view returns (address,address,address,bool,bool)"
                            }
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6684:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_bool_$_t_bool_$",
                            "typeString": "tuple(address,address,address,bool,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6589:122:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1377,
                              "name": "controllerArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1284,
                              "src": "6725:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1379,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1378,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1349,
                              "src": "6741:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6725:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1380,
                            "name": "_controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "6746:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6725:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1382,
                        "nodeType": "ExpressionStatement",
                        "src": "6725:32:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1383,
                              "name": "tokenArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1287,
                              "src": "6771:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1385,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1384,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1349,
                              "src": "6782:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6771:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1386,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1363,
                            "src": "6787:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6771:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1388,
                        "nodeType": "ExpressionStatement",
                        "src": "6771:22:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1389,
                              "name": "strategyArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1290,
                              "src": "6807:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1391,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1390,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1349,
                              "src": "6821:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6807:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1392,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1365,
                            "src": "6826:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6807:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1394,
                        "nodeType": "ExpressionStatement",
                        "src": "6807:28:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1395,
                              "name": "isWrappedArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1293,
                              "src": "6849:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 1397,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1396,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1349,
                              "src": "6864:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6849:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1398,
                            "name": "_isWrapped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "6869:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6849:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1400,
                        "nodeType": "ExpressionStatement",
                        "src": "6849:30:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1401,
                              "name": "isDelegatedArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1296,
                              "src": "6893:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 1403,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1402,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1349,
                              "src": "6910:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6893:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1404,
                            "name": "_isDelegated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1369,
                            "src": "6915:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6893:34:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1406,
                        "nodeType": "ExpressionStatement",
                        "src": "6893:34:10"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1352,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1349,
                      "src": "6549:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1353,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "6553:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$15676_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15865,
                        "src": "6553:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$15676_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$15676_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6553:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6549:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1408,
                  "initializationExpression": {
                    "assignments": [
                      1349
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1349,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1408,
                        "src": "6534:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1348,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6534:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1351,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6546:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6534:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6570:3:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1357,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1349,
                        "src": "6570:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1359,
                    "nodeType": "ExpressionStatement",
                    "src": "6570:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "6529:409:10"
                }
              ]
            },
            "documentation": null,
            "id": 1410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultsInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5960:2:10"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1284,
                  "name": "controllerArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "6023:32:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1282,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6023:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1283,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6023:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1287,
                  "name": "tokenArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "6069:27:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1285,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6069:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1286,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6069:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1290,
                  "name": "strategyArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "6110:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1288,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6110:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1289,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6110:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1293,
                  "name": "isWrappedArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "6154:28:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1291,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "6154:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1292,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6154:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1296,
                  "name": "isDelegatedArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "6196:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1294,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "6196:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1295,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6196:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6009:227:10"
            },
            "scope": 1458,
            "src": "5938:1006:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1421,
              "nodeType": "Block",
              "src": "7058:55:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1417,
                      "name": "pendingGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "7068:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1418,
                      "name": "_pendingGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1412,
                      "src": "7088:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7068:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1420,
                  "nodeType": "ExpressionStatement",
                  "src": "7068:38:10"
                }
              ]
            },
            "documentation": null,
            "id": 1422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1415,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1414,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1445,
                  "src": "7043:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7043:14:10"
              }
            ],
            "name": "setPendingGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1412,
                  "name": "_pendingGovernance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1422,
                  "src": "7006:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7006:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7005:28:10"
            },
            "returnParameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7058:0:10"
            },
            "scope": 1458,
            "src": "6976:137:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "7178:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1427,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "7188:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17621,
                        "src": "7201:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7201:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7188:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1431,
                  "nodeType": "ExpressionStatement",
                  "src": "7188:23:10"
                }
              ]
            },
            "documentation": null,
            "id": 1433,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1425,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1424,
                  "name": "onlyPendingGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1457,
                  "src": "7156:21:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7156:21:10"
              }
            ],
            "name": "acceptGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7144:2:10"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7178:0:10"
            },
            "scope": 1458,
            "src": "7119:99:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "7248:104:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1436,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "7266:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7266:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1438,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 791,
                          "src": "7280:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7266:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920676f7665726e616e63652063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7292:41:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6edffbb24176ced5a1ec4d5f82731db711fe8dfda4eaf44f3d7f07ce857a6ce",
                          "typeString": "literal_string \"Only governance can call this function.\""
                        },
                        "value": "Only governance can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6edffbb24176ced5a1ec4d5f82731db711fe8dfda4eaf44f3d7f07ce857a6ce",
                          "typeString": "literal_string \"Only governance can call this function.\""
                        }
                      ],
                      "id": 1435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "7258:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7258:76:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1442,
                  "nodeType": "ExpressionStatement",
                  "src": "7258:76:10"
                },
                {
                  "id": 1443,
                  "nodeType": "PlaceholderStatement",
                  "src": "7344:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 1445,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7248:0:10"
            },
            "src": "7224:128:10",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1456,
              "nodeType": "Block",
              "src": "7388:118:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1448,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "7406:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7406:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1450,
                          "name": "pendingGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 793,
                          "src": "7420:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7406:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792070656e64696e67476f7665726e616e63652063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7439:48:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dafc7e589c51c517cba86cb3d0e33ddc564c6dd07cf0c153696f5229b397087f",
                          "typeString": "literal_string \"Only pendingGovernance can call this function.\""
                        },
                        "value": "Only pendingGovernance can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dafc7e589c51c517cba86cb3d0e33ddc564c6dd07cf0c153696f5229b397087f",
                          "typeString": "literal_string \"Only pendingGovernance can call this function.\""
                        }
                      ],
                      "id": 1447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "7398:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7398:90:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "7398:90:10"
                },
                {
                  "id": 1455,
                  "nodeType": "PlaceholderStatement",
                  "src": "7498:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 1457,
            "name": "onlyPendingGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7388:0:10"
            },
            "src": "7357:149:10",
            "visibility": "internal"
          }
        ],
        "scope": 1459,
        "src": "420:7088:10"
      }
    ],
    "src": "33:7476:10"
  },
  "bytecode": "",
  "bytecodeSha1": "926a6816e69998a855da6df709ec9a84608372bc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "YRegistry",
  "coverageMap": {
    "branches": {
      "1": {},
      "10": {
        "YRegistry.getVaultData": {
          "56": [
            3653,
            3662,
            false
          ],
          "57": [
            3666,
            3706,
            false
          ],
          "58": [
            3862,
            3873,
            false
          ],
          "59": [
            4351,
            4375,
            true
          ],
          "60": [
            4523,
            4532,
            false
          ],
          "61": [
            4617,
            4636,
            true
          ],
          "62": [
            4721,
            4732,
            false
          ],
          "63": [
            4820,
            4842,
            true
          ]
        },
        "YRegistry.setController": {
          "64": [
            2991,
            3024,
            false
          ]
        },
        "YRegistry.setVault": {
          "54": [
            2239,
            2258,
            true
          ],
          "55": [
            2355,
            2379,
            true
          ]
        },
        "YRegistry.setWrappedVault": {
          "65": [
            2582,
            2608,
            true
          ]
        }
      },
      "7": {},
      "8": {
        "EnumerableSet.add": {
          "66": [
            1034,
            1054,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "10": {
        "YRegistry.acceptGovernance": {
          "5": [
            7188,
            7211
          ]
        },
        "YRegistry.addDelegatedVault": {
          "2": [
            1842,
            1858
          ],
          "3": [
            1868,
            1893
          ],
          "4": [
            2003,
            2028
          ]
        },
        "YRegistry.addVault": {
          "6": [
            1157,
            1173
          ]
        },
        "YRegistry.addWrappedVault": {
          "11": [
            1357,
            1373
          ],
          "12": [
            1445,
            1482
          ],
          "13": [
            1592,
            1617
          ]
        },
        "YRegistry.getName": {
          "1": [
            1060,
            1078
          ]
        },
        "YRegistry.getVault": {
          "26": [
            5098,
            5122
          ]
        },
        "YRegistry.getVaultData": {
          "31": [
            3379,
            3426
          ],
          "32": [
            3465,
            3494
          ],
          "33": [
            3514,
            3551
          ],
          "34": [
            3600,
            3639
          ],
          "35": [
            3722,
            3752
          ],
          "36": [
            3808,
            3837
          ],
          "37": [
            3889,
            3941
          ],
          "38": [
            3972,
            4024
          ],
          "39": [
            4179,
            4237
          ],
          "40": [
            4268,
            4323
          ],
          "41": [
            4343,
            4419
          ],
          "42": [
            4609,
            4682
          ],
          "43": [
            4812,
            4884
          ]
        },
        "YRegistry.getVaultInfo": {
          "25": [
            5779,
            5855
          ]
        },
        "YRegistry.getVaults": {
          "8": [
            5442,
            5472
          ],
          "9": [
            5423,
            5426
          ],
          "10": [
            5492,
            5510
          ]
        },
        "YRegistry.getVaultsInfo": {
          "14": [
            6251,
            6299
          ],
          "15": [
            6309,
            6352
          ],
          "16": [
            6362,
            6408
          ],
          "17": [
            6418,
            6462
          ],
          "18": [
            6472,
            6518
          ],
          "19": [
            6725,
            6757
          ],
          "20": [
            6771,
            6793
          ],
          "21": [
            6807,
            6835
          ],
          "22": [
            6849,
            6879
          ],
          "23": [
            6893,
            6927
          ],
          "24": [
            6570,
            6573
          ]
        },
        "YRegistry.getVaultsLength": {
          "7": [
            5204,
            5226
          ]
        },
        "YRegistry.setController": {
          "44": [
            3040,
            3068
          ]
        },
        "YRegistry.setDelegatedVault": {
          "30": [
            2831,
            2862
          ]
        },
        "YRegistry.setPendingGovernance": {
          "0": [
            7068,
            7106
          ]
        },
        "YRegistry.setVault": {
          "27": [
            2231,
            2286
          ],
          "28": [
            2347,
            2404
          ],
          "29": [
            2460,
            2478
          ]
        },
        "YRegistry.setWrappedVault": {
          "47": [
            2574,
            2643
          ],
          "48": [
            2653,
            2690
          ]
        }
      },
      "7": {
        "Address.isContract": {
          "49": [
            1238,
            1289
          ]
        }
      },
      "8": {
        "EnumerableSet.add": {
          "51": [
            1069,
            1110
          ],
          "52": [
            1124,
            1135
          ],
          "53": [
            1166,
            1178
          ]
        },
        "EnumerableSet.contains": {
          "50": [
            2549,
            2577
          ]
        },
        "EnumerableSet.get": {
          "46": [
            3917,
            3941
          ]
        },
        "EnumerableSet.length": {
          "45": [
            3442,
            3466
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "EnumerableSet",
    "SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "420:7088:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;420:7088:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6976:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6976:137:10;-1:-1:-1;;;;;6976:137:10;;:::i;:::-;;993:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;993:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:405;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1767:405:10;-1:-1:-1;;;;;1767:405:10;;:::i;7119:99::-;;;:::i;1091:187::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1091:187:10;-1:-1:-1;;;;;1091:187:10;;:::i;785:48::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;785:48:10;-1:-1:-1;;;;;785:48:10;;:::i;:::-;;;;;;;;;;;;;;;;;;5135:98;;;:::i;:::-;;;;;;;;;;;;;;;;5239:278;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5239:278:10;;;;;;;;;;;;;;;;;563:25;;;:::i;:::-;;;;-1:-1:-1;;;;;563:25:10;;;;;;;;;;;;;;1284:477;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1284:477:10;-1:-1:-1;;;;;1284:477:10;;:::i;5938:1006::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5938:1006:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5938:1006:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5938:1006:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5938:1006:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5938:1006:10;;;;;;;;;;;;;;;;;;;;;;;;;5523:409;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5523:409:10;-1:-1:-1;;;;;5523:409:10;;:::i;:::-;;;;-1:-1:-1;;;;;5523:409:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5017:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5017:112:10;;:::i;594:32::-;;;:::i;6976:137::-;7280:10;;-1:-1:-1;;;;;7280:10:10;7266;:24;7258:76;;;;-1:-1:-1;;;7258:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7068:17;:38;;-1:-1:-1;;;;;;7068:38:10;-1:-1:-1;;;;;7068:38:10;;;;;;;;;;6976:137::o;993:92::-;1060:18;;;;;;;;;;;;-1:-1:-1;;;1060:18:10;;;;993:92;:::o;1767:405::-;7280:10;;-1:-1:-1;;;;;7280:10:10;7266;:24;7258:76;;;;-1:-1:-1;;;7258:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:16;1851:6;1842:8;:16::i;:::-;1868:25;1886:6;1868:17;:25::i;:::-;1905:18;1935:20;1948:6;1935:12;:20::i;:::-;1904:51;;;;;;2003:25;2017:10;2003:13;:25::i;:::-;7344:1;1767:405;:::o;7119:99::-;7420:17;;-1:-1:-1;;;;;7420:17:10;7406:10;:31;7398:90;;;;-1:-1:-1;;;7398:90:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7188:10;:23;;-1:-1:-1;;;;;;7188:23:10;7201:10;7188:23;;;7119:99::o;1091:187::-;7280:10;;-1:-1:-1;;;;;7280:10:10;7266;:24;7258:76;;;;-1:-1:-1;;;7258:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:16;1166:6;1157:8;:16::i;785:48::-;;;;;;;;;;;;;;;:::o;5135:98::-;5185:7;5211:15;:6;:13;:15::i;:::-;5204:22;;5135:98;:::o;5239:278::-;5283:16;5311:28;5356:15;:6;:13;:15::i;:::-;5342:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5342:30:10;-1:-1:-1;5311:61:10;-1:-1:-1;5387:9:10;5382:101;5406:15;:6;:13;:15::i;:::-;5402:1;:19;5382:101;;;5459:13;:6;5470:1;5459:13;:10;:13;:::i;:::-;5442:11;5454:1;5442:14;;;;;;;;-1:-1:-1;;;;;5442:30:10;;;:14;;;;;;;;;;;:30;5423:3;;5382:101;;;-1:-1:-1;5499:11:10;-1:-1:-1;5239:278:10;:::o;563:25::-;;;-1:-1:-1;;;;;563:25:10;;:::o;1284:477::-;7280:10;;-1:-1:-1;;;;;7280:10:10;7266;:24;7258:76;;;;-1:-1:-1;;;7258:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:16;1366:6;1357:8;:16::i;:::-;1383:20;1420:6;-1:-1:-1;;;;;1406:27:10;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:29:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:29:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1406:29:10;;-1:-1:-1;1445:37:10;1461:6;1406:29;1445:15;:37::i;:::-;1494:18;1524:20;1537:6;1524:12;:20::i;:::-;1493:51;;;;;;1592:25;1606:10;1592:13;:25::i;:::-;7344:1;;1284:477;:::o;5938:1006::-;6023:32;6069:27;6110:30;6154:28;6196:30;6283:15;:6;:13;:15::i;:::-;6269:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6269:30:10;;6251:48;;6336:15;:6;:13;:15::i;:::-;6322:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6322:30:10;;6309:43;;6392:15;:6;:13;:15::i;:::-;6378:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6378:30:10;;6362:46;;6446:15;:6;:13;:15::i;:::-;6435:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6435:27:10;;6418:44;;6502:15;:6;:13;:15::i;:::-;6491:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6491:27:10;-1:-1:-1;6472:46:10;-1:-1:-1;6534:9:10;6529:409;6553:15;:6;:13;:15::i;:::-;6549:1;:19;6529:409;;;6590:19;;;;;6684:27;6697:13;:6;6708:1;6697:13;:10;:13;:::i;:::-;6684:12;:27::i;:::-;6589:122;;;;;;;;;;6746:11;6725:15;6741:1;6725:18;;;;;;;;;;;;;:32;-1:-1:-1;;;;;6725:32:10;;;-1:-1:-1;;;;;6725:32:10;;;;;6787:6;6771:10;6782:1;6771:13;;;;;;;;;;;;;:22;-1:-1:-1;;;;;6771:22:10;;;-1:-1:-1;;;;;6771:22:10;;;;;6826:9;6807:13;6821:1;6807:16;;;;;;;;;;;;;:28;-1:-1:-1;;;;;6807:28:10;;;-1:-1:-1;;;;;6807:28:10;;;;;6869:10;6849:14;6864:1;6849:17;;;;;;;;;;;;;:30;;;;;;;;;;;6915:12;6893:16;6910:1;6893:19;;;;;;;;:34;;;:19;;;;;;;;;;;:34;-1:-1:-1;;6570:3:10;;;;;-1:-1:-1;6529:409:10;;-1:-1:-1;;6529:409:10;;;5938:1006;;;;;:::o;5523:409::-;5621:18;5653:13;5680:16;5710:14;5738:16;5835:20;5848:6;5835:12;:20::i;:::-;5779:76;;;;-1:-1:-1;5779:76:10;;-1:-1:-1;5779:76:10;-1:-1:-1;5779:76:10;;-1:-1:-1;5523:409:10;-1:-1:-1;;5523:409:10:o;5017:112::-;5073:13;5105:17;:6;5116:5;5105:17;:10;:17;:::i;:::-;5098:24;5017:112;-1:-1:-1;;5017:112:10:o;594:32::-;;;-1:-1:-1;;;;;594:32:10;;:::o;2178:307::-;2239:19;:6;-1:-1:-1;;;;;2239:17:10;;:19::i;:::-;2231:55;;;;;-1:-1:-1;;;2231:55:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:23;:6;2372;2356:23;:15;:23;:::i;:::-;2355:24;2347:57;;;;;-1:-1:-1;;;2347:57:10;;;;;;;;;;;;-1:-1:-1;;;2347:57:10;;;;;;;;;;;;;;;2460:18;:6;2471;2460:18;:10;:18;:::i;2703:166::-;-1:-1:-1;;;;;2831:24:10;;;;;:16;:24;;;;;:31;;-1:-1:-1;;2831:31:10;2858:4;2831:31;;;2703:166::o;3091:1898::-;-1:-1:-1;;;;;3391:21:10;;;3189:18;3391:21;;;:13;:21;;;;;;3189:18;;;;;;3391:21;:35;;;;3189:18;;3363:6;;3436:69;;-1:-1:-1;;;;;;3473:21:10;;;;;;;:13;:21;;;;;;;3436:69;-1:-1:-1;;;;;3528:23:10;;;;;;:16;:23;;;;;;;;;;3613:26;;-1:-1:-1;;;3613:26:10;;;;3528:23;;;;;-1:-1:-1;3613:24:10;;:26;;;;;3528:23;3613:26;;;;;;3528:23;3613:26;;;5:2:-1;;;;30:1;27;20:12;5:2;3613:26:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3613:26:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3613:26:10;;-1:-1:-1;3653:9:10;:53;;;;;3704:1;-1:-1:-1;;;;;3666:40:10;3673:5;-1:-1:-1;;;;;3666:24:10;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3666:26:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3666:26:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3666:26:10;-1:-1:-1;;;;;3666:40:10;;;3653:53;3649:199;;;3737:6;-1:-1:-1;;;;;3730:20:10;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3730:22:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3730:22:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3730:22:10;;-1:-1:-1;3649:199:10;;;3823:5;-1:-1:-1;;;;;3816:19:10;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3816:21:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3816:21:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3816:21:10;;-1:-1:-1;3649:199:10;3862:11;3858:177;;;3912:10;-1:-1:-1;;;;;3900:34:10;;3935:5;3900:41;;;;;;;;;;;;;-1:-1:-1;;;;;3900:41:10;-1:-1:-1;;;;;3900:41:10;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3900:41:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3900:41:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3900:41:10;;-1:-1:-1;3858:177:10;;;3995:10;-1:-1:-1;;;;;3983:34:10;;4018:5;3983:41;;;;;;;;;;;;;-1:-1:-1;;;;;3983:41:10;-1:-1:-1;;;;;3983:41:10;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3983:41:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3983:41:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3983:41:10;;-1:-1:-1;3858:177:10;4102:23;4148:186;;;;4209:10;-1:-1:-1;;;;;4197:30:10;;4228:8;4197:40;;;;;;;;;;;;;-1:-1:-1;;;;;4197:40:10;-1:-1:-1;;;;;4197:40:10;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4197:40:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4197:40:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4197:40:10;;-1:-1:-1;4148:186:10;;;4298:10;-1:-1:-1;;;;;4286:30:10;;4317:5;4286:37;;;;;;;;;;;;;-1:-1:-1;;;;;4286:37:10;-1:-1:-1;;;;;4286:37:10;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4286:37:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4286:37:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4286:37:10;;-1:-1:-1;4148:186:10;4370:5;-1:-1:-1;;;;;4351:24:10;:15;-1:-1:-1;;;;;4351:24:10;;4343:76;;;;-1:-1:-1;;;4343:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:9;4519:393;;;4548:18;4576:5;-1:-1:-1;;;;;4569:24:10;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4569:26:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4569:26:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4569:26:10;;-1:-1:-1;;;;;;4617:19:10;;;;;;;4609:73;;;;-1:-1:-1;;;4609:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4519:393;;;;4721:11;4716:196;;4748:21;4782:8;-1:-1:-1;;;;;4772:24:10;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4772:26:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4772:26:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4772:26:10;;-1:-1:-1;;;;;;4820:22:10;;;;;;;4812:72;;;;-1:-1:-1;;;4812:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4716:196;;-1:-1:-1;;3091:1898:10;;;;;;;:::o;2875:210::-;2991:33;:11;3012;2991:33;:20;:33;:::i;:::-;2986:93;;3040:28;:11;3056;3040:28;:15;:28;:::i;2986:93::-;2875:210;:::o;3332:141:8:-;3449:10;;:17;;3332:141::o;3795:153::-;3894:7;3924:3;:10;;3935:5;3924:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3924:17:8;;3795:153;-1:-1:-1;;;3795:153:8:o;2491:206:10:-;2582:26;:13;-1:-1:-1;;;;;2582:24:10;;:26::i;:::-;2574:69;;;;;-1:-1:-1;;;2574:69:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2653:21:10;;;;;;;:13;:21;;;;;:37;;-1:-1:-1;;;;;;2653:37:10;;;;;;;;2491:206::o;686:610:7:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o;2425:159:8:-;-1:-1:-1;;;;;2556:16:8;2529:4;2556:16;;;;;;;;;;;;:21;;;2425:159::o;923:272::-;1009:4;1034:20;1043:3;1048:5;1034:8;:20::i;:::-;1029:160;;-1:-1:-1;1088:10:8;;;;27::-1;;23:18;;;45:23;;;-1:-1;1088:22:8;;;;;;;;;;;;-1:-1:-1;;;;;;1088:22:8;-1:-1:-1;;;;;1088:22:8;;;;;;;;1069:16;;;;;;;;;;:41;1124:11;;1029:160;-1:-1:-1;1173:5:8;1166:12;",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    420,
    7508
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x44D00F82 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x6B708788 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x6B708788 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x90229AF7 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x9403B634 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xF39C38A0 EQ PUSH2 0x4CD JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x44D00F82 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x61DE8389 EQ PUSH2 0x2B8 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x238EFCBC GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x256B5A02 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x44064BE7 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x44B19DFC EQ PUSH2 0x222 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0xABB6035 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x2019C75A EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x159 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x186 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x563 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x639 JUMP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x280 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x268 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x750 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 DUP2 SUB DUP7 MSTORE DUP12 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x336 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x31E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP7 DUP2 SUB DUP6 MSTORE DUP11 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x375 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x35D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP7 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP7 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP7 DUP2 SUB DUP3 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x41A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP2 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x29C PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1413 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x595265676973747279 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1413 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x5BE DUP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C9 DUP3 PUSH2 0xBA0 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x5D8 DUP2 PUSH2 0x11C7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13BE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1413 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BE DUP2 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AC PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x6BE PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6E7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x6F7 PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x73B JUMPI PUSH2 0x70F PUSH1 0x2 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x11F7 AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x71B JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6ED JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1413 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A2 DUP2 PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBFA77CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x815 DUP3 DUP3 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x820 DUP4 PUSH2 0xBA0 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x82F DUP2 PUSH2 0x11C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0x846 PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x86F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP PUSH2 0x87C PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH2 0x8B2 PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8DB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x8E8 PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x911 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x91E PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x947 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x957 PUSH1 0x2 PUSH2 0x11F0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH2 0x97D PUSH2 0x978 PUSH1 0x2 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x11F7 AND JUMP JUMPDEST PUSH2 0xBA0 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP5 DUP12 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x994 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP11 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x9C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x9EE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xA1B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP8 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xA3A JUMPI INVALID JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x94D SWAP2 POP POP JUMP JUMPDEST POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA74 DUP7 PUSH2 0xBA0 JUMP JUMPDEST SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 PUSH1 0x2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x11F7 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xAC0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0xB11 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C74206973206E6F74206120636F6E7472616374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB22 PUSH1 0x2 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x12F1 AND JUMP JUMPDEST ISZERO PUSH2 0xB6B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5661756C7420616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x5D8 PUSH1 0x2 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x130F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 DUP3 SWAP2 AND ISZERO DUP1 ISZERO SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xBEA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH4 0xF77C4791 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP6 POP PUSH4 0xF77C4791 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP6 POP DUP3 DUP1 ISZERO PUSH2 0xCF0 JUMPI POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6F307DC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xD61 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 POP PUSH2 0xDC9 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 POP JUMPDEST DUP2 ISZERO PUSH2 0xE58 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x39EBF823 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0xEDD JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x39EBF823 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP JUMPDEST PUSH1 0x0 DUP3 ISZERO PUSH2 0xF6E JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA622EE7C DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xFF3 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA622EE7C DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1043 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13EC PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 ISZERO PUSH2 0x1102 JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6F307DC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1098 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP9 AND EQ PUSH2 0x10FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1395 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x11BC JUMP JUMPDEST DUP3 PUSH2 0x11BC JUMPI PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F1FCD51 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1156 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x116C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP1 DUP3 AND EQ PUSH2 0x11BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1370 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x11D8 PUSH1 0x4 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x12F1 AND JUMP JUMPDEST PUSH2 0x11ED JUMPI PUSH2 0x5D8 PUSH1 0x4 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x130F AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1208 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1236 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x1287 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x577261707065645661756C74206973206E6F74206120636F6E74726163740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x12E9 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131B DUP4 DUP4 PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x1367 JUMPI POP PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD DUP1 DUP4 ADD DUP1 DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE SWAP1 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0xA99 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA99 JUMP INVALID MSTORE8 PUSH21 0x72617465677920746F6B656E206164647265737320 PUSH5 0x6F6573206E PUSH16 0x74206D61746368577261707065645661 PUSH22 0x6C7420746F6B656E206164647265737320646F657320 PUSH15 0x6F74206D617463684F6E6C79207065 PUSH15 0x64696E67476F7665726E616E636520 PUSH4 0x616E2063 PUSH2 0x6C6C KECCAK256 PUSH21 0x6869732066756E6374696F6E2E436F6E74726F6C6C PUSH6 0x72207661756C PUSH21 0x206164647265737320646F6573206E6F74206D6174 PUSH4 0x684F6E6C PUSH26 0x20676F7665726E616E63652063616E2063616C6C207468697320 PUSH7 0x756E6374696F6E 0x2E LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH5 0x34CE78D405 0xDE PUSH28 0x8735F850F17827E4F2939668CD6AC71437038FF89B88BEC764736F6C PUSH4 0x43000511 STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        420,
        7508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        420,
        7508
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x44D00F82"
    },
    "38": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6B708788"
    },
    "49": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6B708788"
    },
    "60": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DE"
    },
    "64": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x90229AF7"
    },
    "71": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44E"
    },
    "75": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9403B634"
    },
    "82": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B0"
    },
    "86": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF39C38A0"
    },
    "93": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4CD"
    },
    "97": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA"
    },
    "101": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMP",
      "path": "10"
    },
    "102": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "103": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "104": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x44D00F82"
    },
    "109": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23C"
    },
    "113": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5AA6E675"
    },
    "120": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x294"
    },
    "124": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x61DE8389"
    },
    "131": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B8"
    },
    "135": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA"
    },
    "139": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMP",
      "path": "10"
    },
    "140": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "141": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "142": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x238EFCBC"
    },
    "147": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "GT",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "152": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "153": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x238EFCBC"
    },
    "158": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BA"
    },
    "162": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "164": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x256B5A02"
    },
    "169": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C2"
    },
    "173": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "175": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x44064BE7"
    },
    "180": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E8"
    },
    "184": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x44B19DFC"
    },
    "191": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x222"
    },
    "195": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA"
    },
    "199": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMP",
      "path": "10"
    },
    "200": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "201": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "202": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xABB6035"
    },
    "207": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "212": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "213": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x17D7DE7C"
    },
    "218": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x117"
    },
    "222": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "223": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "224": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2019C75A"
    },
    "229": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "EQ",
      "path": "10"
    },
    "230": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x194"
    },
    "233": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "234": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "235": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "DUP1",
      "path": "10"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        420,
        7508
      ],
      "op": "REVERT",
      "path": "10"
    },
    "239": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "240": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "243": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "245": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "DUP1",
      "path": "10"
    },
    "246": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "247": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "SUB",
      "path": "10"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "250": {
      "op": "DUP2"
    },
    "251": {
      "op": "LT"
    },
    "252": {
      "op": "ISZERO"
    },
    "253": {
      "op": "PUSH2",
      "value": "0x105"
    },
    "256": {
      "op": "JUMPI"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "259": {
      "op": "DUP1"
    },
    "260": {
      "op": "REVERT"
    },
    "261": {
      "op": "JUMPDEST"
    },
    "262": {
      "op": "POP"
    },
    "263": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "270": {
      "op": "SHL"
    },
    "271": {
      "op": "SUB"
    },
    "272": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "AND",
      "path": "10"
    },
    "273": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4D5"
    },
    "276": {
      "fn": "YRegistry.setPendingGovernance",
      "jump": "i",
      "offset": [
        6976,
        7113
      ],
      "op": "JUMP",
      "path": "10"
    },
    "277": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "278": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "STOP",
      "path": "10"
    },
    "279": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "280": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F"
    },
    "283": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x540"
    },
    "286": {
      "fn": "YRegistry.getName",
      "jump": "i",
      "offset": [
        993,
        1085
      ],
      "op": "JUMP",
      "path": "10"
    },
    "287": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "288": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "290": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "291": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "292": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "294": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "295": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP3",
      "path": "10"
    },
    "296": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "297": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "10"
    },
    "298": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "299": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "300": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "10"
    },
    "301": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "10"
    },
    "302": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "303": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "10"
    },
    "304": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "305": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "306": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "307": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "10"
    },
    "308": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "309": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "310": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "10"
    },
    "311": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "10"
    },
    "312": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "313": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP6",
      "path": "10"
    },
    "314": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "10"
    },
    "315": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "316": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "317": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "10"
    },
    "318": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "10"
    },
    "319": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "321": {
      "op": "JUMPDEST"
    },
    "322": {
      "op": "DUP4"
    },
    "323": {
      "op": "DUP2"
    },
    "324": {
      "op": "LT"
    },
    "325": {
      "op": "ISZERO"
    },
    "326": {
      "op": "PUSH2",
      "value": "0x159"
    },
    "329": {
      "op": "JUMPI"
    },
    "330": {
      "op": "DUP2"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "ADD"
    },
    "333": {
      "op": "MLOAD"
    },
    "334": {
      "op": "DUP4"
    },
    "335": {
      "op": "DUP3"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "op": "MSTORE"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "340": {
      "op": "ADD"
    },
    "341": {
      "op": "PUSH2",
      "value": "0x141"
    },
    "344": {
      "op": "JUMP"
    },
    "345": {
      "op": "JUMPDEST"
    },
    "346": {
      "op": "POP"
    },
    "347": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "348": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "349": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "350": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "351": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "352": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "353": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "354": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "10"
    },
    "355": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "356": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "358": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "AND",
      "path": "10"
    },
    "359": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "360": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "361": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x186"
    },
    "364": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "365": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "366": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP3",
      "path": "10"
    },
    "367": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SUB",
      "path": "10"
    },
    "368": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "369": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "370": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "372": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP4",
      "path": "10"
    },
    "373": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "375": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SUB",
      "path": "10"
    },
    "376": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "379": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "EXP",
      "path": "10"
    },
    "380": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SUB",
      "path": "10"
    },
    "381": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "NOT",
      "path": "10"
    },
    "382": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "AND",
      "path": "10"
    },
    "383": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "384": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "385": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "387": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "ADD",
      "path": "10"
    },
    "388": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "389": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "390": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "391": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "392": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "393": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "394": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "395": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "POP",
      "path": "10"
    },
    "396": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "398": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "399": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "400": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "401": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SUB",
      "path": "10"
    },
    "402": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "403": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "RETURN",
      "path": "10"
    },
    "404": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "405": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "408": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "410": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "DUP1",
      "path": "10"
    },
    "411": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "412": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "SUB",
      "path": "10"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "415": {
      "op": "DUP2"
    },
    "416": {
      "op": "LT"
    },
    "417": {
      "op": "ISZERO"
    },
    "418": {
      "op": "PUSH2",
      "value": "0x1AA"
    },
    "421": {
      "op": "JUMPI"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "424": {
      "op": "DUP1"
    },
    "425": {
      "op": "REVERT"
    },
    "426": {
      "op": "JUMPDEST"
    },
    "427": {
      "op": "POP"
    },
    "428": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "AND",
      "path": "10"
    },
    "438": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x563"
    },
    "441": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        1767,
        2172
      ],
      "op": "JUMP",
      "path": "10"
    },
    "442": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7119,
        7218
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "443": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7119,
        7218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "446": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7119,
        7218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5DC"
    },
    "449": {
      "fn": "YRegistry.acceptGovernance",
      "jump": "i",
      "offset": [
        7119,
        7218
      ],
      "op": "JUMP",
      "path": "10"
    },
    "450": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "451": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "454": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "456": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "DUP1",
      "path": "10"
    },
    "457": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "458": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "SUB",
      "path": "10"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "461": {
      "op": "DUP2"
    },
    "462": {
      "op": "LT"
    },
    "463": {
      "op": "ISZERO"
    },
    "464": {
      "op": "PUSH2",
      "value": "0x1D8"
    },
    "467": {
      "op": "JUMPI"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "470": {
      "op": "DUP1"
    },
    "471": {
      "op": "REVERT"
    },
    "472": {
      "op": "JUMPDEST"
    },
    "473": {
      "op": "POP"
    },
    "474": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "op": "SUB"
    },
    "483": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "AND",
      "path": "10"
    },
    "484": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x639"
    },
    "487": {
      "fn": "YRegistry.addVault",
      "jump": "i",
      "offset": [
        1091,
        1278
      ],
      "op": "JUMP",
      "path": "10"
    },
    "488": {
      "offset": [
        785,
        833
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "489": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20E"
    },
    "492": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "494": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP1",
      "path": "10"
    },
    "495": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "496": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SUB",
      "path": "10"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "499": {
      "op": "DUP2"
    },
    "500": {
      "op": "LT"
    },
    "501": {
      "op": "ISZERO"
    },
    "502": {
      "op": "PUSH2",
      "value": "0x1FE"
    },
    "505": {
      "op": "JUMPI"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "508": {
      "op": "DUP1"
    },
    "509": {
      "op": "REVERT"
    },
    "510": {
      "op": "JUMPDEST"
    },
    "511": {
      "op": "POP"
    },
    "512": {
      "offset": [
        785,
        833
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "519": {
      "op": "SHL"
    },
    "520": {
      "op": "SUB"
    },
    "521": {
      "offset": [
        785,
        833
      ],
      "op": "AND",
      "path": "10"
    },
    "522": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x68B"
    },
    "525": {
      "fn": "YRegistry.addVault",
      "jump": "i",
      "offset": [
        785,
        833
      ],
      "op": "JUMP",
      "path": "10"
    },
    "526": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "527": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "529": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP1",
      "path": "10"
    },
    "530": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "531": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "532": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "533": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "534": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP3",
      "path": "10"
    },
    "535": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "536": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "537": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "538": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP2",
      "path": "10"
    },
    "539": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "540": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SUB",
      "path": "10"
    },
    "541": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "543": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "ADD",
      "path": "10"
    },
    "544": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "545": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "RETURN",
      "path": "10"
    },
    "546": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "547": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22A"
    },
    "550": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6A0"
    },
    "553": {
      "fn": "YRegistry.getVaultsLength",
      "jump": "i",
      "offset": [
        5135,
        5233
      ],
      "op": "JUMP",
      "path": "10"
    },
    "554": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "555": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "557": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "DUP1",
      "path": "10"
    },
    "558": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "559": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "560": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "DUP3",
      "path": "10"
    },
    "561": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "562": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "563": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "564": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "DUP2",
      "path": "10"
    },
    "565": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "566": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "SUB",
      "path": "10"
    },
    "567": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "569": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "ADD",
      "path": "10"
    },
    "570": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "571": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "RETURN",
      "path": "10"
    },
    "572": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "573": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x244"
    },
    "576": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6B1"
    },
    "579": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        5239,
        5517
      ],
      "op": "JUMP",
      "path": "10"
    },
    "580": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "581": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "583": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP1",
      "path": "10"
    },
    "584": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "585": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "587": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP1",
      "path": "10"
    },
    "588": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP3",
      "path": "10"
    },
    "589": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "590": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP4",
      "path": "10"
    },
    "591": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "592": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP2",
      "path": "10"
    },
    "593": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP4",
      "path": "10"
    },
    "594": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "ADD",
      "path": "10"
    },
    "595": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "596": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP4",
      "path": "10"
    },
    "597": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "598": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "599": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "600": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP4",
      "path": "10"
    },
    "601": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "602": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "603": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP4",
      "path": "10"
    },
    "604": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "ADD",
      "path": "10"
    },
    "605": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "606": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP6",
      "path": "10"
    },
    "607": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP2",
      "path": "10"
    },
    "608": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "ADD",
      "path": "10"
    },
    "609": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "610": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "MUL",
      "path": "10"
    },
    "611": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP1",
      "path": "10"
    },
    "612": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP4",
      "path": "10"
    },
    "613": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP4",
      "path": "10"
    },
    "614": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "616": {
      "op": "JUMPDEST"
    },
    "617": {
      "op": "DUP4"
    },
    "618": {
      "op": "DUP2"
    },
    "619": {
      "op": "LT"
    },
    "620": {
      "op": "ISZERO"
    },
    "621": {
      "op": "PUSH2",
      "value": "0x280"
    },
    "624": {
      "op": "JUMPI"
    },
    "625": {
      "op": "DUP2"
    },
    "626": {
      "op": "DUP2"
    },
    "627": {
      "op": "ADD"
    },
    "628": {
      "op": "MLOAD"
    },
    "629": {
      "op": "DUP4"
    },
    "630": {
      "op": "DUP3"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "op": "MSTORE"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "op": "PUSH2",
      "value": "0x268"
    },
    "639": {
      "op": "JUMP"
    },
    "640": {
      "op": "JUMPDEST"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "POP",
      "path": "10"
    },
    "643": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "POP",
      "path": "10"
    },
    "644": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "POP",
      "path": "10"
    },
    "645": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "646": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "POP",
      "path": "10"
    },
    "647": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "ADD",
      "path": "10"
    },
    "648": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "649": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "POP",
      "path": "10"
    },
    "650": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "POP",
      "path": "10"
    },
    "651": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "POP",
      "path": "10"
    },
    "652": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "654": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "655": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "DUP1",
      "path": "10"
    },
    "656": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "657": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SUB",
      "path": "10"
    },
    "658": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "659": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "RETURN",
      "path": "10"
    },
    "660": {
      "offset": [
        563,
        588
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "661": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29C"
    },
    "664": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x741"
    },
    "667": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        563,
        588
      ],
      "op": "JUMP",
      "path": "10"
    },
    "668": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "669": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "671": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "DUP1",
      "path": "10"
    },
    "672": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "679": {
      "op": "SHL"
    },
    "680": {
      "op": "SUB"
    },
    "681": {
      "offset": [
        563,
        588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "682": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "683": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "AND",
      "path": "10"
    },
    "684": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "DUP3",
      "path": "10"
    },
    "685": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "686": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "687": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "688": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "DUP2",
      "path": "10"
    },
    "689": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "690": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SUB",
      "path": "10"
    },
    "691": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "693": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "ADD",
      "path": "10"
    },
    "694": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "695": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "RETURN",
      "path": "10"
    },
    "696": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "697": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "700": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "702": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "DUP1",
      "path": "10"
    },
    "703": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "704": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "SUB",
      "path": "10"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "707": {
      "op": "DUP2"
    },
    "708": {
      "op": "LT"
    },
    "709": {
      "op": "ISZERO"
    },
    "710": {
      "op": "PUSH2",
      "value": "0x2CE"
    },
    "713": {
      "op": "JUMPI"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "716": {
      "op": "DUP1"
    },
    "717": {
      "op": "REVERT"
    },
    "718": {
      "op": "JUMPDEST"
    },
    "719": {
      "op": "POP"
    },
    "720": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "op": "SUB"
    },
    "729": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "AND",
      "path": "10"
    },
    "730": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x750"
    },
    "733": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1284,
        1761
      ],
      "op": "JUMP",
      "path": "10"
    },
    "734": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "735": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E6"
    },
    "738": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x834"
    },
    "741": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        5938,
        6944
      ],
      "op": "JUMP",
      "path": "10"
    },
    "742": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "743": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "745": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "746": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "747": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "748": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "750": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "751": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "752": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "754": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "755": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "756": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "758": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "759": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "760": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "762": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "763": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "764": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "766": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "767": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP7",
      "path": "10"
    },
    "768": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "769": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SUB",
      "path": "10"
    },
    "770": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP7",
      "path": "10"
    },
    "771": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "772": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP12",
      "path": "10"
    },
    "773": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "774": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "775": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "776": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "777": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "778": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "780": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "781": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "782": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "783": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "784": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "785": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "786": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "788": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "789": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "790": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "792": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MUL",
      "path": "10"
    },
    "793": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "794": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "795": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "798": {
      "op": "JUMPDEST"
    },
    "799": {
      "op": "DUP4"
    },
    "800": {
      "op": "DUP2"
    },
    "801": {
      "op": "LT"
    },
    "802": {
      "op": "ISZERO"
    },
    "803": {
      "op": "PUSH2",
      "value": "0x336"
    },
    "806": {
      "op": "JUMPI"
    },
    "807": {
      "op": "DUP2"
    },
    "808": {
      "op": "DUP2"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "op": "MLOAD"
    },
    "811": {
      "op": "DUP4"
    },
    "812": {
      "op": "DUP3"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "op": "PUSH2",
      "value": "0x31E"
    },
    "821": {
      "op": "JUMP"
    },
    "822": {
      "op": "JUMPDEST"
    },
    "823": {
      "op": "POP"
    },
    "824": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "825": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "826": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "827": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "828": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "829": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "830": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP7",
      "path": "10"
    },
    "831": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "832": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SUB",
      "path": "10"
    },
    "833": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP6",
      "path": "10"
    },
    "834": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "835": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP11",
      "path": "10"
    },
    "836": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "837": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "838": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "839": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "840": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "841": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "843": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "844": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "845": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "846": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "847": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "848": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "849": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "851": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "852": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "853": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "855": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MUL",
      "path": "10"
    },
    "856": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "857": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "858": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "861": {
      "op": "JUMPDEST"
    },
    "862": {
      "op": "DUP4"
    },
    "863": {
      "op": "DUP2"
    },
    "864": {
      "op": "LT"
    },
    "865": {
      "op": "ISZERO"
    },
    "866": {
      "op": "PUSH2",
      "value": "0x375"
    },
    "869": {
      "op": "JUMPI"
    },
    "870": {
      "op": "DUP2"
    },
    "871": {
      "op": "DUP2"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "op": "MLOAD"
    },
    "874": {
      "op": "DUP4"
    },
    "875": {
      "op": "DUP3"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "op": "MSTORE"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "op": "PUSH2",
      "value": "0x35D"
    },
    "884": {
      "op": "JUMP"
    },
    "885": {
      "op": "JUMPDEST"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "888": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "889": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "890": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "891": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "892": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "893": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP7",
      "path": "10"
    },
    "894": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "895": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SUB",
      "path": "10"
    },
    "896": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP5",
      "path": "10"
    },
    "897": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "898": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP10",
      "path": "10"
    },
    "899": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "900": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "901": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "902": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "903": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "904": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "906": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "907": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "908": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "909": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "910": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "911": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "912": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "914": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "915": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "916": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "918": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MUL",
      "path": "10"
    },
    "919": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "920": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "921": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "924": {
      "op": "JUMPDEST"
    },
    "925": {
      "op": "DUP4"
    },
    "926": {
      "op": "DUP2"
    },
    "927": {
      "op": "LT"
    },
    "928": {
      "op": "ISZERO"
    },
    "929": {
      "op": "PUSH2",
      "value": "0x3B4"
    },
    "932": {
      "op": "JUMPI"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "DUP2"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "MLOAD"
    },
    "937": {
      "op": "DUP4"
    },
    "938": {
      "op": "DUP3"
    },
    "939": {
      "op": "ADD"
    },
    "940": {
      "op": "MSTORE"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "PUSH2",
      "value": "0x39C"
    },
    "947": {
      "op": "JUMP"
    },
    "948": {
      "op": "JUMPDEST"
    },
    "949": {
      "op": "POP"
    },
    "950": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "951": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "952": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "953": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "954": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "955": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "956": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP7",
      "path": "10"
    },
    "957": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "958": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SUB",
      "path": "10"
    },
    "959": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "960": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "961": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP9",
      "path": "10"
    },
    "962": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "963": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "964": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "965": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "966": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "967": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "969": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "970": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "971": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "972": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "973": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "974": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "975": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "977": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "978": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "979": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "981": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MUL",
      "path": "10"
    },
    "982": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "983": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "984": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "987": {
      "op": "JUMPDEST"
    },
    "988": {
      "op": "DUP4"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "LT"
    },
    "991": {
      "op": "ISZERO"
    },
    "992": {
      "op": "PUSH2",
      "value": "0x3F3"
    },
    "995": {
      "op": "JUMPI"
    },
    "996": {
      "op": "DUP2"
    },
    "997": {
      "op": "DUP2"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MLOAD"
    },
    "1000": {
      "op": "DUP4"
    },
    "1001": {
      "op": "DUP3"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "op": "MSTORE"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1006": {
      "op": "ADD"
    },
    "1007": {
      "op": "PUSH2",
      "value": "0x3DB"
    },
    "1010": {
      "op": "JUMP"
    },
    "1011": {
      "op": "JUMPDEST"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1014": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1015": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1016": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1017": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1018": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "1019": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1020": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1021": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SUB",
      "path": "10"
    },
    "1022": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1023": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1024": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1025": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1026": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1027": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1028": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1029": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1030": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1032": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "1033": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1034": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1035": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1036": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1037": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1038": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1040": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "1041": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1042": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1044": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MUL",
      "path": "10"
    },
    "1045": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1046": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1047": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1050": {
      "op": "JUMPDEST"
    },
    "1051": {
      "op": "DUP4"
    },
    "1052": {
      "op": "DUP2"
    },
    "1053": {
      "op": "LT"
    },
    "1054": {
      "op": "ISZERO"
    },
    "1055": {
      "op": "PUSH2",
      "value": "0x432"
    },
    "1058": {
      "op": "JUMPI"
    },
    "1059": {
      "op": "DUP2"
    },
    "1060": {
      "op": "DUP2"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MLOAD"
    },
    "1063": {
      "op": "DUP4"
    },
    "1064": {
      "op": "DUP3"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "op": "PUSH2",
      "value": "0x41A"
    },
    "1073": {
      "op": "JUMP"
    },
    "1074": {
      "op": "JUMPDEST"
    },
    "1075": {
      "op": "POP"
    },
    "1076": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1077": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1078": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1079": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1080": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1081": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "ADD",
      "path": "10"
    },
    "1082": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP11",
      "path": "10"
    },
    "1083": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1084": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1085": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1086": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1087": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1088": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1089": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1090": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1091": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1092": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1093": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "POP",
      "path": "10"
    },
    "1094": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1096": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1097": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1098": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1099": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SUB",
      "path": "10"
    },
    "1100": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1101": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "RETURN",
      "path": "10"
    },
    "1102": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1103": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x474"
    },
    "1106": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1108": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1109": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1110": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SUB",
      "path": "10"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1113": {
      "op": "DUP2"
    },
    "1114": {
      "op": "LT"
    },
    "1115": {
      "op": "ISZERO"
    },
    "1116": {
      "op": "PUSH2",
      "value": "0x464"
    },
    "1119": {
      "op": "JUMPI"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1122": {
      "op": "DUP1"
    },
    "1123": {
      "op": "REVERT"
    },
    "1124": {
      "op": "JUMPDEST"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "op": "SUB"
    },
    "1135": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "AND",
      "path": "10"
    },
    "1136": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA63"
    },
    "1139": {
      "fn": "YRegistry.getVaultInfo",
      "jump": "i",
      "offset": [
        5523,
        5932
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1140": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1141": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1143": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1144": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "SUB"
    },
    "1153": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "1154": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1155": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "AND",
      "path": "10"
    },
    "1156": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1157": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1158": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1159": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1160": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "AND",
      "path": "10"
    },
    "1161": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1163": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1164": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ADD",
      "path": "10"
    },
    "1165": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1166": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1167": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1168": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1169": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "AND",
      "path": "10"
    },
    "1170": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1171": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1172": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ADD",
      "path": "10"
    },
    "1173": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1174": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1175": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1176": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1178": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1179": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ADD",
      "path": "10"
    },
    "1180": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1181": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1182": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1183": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1184": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "1186": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1187": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ADD",
      "path": "10"
    },
    "1188": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1189": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1190": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1191": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1192": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1193": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1194": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SUB",
      "path": "10"
    },
    "1195": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA0"
    },
    "1197": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "ADD",
      "path": "10"
    },
    "1198": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1199": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "RETURN",
      "path": "10"
    },
    "1200": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1201": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29C"
    },
    "1204": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1206": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1207": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1208": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "SUB",
      "path": "10"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1211": {
      "op": "DUP2"
    },
    "1212": {
      "op": "LT"
    },
    "1213": {
      "op": "ISZERO"
    },
    "1214": {
      "op": "PUSH2",
      "value": "0x4C6"
    },
    "1217": {
      "op": "JUMPI"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1220": {
      "op": "DUP1"
    },
    "1221": {
      "op": "REVERT"
    },
    "1222": {
      "op": "JUMPDEST"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "1225": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA86"
    },
    "1228": {
      "fn": "YRegistry.getVault",
      "jump": "i",
      "offset": [
        5017,
        5129
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1229": {
      "offset": [
        594,
        626
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1230": {
      "fn": "YRegistry.getVault",
      "offset": [
        594,
        626
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29C"
    },
    "1233": {
      "fn": "YRegistry.getVault",
      "offset": [
        594,
        626
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA9F"
    },
    "1236": {
      "fn": "YRegistry.getVault",
      "jump": "i",
      "offset": [
        594,
        626
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1237": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        6976,
        7113
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1238": {
      "offset": [
        7280,
        7290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1240": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7280,
        7290
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "op": "SUB"
    },
    "1249": {
      "offset": [
        7280,
        7290
      ],
      "op": "AND",
      "path": "10"
    },
    "1250": {
      "offset": [
        7266,
        7276
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1251": {
      "offset": [
        7266,
        7290
      ],
      "op": "EQ",
      "path": "10"
    },
    "1252": {
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51E"
    },
    "1255": {
      "offset": [
        7258,
        7334
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1256": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1258": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1267": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1268": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1270": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1271": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1272": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1273": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1275": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1276": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1277": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1278": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "SUB",
      "path": "10"
    },
    "1279": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1280": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1281": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "1283": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1284": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1285": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1287": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1288": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1289": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1413"
    },
    "1292": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "1294": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1295": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1296": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1298": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1299": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1300": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "POP",
      "path": "10"
    },
    "1301": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "POP",
      "path": "10"
    },
    "1302": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1304": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1305": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1306": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1307": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "SUB",
      "path": "10"
    },
    "1308": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1309": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1310": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7258,
        7334
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1311": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7085
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x1"
    },
    "1313": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1314": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1321": {
      "op": "SHL"
    },
    "1322": {
      "op": "SUB"
    },
    "1323": {
      "op": "NOT"
    },
    "1324": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "AND",
      "path": "10"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1331": {
      "op": "SHL"
    },
    "1332": {
      "op": "SUB"
    },
    "1333": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1334": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1335": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1336": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "AND",
      "path": "10"
    },
    "1337": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1338": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1339": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1340": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "OR",
      "path": "10"
    },
    "1341": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1342": {
      "fn": "YRegistry.setPendingGovernance",
      "offset": [
        7068,
        7106
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1343": {
      "fn": "YRegistry.setPendingGovernance",
      "jump": "o",
      "offset": [
        6976,
        7113
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1344": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1345": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 1,
      "value": "0x40"
    },
    "1347": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1348": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1349": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1350": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1351": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "ADD",
      "path": "10"
    },
    "1352": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1353": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1354": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1355": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "1357": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1358": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1359": {
      "op": "PUSH9",
      "value": "0x595265676973747279"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1374": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1375": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "ADD",
      "path": "10"
    },
    "1376": {
      "fn": "YRegistry.getName",
      "offset": [
        1060,
        1078
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1377": {
      "fn": "YRegistry.getName",
      "offset": [
        993,
        1085
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1378": {
      "fn": "YRegistry.getName",
      "jump": "o",
      "offset": [
        993,
        1085
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1379": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1380": {
      "offset": [
        7280,
        7290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1382": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7280,
        7290
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1389": {
      "op": "SHL"
    },
    "1390": {
      "op": "SUB"
    },
    "1391": {
      "offset": [
        7280,
        7290
      ],
      "op": "AND",
      "path": "10"
    },
    "1392": {
      "offset": [
        7266,
        7276
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1393": {
      "offset": [
        7266,
        7290
      ],
      "op": "EQ",
      "path": "10"
    },
    "1394": {
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5AC"
    },
    "1397": {
      "offset": [
        7258,
        7334
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1398": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1400": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1407": {
      "op": "SHL"
    },
    "1408": {
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1409": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1410": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1412": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1413": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1414": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1415": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1417": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1418": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1419": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1420": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SUB",
      "path": "10"
    },
    "1421": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1422": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1423": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "1425": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1426": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1427": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1429": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1430": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1431": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1413"
    },
    "1434": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "1436": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1437": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1438": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1440": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1441": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1442": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "POP",
      "path": "10"
    },
    "1443": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "POP",
      "path": "10"
    },
    "1444": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1446": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1447": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1448": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1449": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SUB",
      "path": "10"
    },
    "1450": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1451": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1452": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1453": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1842,
        1858
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 2,
      "value": "0x5B5"
    },
    "1456": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1851,
        1857
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1457": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1842,
        1850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAAE"
    },
    "1460": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        1842,
        1858
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1461": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1842,
        1858
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1462": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1868,
        1893
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 3,
      "value": "0x5BE"
    },
    "1465": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1886,
        1892
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1466": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1868,
        1885
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB7C"
    },
    "1469": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        1868,
        1893
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1470": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1868,
        1893
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1471": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1905,
        1923
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1473": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1935,
        1955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5C9"
    },
    "1476": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1948,
        1954
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1477": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1935,
        1947
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBA0"
    },
    "1480": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        1935,
        1955
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1481": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1935,
        1955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1482": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "10"
    },
    "1483": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "10"
    },
    "1484": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "10"
    },
    "1485": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "10"
    },
    "1486": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1487": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1904,
        1955
      ],
      "op": "POP",
      "path": "10"
    },
    "1488": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        2003,
        2028
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 4,
      "value": "0x5D8"
    },
    "1491": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        2017,
        2027
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1492": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        2003,
        2016
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11C7"
    },
    "1495": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "i",
      "offset": [
        2003,
        2028
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1496": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        2003,
        2028
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1497": {
      "offset": [
        7344,
        7345
      ],
      "op": "POP",
      "path": "10"
    },
    "1498": {
      "fn": "YRegistry.addDelegatedVault",
      "offset": [
        1767,
        2172
      ],
      "op": "POP",
      "path": "10"
    },
    "1499": {
      "fn": "YRegistry.addDelegatedVault",
      "jump": "o",
      "offset": [
        1767,
        2172
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1500": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7119,
        7218
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1501": {
      "offset": [
        7420,
        7437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1503": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7420,
        7437
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "offset": [
        7420,
        7437
      ],
      "op": "AND",
      "path": "10"
    },
    "1513": {
      "offset": [
        7406,
        7416
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1514": {
      "offset": [
        7406,
        7437
      ],
      "op": "EQ",
      "path": "10"
    },
    "1515": {
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x625"
    },
    "1518": {
      "offset": [
        7398,
        7488
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1519": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1521": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1528": {
      "op": "SHL"
    },
    "1529": {
      "offset": [
        7398,
        7488
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1530": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1531": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1533": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "ADD",
      "path": "10"
    },
    "1534": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1535": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1536": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1538": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "ADD",
      "path": "10"
    },
    "1539": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1540": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1541": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "SUB",
      "path": "10"
    },
    "1542": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1543": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1544": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2E"
    },
    "1546": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1547": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1548": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1550": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "ADD",
      "path": "10"
    },
    "1551": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1552": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13BE"
    },
    "1555": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2E"
    },
    "1557": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1558": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1559": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1561": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "ADD",
      "path": "10"
    },
    "1562": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1563": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "POP",
      "path": "10"
    },
    "1564": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "POP",
      "path": "10"
    },
    "1565": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1567": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1568": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1569": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1570": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "SUB",
      "path": "10"
    },
    "1571": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1572": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1573": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7398,
        7488
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1574": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7188,
        7198
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 5,
      "value": "0x0"
    },
    "1576": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7188,
        7211
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1577": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7188,
        7211
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "op": "SUB"
    },
    "1586": {
      "op": "NOT"
    },
    "1587": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7188,
        7211
      ],
      "op": "AND",
      "path": "10"
    },
    "1588": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7201,
        7211
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1589": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7188,
        7211
      ],
      "op": "OR",
      "path": "10"
    },
    "1590": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7188,
        7211
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1591": {
      "fn": "YRegistry.acceptGovernance",
      "offset": [
        7188,
        7211
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1592": {
      "fn": "YRegistry.acceptGovernance",
      "jump": "o",
      "offset": [
        7119,
        7218
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1593": {
      "fn": "YRegistry.addVault",
      "offset": [
        1091,
        1278
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1594": {
      "offset": [
        7280,
        7290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1596": {
      "fn": "YRegistry.addVault",
      "offset": [
        7280,
        7290
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "offset": [
        7280,
        7290
      ],
      "op": "AND",
      "path": "10"
    },
    "1606": {
      "offset": [
        7266,
        7276
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1607": {
      "offset": [
        7266,
        7290
      ],
      "op": "EQ",
      "path": "10"
    },
    "1608": {
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x682"
    },
    "1611": {
      "offset": [
        7258,
        7334
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1612": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1614": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1615": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1621": {
      "op": "SHL"
    },
    "1622": {
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1623": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1624": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1626": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1627": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1628": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1629": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1631": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1632": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1633": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1634": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SUB",
      "path": "10"
    },
    "1635": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1636": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1637": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "1639": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1640": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1641": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1643": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1644": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1645": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1413"
    },
    "1648": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "1650": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1651": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1652": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1654": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1655": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1656": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "POP",
      "path": "10"
    },
    "1657": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "POP",
      "path": "10"
    },
    "1658": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1660": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1661": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1662": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1663": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SUB",
      "path": "10"
    },
    "1664": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1665": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1666": {
      "fn": "YRegistry.addVault",
      "offset": [
        7258,
        7334
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1667": {
      "fn": "YRegistry.addVault",
      "offset": [
        1157,
        1173
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 6,
      "value": "0x5BE"
    },
    "1670": {
      "fn": "YRegistry.addVault",
      "offset": [
        1166,
        1172
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1671": {
      "fn": "YRegistry.addVault",
      "offset": [
        1157,
        1165
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAAE"
    },
    "1674": {
      "fn": "YRegistry.addVault",
      "jump": "i",
      "offset": [
        1157,
        1173
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1675": {
      "offset": [
        785,
        833
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1676": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1678": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1680": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1681": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1683": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1684": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1685": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1686": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1688": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1689": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1690": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1691": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1693": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "AND",
      "path": "10"
    },
    "1694": {
      "fn": "YRegistry.addVault",
      "offset": [
        785,
        833
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1695": {
      "fn": "YRegistry.addVault",
      "jump": "o",
      "offset": [
        785,
        833
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1696": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1697": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5185,
        5192
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1699": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5211,
        5226
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 7,
      "value": "0x6AC"
    },
    "1702": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5211,
        5217
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1704": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5211,
        5224
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "1707": {
      "fn": "YRegistry.getVaultsLength",
      "jump": "i",
      "offset": [
        5211,
        5226
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1708": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5211,
        5226
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1709": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5204,
        5226
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1710": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5204,
        5226
      ],
      "op": "POP",
      "path": "10"
    },
    "1711": {
      "fn": "YRegistry.getVaultsLength",
      "offset": [
        5135,
        5233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1712": {
      "fn": "YRegistry.getVaultsLength",
      "jump": "o",
      "offset": [
        5135,
        5233
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1713": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1714": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5283,
        5299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1716": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5311,
        5339
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1717": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5356,
        5371
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6BE"
    },
    "1720": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5356,
        5362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1722": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5356,
        5369
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "1725": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        5356,
        5371
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1726": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5356,
        5371
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1727": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1729": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1730": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1731": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1732": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1733": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1734": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1735": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1737": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "MUL",
      "path": "10"
    },
    "1738": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1740": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "ADD",
      "path": "10"
    },
    "1741": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1742": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "ADD",
      "path": "10"
    },
    "1743": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1745": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1746": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1747": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1748": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6E7"
    },
    "1751": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1752": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1753": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1755": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "ADD",
      "path": "10"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1758": {
      "op": "DUP3"
    },
    "1759": {
      "op": "MUL"
    },
    "1760": {
      "op": "DUP1"
    },
    "1761": {
      "op": "CODESIZE"
    },
    "1762": {
      "op": "DUP4"
    },
    "1763": {
      "op": "CODECOPY"
    },
    "1764": {
      "op": "ADD"
    },
    "1765": {
      "op": "SWAP1"
    },
    "1766": {
      "op": "POP"
    },
    "1767": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5342,
        5372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5311,
        5372
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5387,
        5396
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1773": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5382,
        5483
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1774": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5406,
        5421
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6F7"
    },
    "1777": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5406,
        5412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1779": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5406,
        5419
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "1782": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        5406,
        5421
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1783": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5406,
        5421
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1784": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5402,
        5403
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1785": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5402,
        5421
      ],
      "op": "LT",
      "path": "10"
    },
    "1786": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5382,
        5483
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1787": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5382,
        5483
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x73B"
    },
    "1790": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5382,
        5483
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1791": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5472
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 8,
      "value": "0x70F"
    },
    "1794": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5465
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1796": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5470,
        5471
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1797": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5472
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1802": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5469
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F7"
    },
    "1805": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5472
      ],
      "op": "AND",
      "path": "10"
    },
    "1806": {
      "fn": "YRegistry.getVaults",
      "jump": "i",
      "offset": [
        5459,
        5472
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1807": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5459,
        5472
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1808": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5453
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1809": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5454,
        5455
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1810": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1811": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1812": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1813": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "LT",
      "path": "10"
    },
    "1814": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71B"
    },
    "1817": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1818": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "INVALID",
      "path": "10"
    },
    "1819": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5472
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1829": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5472
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1830": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5472
      ],
      "op": "AND",
      "path": "10"
    },
    "1831": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1833": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1834": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1835": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "MUL",
      "path": "10"
    },
    "1836": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1837": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1838": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1839": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "ADD",
      "path": "10"
    },
    "1840": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1841": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1842": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5456
      ],
      "op": "ADD",
      "path": "10"
    },
    "1843": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5442,
        5472
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1844": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5423,
        5426
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 9,
      "value": "0x1"
    },
    "1846": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5423,
        5426
      ],
      "op": "ADD",
      "path": "10"
    },
    "1847": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5382,
        5483
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6ED"
    },
    "1850": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5382,
        5483
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1851": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5382,
        5483
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1852": {
      "op": "POP"
    },
    "1853": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5499,
        5510
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 10
    },
    "1854": {
      "op": "POP"
    },
    "1855": {
      "fn": "YRegistry.getVaults",
      "offset": [
        5239,
        5517
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1856": {
      "fn": "YRegistry.getVaults",
      "jump": "o",
      "offset": [
        5239,
        5517
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1857": {
      "offset": [
        563,
        588
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1858": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1860": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1867": {
      "op": "SHL"
    },
    "1868": {
      "op": "SUB"
    },
    "1869": {
      "offset": [
        563,
        588
      ],
      "op": "AND",
      "path": "10"
    },
    "1870": {
      "fn": "YRegistry.getVaults",
      "offset": [
        563,
        588
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1871": {
      "fn": "YRegistry.getVaults",
      "jump": "o",
      "offset": [
        563,
        588
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1872": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1873": {
      "offset": [
        7280,
        7290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1875": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7280,
        7290
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "offset": [
        7280,
        7290
      ],
      "op": "AND",
      "path": "10"
    },
    "1885": {
      "offset": [
        7266,
        7276
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1886": {
      "offset": [
        7266,
        7290
      ],
      "op": "EQ",
      "path": "10"
    },
    "1887": {
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x799"
    },
    "1890": {
      "offset": [
        7258,
        7334
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1891": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1893": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1894": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1902": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1903": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1905": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1906": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1907": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1908": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1910": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1911": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1912": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1913": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SUB",
      "path": "10"
    },
    "1914": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1915": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1916": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "1918": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1919": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1920": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1922": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1923": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1924": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1413"
    },
    "1927": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "1929": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1930": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "1931": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1933": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "ADD",
      "path": "10"
    },
    "1934": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1935": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "POP",
      "path": "10"
    },
    "1936": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "POP",
      "path": "10"
    },
    "1937": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1939": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1940": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1941": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1942": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SUB",
      "path": "10"
    },
    "1943": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1944": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1945": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7258,
        7334
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1946": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1357,
        1373
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 11,
      "value": "0x7A2"
    },
    "1949": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1366,
        1372
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1950": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1357,
        1365
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAAE"
    },
    "1953": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1357,
        1373
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1954": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1357,
        1373
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1955": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1383,
        1403
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1957": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1420,
        1426
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "op": "SUB"
    },
    "1966": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1433
      ],
      "op": "AND",
      "path": "10"
    },
    "1967": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1433
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFBFA77CF"
    },
    "1972": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1974": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1975": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1976": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1981": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "AND",
      "path": "10"
    },
    "1982": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "1984": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "SHL",
      "path": "10"
    },
    "1985": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1986": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1987": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1989": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "ADD",
      "path": "10"
    },
    "1990": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1992": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1994": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1995": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1996": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1997": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "SUB",
      "path": "10"
    },
    "1998": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1999": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2000": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2001": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "2002": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2003": {
      "op": "DUP1"
    },
    "2004": {
      "op": "ISZERO"
    },
    "2005": {
      "op": "PUSH2",
      "value": "0x7DD"
    },
    "2008": {
      "op": "JUMPI"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2011": {
      "op": "DUP1"
    },
    "2012": {
      "op": "REVERT"
    },
    "2013": {
      "op": "JUMPDEST"
    },
    "2014": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "10"
    },
    "2015": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "GAS",
      "path": "10"
    },
    "2016": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "2017": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2018": {
      "op": "DUP1"
    },
    "2019": {
      "op": "ISZERO"
    },
    "2020": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "2023": {
      "op": "JUMPI"
    },
    "2024": {
      "op": "RETURNDATASIZE"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2027": {
      "op": "DUP1"
    },
    "2028": {
      "op": "RETURNDATACOPY"
    },
    "2029": {
      "op": "RETURNDATASIZE"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2032": {
      "op": "REVERT"
    },
    "2033": {
      "op": "JUMPDEST"
    },
    "2034": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "10"
    },
    "2035": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "10"
    },
    "2036": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "10"
    },
    "2037": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "POP",
      "path": "10"
    },
    "2038": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2040": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2041": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2044": {
      "op": "DUP2"
    },
    "2045": {
      "op": "LT"
    },
    "2046": {
      "op": "ISZERO"
    },
    "2047": {
      "op": "PUSH2",
      "value": "0x807"
    },
    "2050": {
      "op": "JUMPI"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2053": {
      "op": "DUP1"
    },
    "2054": {
      "op": "REVERT"
    },
    "2055": {
      "op": "JUMPDEST"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2058": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1445,
        1482
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 12,
      "value": "0x815"
    },
    "2063": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1461,
        1467
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2064": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1406,
        1435
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2065": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1445,
        1460
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1224"
    },
    "2068": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1445,
        1482
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2069": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1445,
        1482
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2070": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1494,
        1512
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2072": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1524,
        1544
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x820"
    },
    "2075": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1537,
        1543
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2076": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1524,
        1536
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBA0"
    },
    "2079": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1524,
        1544
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2080": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1524,
        1544
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2081": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "10"
    },
    "2082": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "10"
    },
    "2083": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "10"
    },
    "2084": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "10"
    },
    "2085": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2086": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1493,
        1544
      ],
      "op": "POP",
      "path": "10"
    },
    "2087": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1592,
        1617
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 13,
      "value": "0x82F"
    },
    "2090": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1606,
        1616
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2091": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1592,
        1605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11C7"
    },
    "2094": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "i",
      "offset": [
        1592,
        1617
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2095": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1592,
        1617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2096": {
      "offset": [
        7344,
        7345
      ],
      "op": "POP",
      "path": "10"
    },
    "2097": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        7344,
        7345
      ],
      "op": "POP",
      "path": "10"
    },
    "2098": {
      "fn": "YRegistry.addWrappedVault",
      "offset": [
        1284,
        1761
      ],
      "op": "POP",
      "path": "10"
    },
    "2099": {
      "fn": "YRegistry.addWrappedVault",
      "jump": "o",
      "offset": [
        1284,
        1761
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2100": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2101": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6023,
        6055
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2103": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6069,
        6096
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2104": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6110,
        6140
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2106": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6154,
        6182
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2107": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6196,
        6226
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2109": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6283,
        6298
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 14,
      "value": "0x846"
    },
    "2112": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6283,
        6289
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2114": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6283,
        6296
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "2117": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6283,
        6298
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2118": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6283,
        6298
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2119": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2121": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2122": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2123": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2124": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2125": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2126": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2127": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2129": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "MUL",
      "path": "10"
    },
    "2130": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2132": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "ADD",
      "path": "10"
    },
    "2133": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2134": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "ADD",
      "path": "10"
    },
    "2135": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2137": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2138": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2139": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2140": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x86F"
    },
    "2143": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2144": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2145": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2147": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "ADD",
      "path": "10"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2150": {
      "op": "DUP3"
    },
    "2151": {
      "op": "MUL"
    },
    "2152": {
      "op": "DUP1"
    },
    "2153": {
      "op": "CODESIZE"
    },
    "2154": {
      "op": "DUP4"
    },
    "2155": {
      "op": "CODECOPY"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "op": "SWAP1"
    },
    "2158": {
      "op": "POP"
    },
    "2159": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2160": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6269,
        6299
      ],
      "op": "POP",
      "path": "10"
    },
    "2161": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6251,
        6299
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2162": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6251,
        6299
      ],
      "op": "POP",
      "path": "10"
    },
    "2163": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6336,
        6351
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 15,
      "value": "0x87C"
    },
    "2166": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6336,
        6342
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2168": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6336,
        6349
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "2171": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6336,
        6351
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2172": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6336,
        6351
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2173": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2175": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2176": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2177": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2178": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2179": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2180": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2181": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2183": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "MUL",
      "path": "10"
    },
    "2184": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2186": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "ADD",
      "path": "10"
    },
    "2187": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2188": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "ADD",
      "path": "10"
    },
    "2189": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2191": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2192": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2193": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2194": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A5"
    },
    "2197": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2198": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2199": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2201": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "ADD",
      "path": "10"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2204": {
      "op": "DUP3"
    },
    "2205": {
      "op": "MUL"
    },
    "2206": {
      "op": "DUP1"
    },
    "2207": {
      "op": "CODESIZE"
    },
    "2208": {
      "op": "DUP4"
    },
    "2209": {
      "op": "CODECOPY"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "op": "SWAP1"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2214": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6322,
        6352
      ],
      "op": "POP",
      "path": "10"
    },
    "2215": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6309,
        6352
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2216": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6309,
        6352
      ],
      "op": "POP",
      "path": "10"
    },
    "2217": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6392,
        6407
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 16,
      "value": "0x8B2"
    },
    "2220": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6392,
        6398
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2222": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6392,
        6405
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "2225": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6392,
        6407
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2226": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6392,
        6407
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2227": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2229": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2230": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2231": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2232": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2233": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2234": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2235": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2237": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "MUL",
      "path": "10"
    },
    "2238": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2240": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "ADD",
      "path": "10"
    },
    "2241": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2242": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "ADD",
      "path": "10"
    },
    "2243": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2245": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2246": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2247": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2248": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8DB"
    },
    "2251": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2252": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2253": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2255": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "ADD",
      "path": "10"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2258": {
      "op": "DUP3"
    },
    "2259": {
      "op": "MUL"
    },
    "2260": {
      "op": "DUP1"
    },
    "2261": {
      "op": "CODESIZE"
    },
    "2262": {
      "op": "DUP4"
    },
    "2263": {
      "op": "CODECOPY"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "SWAP1"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2268": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6378,
        6408
      ],
      "op": "POP",
      "path": "10"
    },
    "2269": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6362,
        6408
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2270": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6362,
        6408
      ],
      "op": "POP",
      "path": "10"
    },
    "2271": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6446,
        6461
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 17,
      "value": "0x8E8"
    },
    "2274": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6446,
        6452
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2276": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6446,
        6459
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "2279": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6446,
        6461
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2280": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6446,
        6461
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2281": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2283": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2284": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2285": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2286": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2287": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2288": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2289": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2291": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "MUL",
      "path": "10"
    },
    "2292": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2294": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "ADD",
      "path": "10"
    },
    "2295": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2296": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "ADD",
      "path": "10"
    },
    "2297": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2299": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2300": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2301": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2302": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x911"
    },
    "2305": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2306": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2307": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2309": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "ADD",
      "path": "10"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2312": {
      "op": "DUP3"
    },
    "2313": {
      "op": "MUL"
    },
    "2314": {
      "op": "DUP1"
    },
    "2315": {
      "op": "CODESIZE"
    },
    "2316": {
      "op": "DUP4"
    },
    "2317": {
      "op": "CODECOPY"
    },
    "2318": {
      "op": "ADD"
    },
    "2319": {
      "op": "SWAP1"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2322": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6435,
        6462
      ],
      "op": "POP",
      "path": "10"
    },
    "2323": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6462
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2324": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6418,
        6462
      ],
      "op": "POP",
      "path": "10"
    },
    "2325": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6502,
        6517
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 18,
      "value": "0x91E"
    },
    "2328": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6502,
        6508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2330": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6502,
        6515
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "2333": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6502,
        6517
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2334": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6502,
        6517
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2335": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2337": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2338": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2339": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2340": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2341": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2342": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2343": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2345": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "MUL",
      "path": "10"
    },
    "2346": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2348": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "ADD",
      "path": "10"
    },
    "2349": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2350": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "ADD",
      "path": "10"
    },
    "2351": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2353": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2354": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2355": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2356": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x947"
    },
    "2359": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2360": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2361": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2363": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "ADD",
      "path": "10"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2366": {
      "op": "DUP3"
    },
    "2367": {
      "op": "MUL"
    },
    "2368": {
      "op": "DUP1"
    },
    "2369": {
      "op": "CODESIZE"
    },
    "2370": {
      "op": "DUP4"
    },
    "2371": {
      "op": "CODECOPY"
    },
    "2372": {
      "op": "ADD"
    },
    "2373": {
      "op": "SWAP1"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6491,
        6518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6472,
        6518
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6534,
        6543
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2381": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2382": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6553,
        6568
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x957"
    },
    "2385": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6553,
        6559
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2387": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6553,
        6566
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F0"
    },
    "2390": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6553,
        6568
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2391": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6553,
        6568
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2392": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6549,
        6550
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2393": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6549,
        6568
      ],
      "op": "LT",
      "path": "10"
    },
    "2394": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2395": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA5B"
    },
    "2398": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2399": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6590,
        6609
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2401": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6590,
        6609
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2402": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6590,
        6609
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2403": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6590,
        6609
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2404": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6590,
        6609
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2405": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6684,
        6711
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x97D"
    },
    "2408": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6697,
        6710
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x978"
    },
    "2411": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6697,
        6703
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2413": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6708,
        6709
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2414": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6697,
        6710
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2419": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6697,
        6707
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F7"
    },
    "2422": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6697,
        6710
      ],
      "op": "AND",
      "path": "10"
    },
    "2423": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6697,
        6710
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2424": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6697,
        6710
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2425": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6684,
        6696
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBA0"
    },
    "2428": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "i",
      "offset": [
        6684,
        6711
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2429": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6684,
        6711
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2430": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2431": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "POP",
      "path": "10"
    },
    "2432": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2433": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "POP",
      "path": "10"
    },
    "2434": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2435": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "POP",
      "path": "10"
    },
    "2436": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2437": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "POP",
      "path": "10"
    },
    "2438": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2439": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6589,
        6711
      ],
      "op": "POP",
      "path": "10"
    },
    "2440": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6746,
        6757
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 19
    },
    "2441": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6740
      ],
      "op": "DUP12",
      "path": "10"
    },
    "2442": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6741,
        6742
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2443": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2444": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2445": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2446": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "LT",
      "path": "10"
    },
    "2447": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x994"
    },
    "2450": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2451": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "INVALID",
      "path": "10"
    },
    "2452": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2453": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2455": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "MUL",
      "path": "10"
    },
    "2456": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2458": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "ADD",
      "path": "10"
    },
    "2459": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6743
      ],
      "op": "ADD",
      "path": "10"
    },
    "2460": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "op": "SUB"
    },
    "2469": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "AND",
      "path": "10"
    },
    "2470": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2471": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2478": {
      "op": "SHL"
    },
    "2479": {
      "op": "SUB"
    },
    "2480": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "AND",
      "path": "10"
    },
    "2481": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2482": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2483": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "POP",
      "path": "10"
    },
    "2484": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6725,
        6757
      ],
      "op": "POP",
      "path": "10"
    },
    "2485": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6787,
        6793
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 20
    },
    "2486": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6781
      ],
      "op": "DUP11",
      "path": "10"
    },
    "2487": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6782,
        6783
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2488": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2489": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2490": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2491": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "LT",
      "path": "10"
    },
    "2492": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9C1"
    },
    "2495": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2496": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "INVALID",
      "path": "10"
    },
    "2497": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2498": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2500": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "MUL",
      "path": "10"
    },
    "2501": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2503": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "ADD",
      "path": "10"
    },
    "2504": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6784
      ],
      "op": "ADD",
      "path": "10"
    },
    "2505": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "op": "SUB"
    },
    "2514": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "AND",
      "path": "10"
    },
    "2515": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2516": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "op": "SUB"
    },
    "2525": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "AND",
      "path": "10"
    },
    "2526": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2527": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2528": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "POP",
      "path": "10"
    },
    "2529": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6771,
        6793
      ],
      "op": "POP",
      "path": "10"
    },
    "2530": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6826,
        6835
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 21
    },
    "2531": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6820
      ],
      "op": "DUP10",
      "path": "10"
    },
    "2532": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6821,
        6822
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2533": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2534": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2535": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2536": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "LT",
      "path": "10"
    },
    "2537": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9EE"
    },
    "2540": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2541": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "INVALID",
      "path": "10"
    },
    "2542": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2543": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2545": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "MUL",
      "path": "10"
    },
    "2546": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2548": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "ADD",
      "path": "10"
    },
    "2549": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6823
      ],
      "op": "ADD",
      "path": "10"
    },
    "2550": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "op": "SUB"
    },
    "2559": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "AND",
      "path": "10"
    },
    "2560": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2561": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "AND",
      "path": "10"
    },
    "2571": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2572": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2573": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "POP",
      "path": "10"
    },
    "2574": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6807,
        6835
      ],
      "op": "POP",
      "path": "10"
    },
    "2575": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6869,
        6879
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 22
    },
    "2576": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6863
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2577": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6864,
        6865
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2578": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2579": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2580": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2581": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "LT",
      "path": "10"
    },
    "2582": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA1B"
    },
    "2585": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2586": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "INVALID",
      "path": "10"
    },
    "2587": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2588": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2590": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "MUL",
      "path": "10"
    },
    "2591": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2593": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "ADD",
      "path": "10"
    },
    "2594": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6866
      ],
      "op": "ADD",
      "path": "10"
    },
    "2595": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2596": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2597": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2598": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2599": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2600": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2601": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2602": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2603": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2604": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "POP",
      "path": "10"
    },
    "2605": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6849,
        6879
      ],
      "op": "POP",
      "path": "10"
    },
    "2606": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6915,
        6927
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 23
    },
    "2607": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6909
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2608": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6910,
        6911
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2609": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2610": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2611": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2612": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "LT",
      "path": "10"
    },
    "2613": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA3A"
    },
    "2616": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2617": {
      "dev": "Index out of range",
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "INVALID",
      "path": "10"
    },
    "2618": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2619": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6927
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2620": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6927
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2621": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6927
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2622": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2624": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2625": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2626": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "MUL",
      "path": "10"
    },
    "2627": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2628": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2629": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2630": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "ADD",
      "path": "10"
    },
    "2631": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2632": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2633": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6912
      ],
      "op": "ADD",
      "path": "10"
    },
    "2634": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6893,
        6927
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2635": {
      "op": "POP"
    },
    "2636": {
      "op": "POP"
    },
    "2637": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6570,
        6573
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x1"
    },
    "2639": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6570,
        6573
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2640": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6570,
        6573
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2641": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6570,
        6573
      ],
      "op": "ADD",
      "path": "10"
    },
    "2642": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6570,
        6573
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x94D"
    },
    "2647": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2648": {
      "op": "POP"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2651": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2652": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        6529,
        6938
      ],
      "op": "POP",
      "path": "10"
    },
    "2653": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2654": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2655": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2656": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2657": {
      "fn": "YRegistry.getVaultsInfo",
      "offset": [
        5938,
        6944
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2658": {
      "fn": "YRegistry.getVaultsInfo",
      "jump": "o",
      "offset": [
        5938,
        6944
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2659": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2660": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5621,
        5639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2662": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5653,
        5666
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2663": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5680,
        5696
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2665": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5710,
        5724
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2666": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5738,
        5754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2668": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5835,
        5855
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 25,
      "value": "0xA74"
    },
    "2671": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5848,
        5854
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2672": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5835,
        5847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBA0"
    },
    "2675": {
      "fn": "YRegistry.getVaultInfo",
      "jump": "i",
      "offset": [
        5835,
        5855
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2676": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5835,
        5855
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2677": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2678": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP11",
      "path": "10"
    },
    "2679": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2680": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2683": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "2684": {
      "op": "POP"
    },
    "2685": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2688": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5779,
        5855
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2689": {
      "op": "POP"
    },
    "2690": {
      "fn": "YRegistry.getVaultInfo",
      "offset": [
        5523,
        5932
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "fn": "YRegistry.getVaultInfo",
      "jump": "o",
      "offset": [
        5523,
        5932
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2694": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2695": {
      "fn": "YRegistry.getVault",
      "offset": [
        5073,
        5086
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2697": {
      "fn": "YRegistry.getVault",
      "offset": [
        5105,
        5122
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 26,
      "value": "0xA99"
    },
    "2700": {
      "fn": "YRegistry.getVault",
      "offset": [
        5105,
        5111
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2702": {
      "fn": "YRegistry.getVault",
      "offset": [
        5116,
        5121
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2703": {
      "fn": "YRegistry.getVault",
      "offset": [
        5105,
        5122
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2708": {
      "fn": "YRegistry.getVault",
      "offset": [
        5105,
        5115
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F7"
    },
    "2711": {
      "fn": "YRegistry.getVault",
      "offset": [
        5105,
        5122
      ],
      "op": "AND",
      "path": "10"
    },
    "2712": {
      "fn": "YRegistry.getVault",
      "jump": "i",
      "offset": [
        5105,
        5122
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2713": {
      "fn": "YRegistry.getVault",
      "offset": [
        5105,
        5122
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2714": {
      "fn": "YRegistry.getVault",
      "offset": [
        5098,
        5122
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2715": {
      "fn": "YRegistry.getVault",
      "offset": [
        5017,
        5129
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2716": {
      "op": "POP"
    },
    "2717": {
      "op": "POP"
    },
    "2718": {
      "fn": "YRegistry.getVault",
      "jump": "o",
      "offset": [
        5017,
        5129
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2719": {
      "offset": [
        594,
        626
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2720": {
      "fn": "YRegistry.getVault",
      "offset": [
        594,
        626
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2722": {
      "fn": "YRegistry.getVault",
      "offset": [
        594,
        626
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2729": {
      "op": "SHL"
    },
    "2730": {
      "op": "SUB"
    },
    "2731": {
      "offset": [
        594,
        626
      ],
      "op": "AND",
      "path": "10"
    },
    "2732": {
      "fn": "YRegistry.getVault",
      "offset": [
        594,
        626
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2733": {
      "fn": "YRegistry.getVault",
      "jump": "o",
      "offset": [
        594,
        626
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2734": {
      "fn": "YRegistry.setVault",
      "offset": [
        2178,
        2485
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2735": {
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2258
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 27,
      "value": "0xAC0"
    },
    "2738": {
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2245
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2256
      ],
      "op": "AND",
      "path": "10"
    },
    "2748": {
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2256
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B5"
    },
    "2751": {
      "fn": "YRegistry.setVault",
      "jump": "i",
      "offset": [
        2239,
        2258
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2752": {
      "branch": 54,
      "fn": "YRegistry.setVault",
      "offset": [
        2239,
        2258
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2753": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB11"
    },
    "2756": {
      "branch": 54,
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2757": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2759": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2760": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2769": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2770": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2772": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2774": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2775": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "ADD",
      "path": "10"
    },
    "2776": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2777": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x17"
    },
    "2779": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2781": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2782": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "ADD",
      "path": "10"
    },
    "2783": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2784": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5661756C74206973206E6F74206120636F6E7472616374000000000000000000"
    },
    "2817": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2819": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2820": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "ADD",
      "path": "10"
    },
    "2821": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2822": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2823": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2824": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2825": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2826": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2827": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SUB",
      "path": "10"
    },
    "2828": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2830": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "ADD",
      "path": "10"
    },
    "2831": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2832": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2833": {
      "fn": "YRegistry.setVault",
      "offset": [
        2231,
        2286
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2834": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2379
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 28,
      "value": "0xB22"
    },
    "2837": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2839": {
      "fn": "YRegistry.setVault",
      "offset": [
        2372,
        2378
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2840": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2379
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2845": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2371
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12F1"
    },
    "2848": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2379
      ],
      "op": "AND",
      "path": "10"
    },
    "2849": {
      "fn": "YRegistry.setVault",
      "jump": "i",
      "offset": [
        2356,
        2379
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2850": {
      "fn": "YRegistry.setVault",
      "offset": [
        2356,
        2379
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2851": {
      "branch": 55,
      "fn": "YRegistry.setVault",
      "offset": [
        2355,
        2379
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2852": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6B"
    },
    "2855": {
      "branch": 55,
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2856": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2858": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2859": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2866": {
      "op": "SHL"
    },
    "2867": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2868": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2869": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2871": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2873": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2874": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "ADD",
      "path": "10"
    },
    "2875": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2876": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x14"
    },
    "2878": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2880": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2881": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "ADD",
      "path": "10"
    },
    "2882": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2883": {
      "op": "PUSH20",
      "value": "0x5661756C7420616C726561647920657869737473"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2906": {
      "op": "SHL"
    },
    "2907": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2909": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2910": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "ADD",
      "path": "10"
    },
    "2911": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2912": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2913": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2914": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2915": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2916": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2917": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SUB",
      "path": "10"
    },
    "2918": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2920": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "ADD",
      "path": "10"
    },
    "2921": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2922": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2923": {
      "fn": "YRegistry.setVault",
      "offset": [
        2347,
        2404
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2924": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2478
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 29,
      "value": "0x5D8"
    },
    "2927": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2466
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2929": {
      "fn": "YRegistry.setVault",
      "offset": [
        2471,
        2477
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2930": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2478
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2935": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x130F"
    },
    "2938": {
      "fn": "YRegistry.setVault",
      "offset": [
        2460,
        2478
      ],
      "op": "AND",
      "path": "10"
    },
    "2939": {
      "fn": "YRegistry.setVault",
      "jump": "i",
      "offset": [
        2460,
        2478
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2940": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2703,
        2869
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2947": {
      "op": "SHL"
    },
    "2948": {
      "op": "SUB"
    },
    "2949": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "AND",
      "path": "10",
      "statement": 30
    },
    "2950": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2952": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2953": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2954": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2955": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2847
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2957": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2959": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2960": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2962": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2963": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2855
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2964": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2965": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2968": {
      "op": "NOT"
    },
    "2969": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "AND",
      "path": "10"
    },
    "2970": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2858,
        2862
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2972": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "OR",
      "path": "10"
    },
    "2973": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2974": {
      "fn": "YRegistry.setDelegatedVault",
      "offset": [
        2831,
        2862
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2975": {
      "fn": "YRegistry.setDelegatedVault",
      "jump": "o",
      "offset": [
        2703,
        2869
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2976": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3091,
        4989
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "op": "SUB"
    },
    "2985": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 31
    },
    "2986": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2987": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "AND",
      "path": "10"
    },
    "2988": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2990": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2991": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2992": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2993": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "2995": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2997": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2998": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3000": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3001": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3002": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3003": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3004": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3005": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3006": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3007": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3008": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3009": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3412
      ],
      "op": "AND",
      "path": "10"
    },
    "3010": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3426
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3011": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3426
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3012": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3426
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3013": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3391,
        3426
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3014": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3015": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3189,
        3207
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3016": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3363,
        3369
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3017": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3363,
        3369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3018": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3436,
        3505
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBEA"
    },
    "3021": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3436,
        3505
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3022": {
      "op": "POP"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3029": {
      "op": "SHL"
    },
    "3030": {
      "op": "SUB"
    },
    "3031": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 32
    },
    "3032": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3033": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "AND",
      "path": "10"
    },
    "3034": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3036": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3037": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3038": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3039": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3486
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3041": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3043": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3044": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3046": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3047": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3048": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3049": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3473,
        3494
      ],
      "op": "AND",
      "path": "10"
    },
    "3050": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3436,
        3505
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "op": "SUB"
    },
    "3059": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 33
    },
    "3060": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "AND",
      "path": "10"
    },
    "3061": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3063": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3064": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3065": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3066": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3068": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3070": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3071": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3072": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3073": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3075": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3076": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3077": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3078": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3079": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3080": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 34
    },
    "3081": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3082": {
      "op": "PUSH4",
      "value": "0xF77C4791"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3091": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3092": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3093": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3094": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "3096": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3097": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3098": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "AND",
      "path": "10"
    },
    "3099": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "3100": {
      "op": "POP"
    },
    "3101": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3637
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF77C4791"
    },
    "3106": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3637
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3107": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3109": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3110": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3111": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "ADD",
      "path": "10"
    },
    "3112": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3113": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3114": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3115": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3116": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3117": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "SUB",
      "path": "10"
    },
    "3118": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "ADD",
      "path": "10"
    },
    "3119": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3120": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3528,
        3551
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3121": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3122": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3123": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3124": {
      "op": "DUP1"
    },
    "3125": {
      "op": "ISZERO"
    },
    "3126": {
      "op": "PUSH2",
      "value": "0xC3E"
    },
    "3129": {
      "op": "JUMPI"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3132": {
      "op": "DUP1"
    },
    "3133": {
      "op": "REVERT"
    },
    "3134": {
      "op": "JUMPDEST"
    },
    "3135": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "POP",
      "path": "10"
    },
    "3136": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "GAS",
      "path": "10"
    },
    "3137": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3138": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3139": {
      "op": "DUP1"
    },
    "3140": {
      "op": "ISZERO"
    },
    "3141": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "3144": {
      "op": "JUMPI"
    },
    "3145": {
      "op": "RETURNDATASIZE"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3148": {
      "op": "DUP1"
    },
    "3149": {
      "op": "RETURNDATACOPY"
    },
    "3150": {
      "op": "RETURNDATASIZE"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3153": {
      "op": "REVERT"
    },
    "3154": {
      "op": "JUMPDEST"
    },
    "3155": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "POP",
      "path": "10"
    },
    "3156": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "POP",
      "path": "10"
    },
    "3157": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "POP",
      "path": "10"
    },
    "3158": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "POP",
      "path": "10"
    },
    "3159": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3161": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3162": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3165": {
      "op": "DUP2"
    },
    "3166": {
      "op": "LT"
    },
    "3167": {
      "op": "ISZERO"
    },
    "3168": {
      "op": "PUSH2",
      "value": "0xC68"
    },
    "3171": {
      "op": "JUMPI"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3174": {
      "op": "DUP1"
    },
    "3175": {
      "op": "REVERT"
    },
    "3176": {
      "op": "JUMPDEST"
    },
    "3177": {
      "op": "POP"
    },
    "3178": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3179": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3613,
        3639
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "3180": {
      "op": "POP"
    },
    "3181": {
      "branch": 56,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3653,
        3662
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3182": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3653,
        3706
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3183": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3653,
        3706
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3184": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3653,
        3706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCF0"
    },
    "3187": {
      "branch": 56,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3653,
        3706
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3188": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3653,
        3706
      ],
      "op": "POP",
      "path": "10"
    },
    "3189": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3704,
        3705
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3197": {
      "op": "SHL"
    },
    "3198": {
      "op": "SUB"
    },
    "3199": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3706
      ],
      "op": "AND",
      "path": "10"
    },
    "3200": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3673,
        3678
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3207": {
      "op": "SHL"
    },
    "3208": {
      "op": "SUB"
    },
    "3209": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3690
      ],
      "op": "AND",
      "path": "10"
    },
    "3210": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3690
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6F307DC3"
    },
    "3215": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3217": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3218": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3219": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3224": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "AND",
      "path": "10"
    },
    "3225": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3227": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "SHL",
      "path": "10"
    },
    "3228": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3229": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3230": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3232": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "ADD",
      "path": "10"
    },
    "3233": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3235": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3237": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3238": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3239": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3240": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "SUB",
      "path": "10"
    },
    "3241": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3242": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3243": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3244": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3245": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3246": {
      "op": "DUP1"
    },
    "3247": {
      "op": "ISZERO"
    },
    "3248": {
      "op": "PUSH2",
      "value": "0xCB8"
    },
    "3251": {
      "op": "JUMPI"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3254": {
      "op": "DUP1"
    },
    "3255": {
      "op": "REVERT"
    },
    "3256": {
      "op": "JUMPDEST"
    },
    "3257": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "POP",
      "path": "10"
    },
    "3258": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "GAS",
      "path": "10"
    },
    "3259": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3260": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3261": {
      "op": "DUP1"
    },
    "3262": {
      "op": "ISZERO"
    },
    "3263": {
      "op": "PUSH2",
      "value": "0xCCC"
    },
    "3266": {
      "op": "JUMPI"
    },
    "3267": {
      "op": "RETURNDATASIZE"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3270": {
      "op": "DUP1"
    },
    "3271": {
      "op": "RETURNDATACOPY"
    },
    "3272": {
      "op": "RETURNDATASIZE"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3275": {
      "op": "REVERT"
    },
    "3276": {
      "op": "JUMPDEST"
    },
    "3277": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "POP",
      "path": "10"
    },
    "3278": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "POP",
      "path": "10"
    },
    "3279": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "POP",
      "path": "10"
    },
    "3280": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "POP",
      "path": "10"
    },
    "3281": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3283": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3284": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3287": {
      "op": "DUP2"
    },
    "3288": {
      "op": "LT"
    },
    "3289": {
      "op": "ISZERO"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xCE2"
    },
    "3293": {
      "op": "JUMPI"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3296": {
      "op": "DUP1"
    },
    "3297": {
      "op": "REVERT"
    },
    "3298": {
      "op": "JUMPDEST"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3692
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3307": {
      "op": "SHL"
    },
    "3308": {
      "op": "SUB"
    },
    "3309": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3706
      ],
      "op": "AND",
      "path": "10"
    },
    "3310": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3706
      ],
      "op": "EQ",
      "path": "10"
    },
    "3311": {
      "branch": 57,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3666,
        3706
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3312": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3653,
        3706
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3313": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3649,
        3848
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3314": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3649,
        3848
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD61"
    },
    "3317": {
      "branch": 57,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3649,
        3848
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3318": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP7",
      "path": "10",
      "statement": 35
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3325": {
      "op": "SHL"
    },
    "3326": {
      "op": "SUB"
    },
    "3327": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3750
      ],
      "op": "AND",
      "path": "10"
    },
    "3328": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3750
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFC0C546A"
    },
    "3333": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3335": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3336": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3337": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3342": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "AND",
      "path": "10"
    },
    "3343": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3345": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "SHL",
      "path": "10"
    },
    "3346": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3347": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3348": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3350": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "ADD",
      "path": "10"
    },
    "3351": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3353": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3355": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3356": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3357": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3358": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "SUB",
      "path": "10"
    },
    "3359": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3360": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3361": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3362": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3363": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3364": {
      "op": "DUP1"
    },
    "3365": {
      "op": "ISZERO"
    },
    "3366": {
      "op": "PUSH2",
      "value": "0xD2E"
    },
    "3369": {
      "op": "JUMPI"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3372": {
      "op": "DUP1"
    },
    "3373": {
      "op": "REVERT"
    },
    "3374": {
      "op": "JUMPDEST"
    },
    "3375": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "POP",
      "path": "10"
    },
    "3376": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "GAS",
      "path": "10"
    },
    "3377": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3378": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3379": {
      "op": "DUP1"
    },
    "3380": {
      "op": "ISZERO"
    },
    "3381": {
      "op": "PUSH2",
      "value": "0xD42"
    },
    "3384": {
      "op": "JUMPI"
    },
    "3385": {
      "op": "RETURNDATASIZE"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3388": {
      "op": "DUP1"
    },
    "3389": {
      "op": "RETURNDATACOPY"
    },
    "3390": {
      "op": "RETURNDATASIZE"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3393": {
      "op": "REVERT"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "POP",
      "path": "10"
    },
    "3396": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "POP",
      "path": "10"
    },
    "3397": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "POP",
      "path": "10"
    },
    "3398": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "POP",
      "path": "10"
    },
    "3399": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3401": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3402": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3405": {
      "op": "DUP2"
    },
    "3406": {
      "op": "LT"
    },
    "3407": {
      "op": "ISZERO"
    },
    "3408": {
      "op": "PUSH2",
      "value": "0xD58"
    },
    "3411": {
      "op": "JUMPI"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3414": {
      "op": "DUP1"
    },
    "3415": {
      "op": "REVERT"
    },
    "3416": {
      "op": "JUMPDEST"
    },
    "3417": {
      "op": "POP"
    },
    "3418": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3419": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3730,
        3752
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3649,
        3848
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC9"
    },
    "3424": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3649,
        3848
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3425": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3649,
        3848
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3426": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3823,
        3828
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 36
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3433": {
      "op": "SHL"
    },
    "3434": {
      "op": "SUB"
    },
    "3435": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3835
      ],
      "op": "AND",
      "path": "10"
    },
    "3436": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3835
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFC0C546A"
    },
    "3441": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3443": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3444": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3445": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3450": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "AND",
      "path": "10"
    },
    "3451": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3453": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "SHL",
      "path": "10"
    },
    "3454": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3455": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3456": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3458": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "ADD",
      "path": "10"
    },
    "3459": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3461": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3463": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3464": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3465": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3466": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "SUB",
      "path": "10"
    },
    "3467": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3468": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3469": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3470": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3471": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3472": {
      "op": "DUP1"
    },
    "3473": {
      "op": "ISZERO"
    },
    "3474": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "3477": {
      "op": "JUMPI"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3480": {
      "op": "DUP1"
    },
    "3481": {
      "op": "REVERT"
    },
    "3482": {
      "op": "JUMPDEST"
    },
    "3483": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "POP",
      "path": "10"
    },
    "3484": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "GAS",
      "path": "10"
    },
    "3485": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3486": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3487": {
      "op": "DUP1"
    },
    "3488": {
      "op": "ISZERO"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0xDAE"
    },
    "3492": {
      "op": "JUMPI"
    },
    "3493": {
      "op": "RETURNDATASIZE"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3496": {
      "op": "DUP1"
    },
    "3497": {
      "op": "RETURNDATACOPY"
    },
    "3498": {
      "op": "RETURNDATASIZE"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3501": {
      "op": "REVERT"
    },
    "3502": {
      "op": "JUMPDEST"
    },
    "3503": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "POP",
      "path": "10"
    },
    "3504": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "POP",
      "path": "10"
    },
    "3505": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "POP",
      "path": "10"
    },
    "3506": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "POP",
      "path": "10"
    },
    "3507": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3509": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3510": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3513": {
      "op": "DUP2"
    },
    "3514": {
      "op": "LT"
    },
    "3515": {
      "op": "ISZERO"
    },
    "3516": {
      "op": "PUSH2",
      "value": "0xDC4"
    },
    "3519": {
      "op": "JUMPI"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3522": {
      "op": "DUP1"
    },
    "3523": {
      "op": "REVERT"
    },
    "3524": {
      "op": "JUMPDEST"
    },
    "3525": {
      "op": "POP"
    },
    "3526": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3527": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3816,
        3837
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3528": {
      "op": "POP"
    },
    "3529": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3649,
        3848
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3530": {
      "branch": 58,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3862,
        3873
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3531": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3858,
        4035
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3532": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3858,
        4035
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE58"
    },
    "3535": {
      "branch": 58,
      "fn": "YRegistry.getVaultData",
      "offset": [
        3858,
        4035
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3536": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3912,
        3922
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 37
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3543": {
      "op": "SHL"
    },
    "3544": {
      "op": "SUB"
    },
    "3545": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3934
      ],
      "op": "AND",
      "path": "10"
    },
    "3546": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3934
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x39EBF823"
    },
    "3551": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3935,
        3940
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3552": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3554": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3555": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3556": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3561": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "AND",
      "path": "10"
    },
    "3562": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3564": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "SHL",
      "path": "10"
    },
    "3565": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3566": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3567": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3569": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "ADD",
      "path": "10"
    },
    "3570": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3571": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "op": "SUB"
    },
    "3580": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "AND",
      "path": "10"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "op": "SUB"
    },
    "3589": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "AND",
      "path": "10"
    },
    "3590": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3591": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3592": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3594": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "ADD",
      "path": "10"
    },
    "3595": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3596": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "POP",
      "path": "10"
    },
    "3597": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "POP",
      "path": "10"
    },
    "3598": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3600": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3602": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3603": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3604": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3605": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "SUB",
      "path": "10"
    },
    "3606": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3607": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3608": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3609": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3610": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3611": {
      "op": "DUP1"
    },
    "3612": {
      "op": "ISZERO"
    },
    "3613": {
      "op": "PUSH2",
      "value": "0xE25"
    },
    "3616": {
      "op": "JUMPI"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3619": {
      "op": "DUP1"
    },
    "3620": {
      "op": "REVERT"
    },
    "3621": {
      "op": "JUMPDEST"
    },
    "3622": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "POP",
      "path": "10"
    },
    "3623": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "GAS",
      "path": "10"
    },
    "3624": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3625": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3626": {
      "op": "DUP1"
    },
    "3627": {
      "op": "ISZERO"
    },
    "3628": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3631": {
      "op": "JUMPI"
    },
    "3632": {
      "op": "RETURNDATASIZE"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3635": {
      "op": "DUP1"
    },
    "3636": {
      "op": "RETURNDATACOPY"
    },
    "3637": {
      "op": "RETURNDATASIZE"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3640": {
      "op": "REVERT"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "POP",
      "path": "10"
    },
    "3643": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "POP",
      "path": "10"
    },
    "3644": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "POP",
      "path": "10"
    },
    "3645": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "POP",
      "path": "10"
    },
    "3646": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3648": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3649": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3652": {
      "op": "DUP2"
    },
    "3653": {
      "op": "LT"
    },
    "3654": {
      "op": "ISZERO"
    },
    "3655": {
      "op": "PUSH2",
      "value": "0xE4F"
    },
    "3658": {
      "op": "JUMPI"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3661": {
      "op": "DUP1"
    },
    "3662": {
      "op": "REVERT"
    },
    "3663": {
      "op": "JUMPDEST"
    },
    "3664": {
      "op": "POP"
    },
    "3665": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3666": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3900,
        3941
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3667": {
      "op": "POP"
    },
    "3668": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3858,
        4035
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEDD"
    },
    "3671": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3858,
        4035
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3672": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3858,
        4035
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3673": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3995,
        4005
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 38
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3680": {
      "op": "SHL"
    },
    "3681": {
      "op": "SUB"
    },
    "3682": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4017
      ],
      "op": "AND",
      "path": "10"
    },
    "3683": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4017
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x39EBF823"
    },
    "3688": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4018,
        4023
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3689": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3691": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3692": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3693": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3698": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "AND",
      "path": "10"
    },
    "3699": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3701": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "SHL",
      "path": "10"
    },
    "3702": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3703": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3704": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3706": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "ADD",
      "path": "10"
    },
    "3707": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3708": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3715": {
      "op": "SHL"
    },
    "3716": {
      "op": "SUB"
    },
    "3717": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "AND",
      "path": "10"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3724": {
      "op": "SHL"
    },
    "3725": {
      "op": "SUB"
    },
    "3726": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "AND",
      "path": "10"
    },
    "3727": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3728": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3729": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3731": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "ADD",
      "path": "10"
    },
    "3732": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3733": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "POP",
      "path": "10"
    },
    "3734": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "POP",
      "path": "10"
    },
    "3735": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3737": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3739": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3740": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3741": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3742": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "SUB",
      "path": "10"
    },
    "3743": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3744": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3745": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3746": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3747": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3748": {
      "op": "DUP1"
    },
    "3749": {
      "op": "ISZERO"
    },
    "3750": {
      "op": "PUSH2",
      "value": "0xEAE"
    },
    "3753": {
      "op": "JUMPI"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3756": {
      "op": "DUP1"
    },
    "3757": {
      "op": "REVERT"
    },
    "3758": {
      "op": "JUMPDEST"
    },
    "3759": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "POP",
      "path": "10"
    },
    "3760": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "GAS",
      "path": "10"
    },
    "3761": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3762": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3763": {
      "op": "DUP1"
    },
    "3764": {
      "op": "ISZERO"
    },
    "3765": {
      "op": "PUSH2",
      "value": "0xEC2"
    },
    "3768": {
      "op": "JUMPI"
    },
    "3769": {
      "op": "RETURNDATASIZE"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3772": {
      "op": "DUP1"
    },
    "3773": {
      "op": "RETURNDATACOPY"
    },
    "3774": {
      "op": "RETURNDATASIZE"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3777": {
      "op": "REVERT"
    },
    "3778": {
      "op": "JUMPDEST"
    },
    "3779": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "POP",
      "path": "10"
    },
    "3780": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "POP",
      "path": "10"
    },
    "3781": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "POP",
      "path": "10"
    },
    "3782": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "POP",
      "path": "10"
    },
    "3783": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3785": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3786": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3789": {
      "op": "DUP2"
    },
    "3790": {
      "op": "LT"
    },
    "3791": {
      "op": "ISZERO"
    },
    "3792": {
      "op": "PUSH2",
      "value": "0xED8"
    },
    "3795": {
      "op": "JUMPI"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3798": {
      "op": "DUP1"
    },
    "3799": {
      "op": "REVERT"
    },
    "3800": {
      "op": "JUMPDEST"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3803": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3983,
        4024
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3858,
        4035
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3806": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4102,
        4125
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3808": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4148,
        4334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3809": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4148,
        4334
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3810": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4148,
        4334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF6E"
    },
    "3813": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4148,
        4334
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3814": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4209,
        4219
      ],
      "op": "DUP7",
      "path": "10",
      "statement": 39
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "op": "SUB"
    },
    "3823": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4227
      ],
      "op": "AND",
      "path": "10"
    },
    "3824": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4227
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA622EE7C"
    },
    "3829": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4228,
        4236
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3830": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3832": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3833": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3834": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3839": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "AND",
      "path": "10"
    },
    "3840": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3842": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "SHL",
      "path": "10"
    },
    "3843": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3844": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3845": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3847": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "ADD",
      "path": "10"
    },
    "3848": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3849": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3856": {
      "op": "SHL"
    },
    "3857": {
      "op": "SUB"
    },
    "3858": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "AND",
      "path": "10"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3865": {
      "op": "SHL"
    },
    "3866": {
      "op": "SUB"
    },
    "3867": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "AND",
      "path": "10"
    },
    "3868": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3869": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3870": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3872": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "ADD",
      "path": "10"
    },
    "3873": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3874": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "POP",
      "path": "10"
    },
    "3875": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "POP",
      "path": "10"
    },
    "3876": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3878": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3880": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3881": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3882": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3883": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "SUB",
      "path": "10"
    },
    "3884": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3885": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3886": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3887": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "3888": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3889": {
      "op": "DUP1"
    },
    "3890": {
      "op": "ISZERO"
    },
    "3891": {
      "op": "PUSH2",
      "value": "0xF3B"
    },
    "3894": {
      "op": "JUMPI"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3897": {
      "op": "DUP1"
    },
    "3898": {
      "op": "REVERT"
    },
    "3899": {
      "op": "JUMPDEST"
    },
    "3900": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "POP",
      "path": "10"
    },
    "3901": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "GAS",
      "path": "10"
    },
    "3902": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3903": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3904": {
      "op": "DUP1"
    },
    "3905": {
      "op": "ISZERO"
    },
    "3906": {
      "op": "PUSH2",
      "value": "0xF4F"
    },
    "3909": {
      "op": "JUMPI"
    },
    "3910": {
      "op": "RETURNDATASIZE"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3913": {
      "op": "DUP1"
    },
    "3914": {
      "op": "RETURNDATACOPY"
    },
    "3915": {
      "op": "RETURNDATASIZE"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3918": {
      "op": "REVERT"
    },
    "3919": {
      "op": "JUMPDEST"
    },
    "3920": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "POP",
      "path": "10"
    },
    "3921": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "POP",
      "path": "10"
    },
    "3922": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "POP",
      "path": "10"
    },
    "3923": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "POP",
      "path": "10"
    },
    "3924": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3926": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3927": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "LT"
    },
    "3932": {
      "op": "ISZERO"
    },
    "3933": {
      "op": "PUSH2",
      "value": "0xF65"
    },
    "3936": {
      "op": "JUMPI"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3939": {
      "op": "DUP1"
    },
    "3940": {
      "op": "REVERT"
    },
    "3941": {
      "op": "JUMPDEST"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3944": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4197,
        4237
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3945": {
      "op": "POP"
    },
    "3946": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4148,
        4334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFF3"
    },
    "3949": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4148,
        4334
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3950": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4148,
        4334
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3951": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4298,
        4308
      ],
      "op": "DUP7",
      "path": "10",
      "statement": 40
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3958": {
      "op": "SHL"
    },
    "3959": {
      "op": "SUB"
    },
    "3960": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4316
      ],
      "op": "AND",
      "path": "10"
    },
    "3961": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4316
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA622EE7C"
    },
    "3966": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4317,
        4322
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3967": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3969": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3970": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3971": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "3976": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "AND",
      "path": "10"
    },
    "3977": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "3979": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "SHL",
      "path": "10"
    },
    "3980": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3981": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3982": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3984": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "ADD",
      "path": "10"
    },
    "3985": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3986": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3993": {
      "op": "SHL"
    },
    "3994": {
      "op": "SUB"
    },
    "3995": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "AND",
      "path": "10"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4002": {
      "op": "SHL"
    },
    "4003": {
      "op": "SUB"
    },
    "4004": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "AND",
      "path": "10"
    },
    "4005": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4006": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4007": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4009": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "ADD",
      "path": "10"
    },
    "4010": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4011": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "POP",
      "path": "10"
    },
    "4012": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "POP",
      "path": "10"
    },
    "4013": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4015": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4017": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4018": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4019": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4020": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "SUB",
      "path": "10"
    },
    "4021": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4022": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4023": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4024": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "4025": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "ISZERO"
    },
    "4028": {
      "op": "PUSH2",
      "value": "0xFC4"
    },
    "4031": {
      "op": "JUMPI"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4034": {
      "op": "DUP1"
    },
    "4035": {
      "op": "REVERT"
    },
    "4036": {
      "op": "JUMPDEST"
    },
    "4037": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "POP",
      "path": "10"
    },
    "4038": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "GAS",
      "path": "10"
    },
    "4039": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "4040": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4041": {
      "op": "DUP1"
    },
    "4042": {
      "op": "ISZERO"
    },
    "4043": {
      "op": "PUSH2",
      "value": "0xFD8"
    },
    "4046": {
      "op": "JUMPI"
    },
    "4047": {
      "op": "RETURNDATASIZE"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "DUP1"
    },
    "4051": {
      "op": "RETURNDATACOPY"
    },
    "4052": {
      "op": "RETURNDATASIZE"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4055": {
      "op": "REVERT"
    },
    "4056": {
      "op": "JUMPDEST"
    },
    "4057": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "POP",
      "path": "10"
    },
    "4058": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "POP",
      "path": "10"
    },
    "4059": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "POP",
      "path": "10"
    },
    "4060": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "POP",
      "path": "10"
    },
    "4061": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4063": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4064": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4067": {
      "op": "DUP2"
    },
    "4068": {
      "op": "LT"
    },
    "4069": {
      "op": "ISZERO"
    },
    "4070": {
      "op": "PUSH2",
      "value": "0xFEE"
    },
    "4073": {
      "op": "JUMPI"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4076": {
      "op": "DUP1"
    },
    "4077": {
      "op": "REVERT"
    },
    "4078": {
      "op": "JUMPDEST"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4081": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4286,
        4323
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4082": {
      "op": "POP"
    },
    "4083": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4148,
        4334
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4084": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4370,
        4375
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 41
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4091": {
      "op": "SHL"
    },
    "4092": {
      "op": "SUB"
    },
    "4093": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4351,
        4375
      ],
      "op": "AND",
      "path": "10"
    },
    "4094": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4351,
        4366
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4101": {
      "op": "SHL"
    },
    "4102": {
      "op": "SUB"
    },
    "4103": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4351,
        4375
      ],
      "op": "AND",
      "path": "10"
    },
    "4104": {
      "branch": 59,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4351,
        4375
      ],
      "op": "EQ",
      "path": "10"
    },
    "4105": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1043"
    },
    "4108": {
      "branch": 59,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4109": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4111": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4118": {
      "op": "SHL"
    },
    "4119": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4120": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4121": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4123": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "ADD",
      "path": "10"
    },
    "4124": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4125": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4126": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4128": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "ADD",
      "path": "10"
    },
    "4129": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4130": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4131": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "SUB",
      "path": "10"
    },
    "4132": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4133": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4134": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "4136": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4137": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4138": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4140": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "ADD",
      "path": "10"
    },
    "4141": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4142": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13EC"
    },
    "4145": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x27"
    },
    "4147": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4148": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "4149": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4151": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "ADD",
      "path": "10"
    },
    "4152": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4153": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "POP",
      "path": "10"
    },
    "4154": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "POP",
      "path": "10"
    },
    "4155": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4157": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4158": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4159": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4160": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "SUB",
      "path": "10"
    },
    "4161": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4162": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4163": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4343,
        4419
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4164": {
      "branch": 60,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4523,
        4532
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4165": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4519,
        4912
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4166": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4519,
        4912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1102"
    },
    "4169": {
      "branch": 60,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4519,
        4912
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4170": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4548,
        4566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4172": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4576,
        4581
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4179": {
      "op": "SHL"
    },
    "4180": {
      "op": "SUB"
    },
    "4181": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4593
      ],
      "op": "AND",
      "path": "10"
    },
    "4182": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4593
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6F307DC3"
    },
    "4187": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4189": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4190": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4191": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4196": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "AND",
      "path": "10"
    },
    "4197": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "4199": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "SHL",
      "path": "10"
    },
    "4200": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4201": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4202": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4204": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "ADD",
      "path": "10"
    },
    "4205": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4207": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4209": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4210": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4211": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4212": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "SUB",
      "path": "10"
    },
    "4213": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4214": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4215": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4216": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "4217": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4218": {
      "op": "DUP1"
    },
    "4219": {
      "op": "ISZERO"
    },
    "4220": {
      "op": "PUSH2",
      "value": "0x1084"
    },
    "4223": {
      "op": "JUMPI"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4226": {
      "op": "DUP1"
    },
    "4227": {
      "op": "REVERT"
    },
    "4228": {
      "op": "JUMPDEST"
    },
    "4229": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "POP",
      "path": "10"
    },
    "4230": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "GAS",
      "path": "10"
    },
    "4231": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "4232": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4233": {
      "op": "DUP1"
    },
    "4234": {
      "op": "ISZERO"
    },
    "4235": {
      "op": "PUSH2",
      "value": "0x1098"
    },
    "4238": {
      "op": "JUMPI"
    },
    "4239": {
      "op": "RETURNDATASIZE"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4242": {
      "op": "DUP1"
    },
    "4243": {
      "op": "RETURNDATACOPY"
    },
    "4244": {
      "op": "RETURNDATASIZE"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4247": {
      "op": "REVERT"
    },
    "4248": {
      "op": "JUMPDEST"
    },
    "4249": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "POP",
      "path": "10"
    },
    "4250": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "POP",
      "path": "10"
    },
    "4251": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "POP",
      "path": "10"
    },
    "4252": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "POP",
      "path": "10"
    },
    "4253": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4255": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4256": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4259": {
      "op": "DUP2"
    },
    "4260": {
      "op": "LT"
    },
    "4261": {
      "op": "ISZERO"
    },
    "4262": {
      "op": "PUSH2",
      "value": "0x10AE"
    },
    "4265": {
      "op": "JUMPI"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4268": {
      "op": "DUP1"
    },
    "4269": {
      "op": "REVERT"
    },
    "4270": {
      "op": "JUMPDEST"
    },
    "4271": {
      "op": "POP"
    },
    "4272": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4273": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4569,
        4595
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4281": {
      "op": "SHL"
    },
    "4282": {
      "op": "SUB"
    },
    "4283": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4617,
        4636
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 42
    },
    "4284": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4617,
        4636
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4285": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4617,
        4636
      ],
      "op": "AND",
      "path": "10"
    },
    "4286": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4617,
        4636
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4287": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4617,
        4636
      ],
      "op": "DUP9",
      "path": "10"
    },
    "4288": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4617,
        4636
      ],
      "op": "AND",
      "path": "10"
    },
    "4289": {
      "branch": 61,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4617,
        4636
      ],
      "op": "EQ",
      "path": "10"
    },
    "4290": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10FC"
    },
    "4293": {
      "branch": 61,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4294": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4296": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4297": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4303": {
      "op": "SHL"
    },
    "4304": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4305": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4306": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4308": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "ADD",
      "path": "10"
    },
    "4309": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4310": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4311": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4313": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "ADD",
      "path": "10"
    },
    "4314": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4315": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4316": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "SUB",
      "path": "10"
    },
    "4317": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4318": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4319": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x29"
    },
    "4321": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4322": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4323": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4325": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "ADD",
      "path": "10"
    },
    "4326": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4327": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1395"
    },
    "4330": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x29"
    },
    "4332": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4333": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "4334": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4336": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "ADD",
      "path": "10"
    },
    "4337": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4338": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "POP",
      "path": "10"
    },
    "4339": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "POP",
      "path": "10"
    },
    "4340": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4342": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4343": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4344": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4345": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "SUB",
      "path": "10"
    },
    "4346": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4347": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4348": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4609,
        4682
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4349": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4519,
        4912
      ],
      "op": "POP",
      "path": "10"
    },
    "4350": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4519,
        4912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11BC"
    },
    "4353": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4519,
        4912
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4354": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4519,
        4912
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4355": {
      "branch": 62,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4721,
        4732
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4356": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4716,
        4912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11BC"
    },
    "4359": {
      "branch": 62,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4716,
        4912
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4360": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4748,
        4769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4362": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4782,
        4790
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4369": {
      "op": "SHL"
    },
    "4370": {
      "op": "SUB"
    },
    "4371": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4796
      ],
      "op": "AND",
      "path": "10"
    },
    "4372": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4796
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1F1FCD51"
    },
    "4377": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4379": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4380": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4381": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4386": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "AND",
      "path": "10"
    },
    "4387": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "4389": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "SHL",
      "path": "10"
    },
    "4390": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4391": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4392": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4394": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "ADD",
      "path": "10"
    },
    "4395": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4397": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4399": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4400": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4401": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4402": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "SUB",
      "path": "10"
    },
    "4403": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4404": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4405": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4406": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "4407": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4408": {
      "op": "DUP1"
    },
    "4409": {
      "op": "ISZERO"
    },
    "4410": {
      "op": "PUSH2",
      "value": "0x1142"
    },
    "4413": {
      "op": "JUMPI"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4416": {
      "op": "DUP1"
    },
    "4417": {
      "op": "REVERT"
    },
    "4418": {
      "op": "JUMPDEST"
    },
    "4419": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "POP",
      "path": "10"
    },
    "4420": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "GAS",
      "path": "10"
    },
    "4421": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "4422": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4423": {
      "op": "DUP1"
    },
    "4424": {
      "op": "ISZERO"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0x1156"
    },
    "4428": {
      "op": "JUMPI"
    },
    "4429": {
      "op": "RETURNDATASIZE"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4432": {
      "op": "DUP1"
    },
    "4433": {
      "op": "RETURNDATACOPY"
    },
    "4434": {
      "op": "RETURNDATASIZE"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4437": {
      "op": "REVERT"
    },
    "4438": {
      "op": "JUMPDEST"
    },
    "4439": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "POP",
      "path": "10"
    },
    "4440": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "POP",
      "path": "10"
    },
    "4441": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "POP",
      "path": "10"
    },
    "4442": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "POP",
      "path": "10"
    },
    "4443": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4445": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4446": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4449": {
      "op": "DUP2"
    },
    "4450": {
      "op": "LT"
    },
    "4451": {
      "op": "ISZERO"
    },
    "4452": {
      "op": "PUSH2",
      "value": "0x116C"
    },
    "4455": {
      "op": "JUMPI"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4458": {
      "op": "DUP1"
    },
    "4459": {
      "op": "REVERT"
    },
    "4460": {
      "op": "JUMPDEST"
    },
    "4461": {
      "op": "POP"
    },
    "4462": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4463": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4772,
        4798
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4464": {
      "op": "POP"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4471": {
      "op": "SHL"
    },
    "4472": {
      "op": "SUB"
    },
    "4473": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4820,
        4842
      ],
      "op": "DUP8",
      "path": "10",
      "statement": 43
    },
    "4474": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4820,
        4842
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4475": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4820,
        4842
      ],
      "op": "AND",
      "path": "10"
    },
    "4476": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4820,
        4842
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4477": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4820,
        4842
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4478": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4820,
        4842
      ],
      "op": "AND",
      "path": "10"
    },
    "4479": {
      "branch": 63,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4820,
        4842
      ],
      "op": "EQ",
      "path": "10"
    },
    "4480": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11BA"
    },
    "4483": {
      "branch": 63,
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4484": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4486": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4487": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4493": {
      "op": "SHL"
    },
    "4494": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4495": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4496": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4498": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "ADD",
      "path": "10"
    },
    "4499": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4500": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4501": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4503": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "ADD",
      "path": "10"
    },
    "4504": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4505": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4506": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "SUB",
      "path": "10"
    },
    "4507": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4508": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4509": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x25"
    },
    "4511": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4512": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4513": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4515": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "ADD",
      "path": "10"
    },
    "4516": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4517": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1370"
    },
    "4520": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x25"
    },
    "4522": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4523": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "CODECOPY",
      "path": "10"
    },
    "4524": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4526": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "ADD",
      "path": "10"
    },
    "4527": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4528": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "POP",
      "path": "10"
    },
    "4529": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "POP",
      "path": "10"
    },
    "4530": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4532": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4533": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4534": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4535": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "SUB",
      "path": "10"
    },
    "4536": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4537": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4538": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4812,
        4884
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4539": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4716,
        4912
      ],
      "op": "POP",
      "path": "10"
    },
    "4540": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        4716,
        4912
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "op": "POP"
    },
    "4543": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3091,
        4989
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4544": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3091,
        4989
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4545": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3091,
        4989
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "4546": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3091,
        4989
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4547": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3091,
        4989
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4548": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3091,
        4989
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4549": {
      "fn": "YRegistry.getVaultData",
      "offset": [
        3091,
        4989
      ],
      "op": "POP",
      "path": "10"
    },
    "4550": {
      "fn": "YRegistry.getVaultData",
      "jump": "o",
      "offset": [
        3091,
        4989
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4551": {
      "fn": "YRegistry.setController",
      "offset": [
        2875,
        3085
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4552": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3024
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11D8"
    },
    "4555": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3002
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4557": {
      "fn": "YRegistry.setController",
      "offset": [
        3012,
        3023
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4558": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3024
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4563": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3011
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12F1"
    },
    "4566": {
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3024
      ],
      "op": "AND",
      "path": "10"
    },
    "4567": {
      "fn": "YRegistry.setController",
      "jump": "i",
      "offset": [
        2991,
        3024
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4568": {
      "branch": 64,
      "fn": "YRegistry.setController",
      "offset": [
        2991,
        3024
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4569": {
      "fn": "YRegistry.setController",
      "offset": [
        2986,
        3079
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11ED"
    },
    "4572": {
      "branch": 64,
      "fn": "YRegistry.setController",
      "offset": [
        2986,
        3079
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4573": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3068
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 44,
      "value": "0x5D8"
    },
    "4576": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4578": {
      "fn": "YRegistry.setController",
      "offset": [
        3056,
        3067
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4579": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3068
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4584": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3055
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x130F"
    },
    "4587": {
      "fn": "YRegistry.setController",
      "offset": [
        3040,
        3068
      ],
      "op": "AND",
      "path": "10"
    },
    "4588": {
      "fn": "YRegistry.setController",
      "jump": "i",
      "offset": [
        3040,
        3068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4589": {
      "fn": "YRegistry.setController",
      "offset": [
        2986,
        3079
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4590": {
      "fn": "YRegistry.setController",
      "offset": [
        2875,
        3085
      ],
      "op": "POP",
      "path": "10"
    },
    "4591": {
      "fn": "YRegistry.setController",
      "jump": "o",
      "offset": [
        2875,
        3085
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4592": {
      "fn": "EnumerableSet.length",
      "offset": [
        3332,
        3473
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4593": {
      "fn": "EnumerableSet.length",
      "offset": [
        3449,
        3459
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 45,
      "value": "0x1"
    },
    "4595": {
      "fn": "EnumerableSet.length",
      "offset": [
        3449,
        3459
      ],
      "op": "ADD",
      "path": "8"
    },
    "4596": {
      "fn": "EnumerableSet.length",
      "offset": [
        3449,
        3466
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4597": {
      "fn": "EnumerableSet.length",
      "offset": [
        3449,
        3466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4598": {
      "fn": "EnumerableSet.length",
      "jump": "o",
      "offset": [
        3332,
        3473
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4599": {
      "fn": "EnumerableSet.get",
      "offset": [
        3795,
        3948
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4600": {
      "fn": "EnumerableSet.get",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4602": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3927
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 46
    },
    "4603": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3934
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4605": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3934
      ],
      "op": "ADD",
      "path": "8"
    },
    "4606": {
      "fn": "EnumerableSet.get",
      "offset": [
        3935,
        3940
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4607": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4608": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4609": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4610": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "LT",
      "path": "8"
    },
    "4611": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1208"
    },
    "4614": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4615": {
      "dev": "Index out of range",
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "INVALID",
      "path": "8"
    },
    "4616": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4617": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4619": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4620": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4621": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4622": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4624": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4625": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4626": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4627": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "ADD",
      "path": "8"
    },
    "4628": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4635": {
      "op": "SHL"
    },
    "4636": {
      "op": "SUB"
    },
    "4637": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "AND",
      "path": "8"
    },
    "4638": {
      "fn": "EnumerableSet.get",
      "offset": [
        3924,
        3941
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4639": {
      "fn": "EnumerableSet.get",
      "offset": [
        3795,
        3948
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4640": {
      "op": "POP"
    },
    "4641": {
      "op": "POP"
    },
    "4642": {
      "op": "POP"
    },
    "4643": {
      "fn": "EnumerableSet.get",
      "jump": "o",
      "offset": [
        3795,
        3948
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4644": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2491,
        2697
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4645": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2608
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 47,
      "value": "0x1236"
    },
    "4648": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2595
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4655": {
      "op": "SHL"
    },
    "4656": {
      "op": "SUB"
    },
    "4657": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2606
      ],
      "op": "AND",
      "path": "10"
    },
    "4658": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2606
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B5"
    },
    "4661": {
      "fn": "YRegistry.setWrappedVault",
      "jump": "i",
      "offset": [
        2582,
        2608
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4662": {
      "branch": 65,
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2582,
        2608
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4663": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1287"
    },
    "4666": {
      "branch": 65,
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4667": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4669": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4670": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4671": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4677": {
      "op": "SHL"
    },
    "4678": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4679": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4680": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4682": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4684": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4685": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "ADD",
      "path": "10"
    },
    "4686": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4687": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1E"
    },
    "4689": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "4691": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4692": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "ADD",
      "path": "10"
    },
    "4693": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4694": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x577261707065645661756C74206973206E6F74206120636F6E74726163740000"
    },
    "4727": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "4729": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4730": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "ADD",
      "path": "10"
    },
    "4731": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4732": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4733": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4734": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4735": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4736": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4737": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SUB",
      "path": "10"
    },
    "4738": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "4740": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "ADD",
      "path": "10"
    },
    "4741": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4742": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4743": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2574,
        2643
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "op": "SUB"
    },
    "4752": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 48
    },
    "4753": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4754": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "AND",
      "path": "10"
    },
    "4755": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4757": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4758": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4759": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4760": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2666
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4762": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4764": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4765": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4767": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4768": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2674
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4769": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4770": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4777": {
      "op": "SHL"
    },
    "4778": {
      "op": "SUB"
    },
    "4779": {
      "op": "NOT"
    },
    "4780": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "AND",
      "path": "10"
    },
    "4781": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4782": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4783": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4784": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "AND",
      "path": "10"
    },
    "4785": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "OR",
      "path": "10"
    },
    "4786": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4787": {
      "fn": "YRegistry.setWrappedVault",
      "offset": [
        2653,
        2690
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4788": {
      "fn": "YRegistry.setWrappedVault",
      "jump": "o",
      "offset": [
        2491,
        2697
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4789": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4790": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4792": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4793": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "4794": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "4827": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 49
    },
    "4828": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4829": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "4830": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4831": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4832": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4833": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12E9"
    },
    "4836": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4837": {
      "op": "POP"
    },
    "4838": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4839": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4840": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4841": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4842": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "4843": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4844": {
      "op": "POP"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "POP"
    },
    "4848": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4849": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2425,
        2584
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4856": {
      "op": "SHL"
    },
    "4857": {
      "op": "SUB"
    },
    "4858": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "AND",
      "path": "8",
      "statement": 50
    },
    "4859": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2529,
        2533
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4861": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4862": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4863": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4864": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4866": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4867": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4868": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4869": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4870": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4872": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4873": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4874": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2572
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4875": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2577
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4876": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2577
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4877": {
      "fn": "EnumerableSet.contains",
      "offset": [
        2556,
        2577
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4878": {
      "fn": "EnumerableSet.contains",
      "jump": "o",
      "offset": [
        2425,
        2584
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4879": {
      "fn": "EnumerableSet.add",
      "offset": [
        923,
        1195
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4880": {
      "fn": "EnumerableSet.add",
      "offset": [
        1009,
        1013
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4882": {
      "fn": "EnumerableSet.add",
      "offset": [
        1034,
        1054
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x131B"
    },
    "4885": {
      "fn": "EnumerableSet.add",
      "offset": [
        1043,
        1046
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4886": {
      "fn": "EnumerableSet.add",
      "offset": [
        1048,
        1053
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4887": {
      "fn": "EnumerableSet.add",
      "offset": [
        1034,
        1042
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12F1"
    },
    "4890": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        1034,
        1054
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4891": {
      "branch": 66,
      "fn": "EnumerableSet.add",
      "offset": [
        1034,
        1054
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4892": {
      "fn": "EnumerableSet.add",
      "offset": [
        1029,
        1189
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1367"
    },
    "4895": {
      "branch": 66,
      "fn": "EnumerableSet.add",
      "offset": [
        1029,
        1189
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4896": {
      "op": "POP"
    },
    "4897": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1098
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 51,
      "value": "0x1"
    },
    "4899": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1098
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4900": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1098
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4901": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1098
      ],
      "op": "ADD",
      "path": "8"
    },
    "4902": {
      "op": "DUP1"
    },
    "4903": {
      "op": "SLOAD"
    },
    "4904": {
      "op": "DUP1"
    },
    "4905": {
      "op": "DUP4"
    },
    "4906": {
      "op": "ADD"
    },
    "4907": {
      "op": "DUP1"
    },
    "4908": {
      "op": "DUP4"
    },
    "4909": {
      "op": "SSTORE"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4912": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4913": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4914": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4915": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4917": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4918": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4919": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4920": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4921": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4922": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "ADD",
      "path": "8"
    },
    "4923": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4924": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4931": {
      "op": "SHL"
    },
    "4932": {
      "op": "SUB"
    },
    "4933": {
      "op": "NOT"
    },
    "4934": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "AND",
      "path": "8"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4941": {
      "op": "SHL"
    },
    "4942": {
      "op": "SUB"
    },
    "4943": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP8",
      "path": "8"
    },
    "4944": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "AND",
      "path": "8"
    },
    "4945": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4946": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4947": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "OR",
      "path": "8"
    },
    "4948": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4949": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4950": {
      "fn": "EnumerableSet.add",
      "offset": [
        1088,
        1110
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4951": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4952": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4953": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4954": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4955": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4956": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4957": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4959": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4960": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4961": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1085
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4962": {
      "fn": "EnumerableSet.add",
      "offset": [
        1069,
        1110
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4963": {
      "fn": "EnumerableSet.add",
      "offset": [
        1124,
        1135
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 52,
      "value": "0xA99"
    },
    "4966": {
      "fn": "EnumerableSet.add",
      "offset": [
        1124,
        1135
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4967": {
      "fn": "EnumerableSet.add",
      "offset": [
        1029,
        1189
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4968": {
      "op": "POP"
    },
    "4969": {
      "fn": "EnumerableSet.add",
      "offset": [
        1173,
        1178
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 53,
      "value": "0x0"
    },
    "4971": {
      "fn": "EnumerableSet.add",
      "offset": [
        1166,
        1178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA99"
    },
    "4974": {
      "fn": "EnumerableSet.add",
      "offset": [
        1166,
        1178
      ],
      "op": "JUMP",
      "path": "8"
    }
  },
  "sha1": "c5ddb93fc93c8b48f1e0bd7bc74fdab645fbb592",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/utils/EnumerableSet.sol\";\n\nimport \"../../interfaces/yearn/IController.sol\";\nimport \"../../interfaces/yearn/IStrategy.sol\";\nimport \"../../interfaces/yearn/IVault.sol\";\nimport \"../../interfaces/yearn/IWrappedVault.sol\";\n\ncontract YRegistry {\n    using Address for address;\n    using SafeMath for uint256;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    address public governance;\n    address public pendingGovernance;\n\n    EnumerableSet.AddressSet private vaults;\n    EnumerableSet.AddressSet private controllers;\n\n    mapping(address => address) private wrappedVaults;\n\n    mapping(address => bool) public isDelegatedVault;\n\n    constructor(address _governance) public {\n        require(_governance != address(0), \"Missing Governance\");\n        governance = _governance;\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"YRegistry\";\n    }\n\n    function addVault(address _vault) public onlyGovernance {\n        setVault(_vault);\n\n        (address controller, , , , ) = getVaultData(_vault);\n\n        setController(controller);\n    }\n\n    function addWrappedVault(address _vault) public onlyGovernance {\n        setVault(_vault);\n        address wrappedVault = IWrappedVault(_vault).vault();\n        setWrappedVault(_vault, wrappedVault);\n\n        (address controller, , , , ) = getVaultData(_vault);\n\n        // Adds to controllers array\n        setController(controller);\n        // TODO Add and track tokens and strategies? [historical]\n        // (current ones can be obtained via getVaults + getVaultInfo)\n    }\n\n    function addDelegatedVault(address _vault) public onlyGovernance {\n        setVault(_vault);\n        setDelegatedVault(_vault);\n\n        (address controller, , , , ) = getVaultData(_vault);\n\n        // Adds to controllers array\n        setController(controller);\n        // TODO Add and track tokens and strategies? [historical]\n        // (current ones can be obtained via getVaults + getVaultInfo)\n    }\n\n    function setVault(address _vault) internal {\n        require(_vault.isContract(), \"Vault is not a contract\");\n        // Checks if vault is already on the array\n        require(!vaults.contains(_vault), \"Vault already exists\");\n        // Adds unique _vault to vaults array\n        vaults.add(_vault);\n    }\n\n    function setWrappedVault(address _vault, address _wrappedVault) internal {\n        require(_wrappedVault.isContract(), \"WrappedVault is not a contract\");\n        wrappedVaults[_vault] = _wrappedVault;\n    }\n\n    function setDelegatedVault(address _vault) internal {\n        // TODO Is there any way to check if a vault is delegated\n        isDelegatedVault[_vault] = true;\n    }\n\n    function setController(address _controller) internal {\n        // Adds Controller to controllers array\n        if (!controllers.contains(_controller)) {\n            controllers.add(_controller);\n        }\n    }\n\n    function getVaultData(address _vault)\n        internal\n        view\n        returns (\n            address controller,\n            address token,\n            address strategy,\n            bool isWrapped,\n            bool isDelegated\n        )\n    {\n        address vault = _vault;\n        isWrapped = wrappedVaults[_vault] != address(0);\n        if (isWrapped) {\n            vault = wrappedVaults[_vault];\n        }\n        isDelegated = isDelegatedVault[vault];\n\n        // Get values from controller\n        controller = IVault(vault).controller();\n        if (isWrapped && IVault(vault).underlying() != address(0)) {\n            token = IVault(_vault).token(); // Use non-wrapped vault\n        } else {\n            token = IVault(vault).token();\n        }\n\n        if (isDelegated) {\n            strategy = IController(controller).strategies(vault);\n        } else {\n            strategy = IController(controller).strategies(token);\n        }\n\n        // Check if vault is set on controller for token\n        address controllerVault = address(0);\n        if (isDelegated) {\n            controllerVault = IController(controller).vaults(strategy);\n        } else {\n            controllerVault = IController(controller).vaults(token);\n        }\n        require(controllerVault == vault, \"Controller vault address does not match\"); // Might happen on Proxy Vaults\n\n        // Check if strategy has the same token as vault\n        if (isWrapped) {\n            address underlying = IVault(vault).underlying();\n            require(underlying == token, \"WrappedVault token address does not match\"); // Might happen?\n        } else if (!isDelegated) {\n            address strategyToken = IStrategy(strategy).want();\n            require(token == strategyToken, \"Strategy token address does not match\"); // Might happen?\n        }\n\n        return (controller, token, strategy, isWrapped, isDelegated);\n    }\n\n    // Vaults getters\n    function getVault(uint256 index) external view returns (address vault) {\n        return vaults.get(index);\n    }\n\n    function getVaultsLength() external view returns (uint256) {\n        return vaults.length();\n    }\n\n    function getVaults() external view returns (address[] memory) {\n        address[] memory vaultsArray = new address[](vaults.length());\n        for (uint256 i = 0; i < vaults.length(); i++) {\n            vaultsArray[i] = vaults.get(i);\n        }\n        return vaultsArray;\n    }\n\n    function getVaultInfo(address _vault)\n        external\n        view\n        returns (\n            address controller,\n            address token,\n            address strategy,\n            bool isWrapped,\n            bool isDelegated\n        )\n    {\n        (controller, token, strategy, isWrapped, isDelegated) = getVaultData(_vault);\n        return (controller, token, strategy, isWrapped, isDelegated);\n    }\n\n    function getVaultsInfo()\n        external\n        view\n        returns (\n            address[] memory controllerArray,\n            address[] memory tokenArray,\n            address[] memory strategyArray,\n            bool[] memory isWrappedArray,\n            bool[] memory isDelegatedArray\n        )\n    {\n        controllerArray = new address[](vaults.length());\n        tokenArray = new address[](vaults.length());\n        strategyArray = new address[](vaults.length());\n        isWrappedArray = new bool[](vaults.length());\n        isDelegatedArray = new bool[](vaults.length());\n\n        for (uint256 i = 0; i < vaults.length(); i++) {\n            (address _controller, address _token, address _strategy, bool _isWrapped, bool _isDelegated) = getVaultData(vaults.get(i));\n            controllerArray[i] = _controller;\n            tokenArray[i] = _token;\n            strategyArray[i] = _strategy;\n            isWrappedArray[i] = _isWrapped;\n            isDelegatedArray[i] = _isDelegated;\n        }\n    }\n\n    // Governance setters\n    function setPendingGovernance(address _pendingGovernance) external onlyGovernance {\n        pendingGovernance = _pendingGovernance;\n    }\n\n    function acceptGovernance() external onlyPendingGovernance {\n        governance = msg.sender;\n    }\n\n    modifier onlyGovernance {\n        require(msg.sender == governance, \"Only governance can call this function.\");\n        _;\n    }\n    modifier onlyPendingGovernance {\n        require(msg.sender == pendingGovernance, \"Only pendingGovernance can call this function.\");\n        _;\n    }\n}\n",
  "sourceMap": "420:7088:10:-;;;840:147;8:9:-1;5:2;;;30:1;27;20:12;5:2;840:147:10;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;840:147:10;-1:-1:-1;;;;;898:25:10;;890:56;;;;;-1:-1:-1;;;890:56:10;;;;;;;;;;;;-1:-1:-1;;;890:56:10;;;;;;;;;;;;;;;956:10;:24;;-1:-1:-1;;;;;956:24:10;;;-1:-1:-1;;;;;;956:24:10;;;;;;;;;420:7088;;;;;;",
  "sourcePath": "contracts/registries/YRegistry.sol",
  "type": "contract"
}