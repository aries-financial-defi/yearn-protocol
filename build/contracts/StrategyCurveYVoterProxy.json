{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceOfWant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "crv",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "curve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keepCRV",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "keepCRVMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "performanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "performanceMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keepCRV",
          "type": "uint256"
        }
      ],
      "name": "setKeepCRV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_performanceFee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        }
      ],
      "name": "setStrategist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uni",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawalMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ydai",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
    "15": "contracts/strategies/StrategyCurveYVoterProxy.sol",
    "6": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
    "7": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/strategies/StrategyCurveYVoterProxy.sol",
    "exportedSymbols": {
      "StrategyCurveYVoterProxy": [
        5121
      ]
    },
    "id": 5122,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4310,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:15"
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/IERC20.sol",
        "id": 4311,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 15292,
        "src": "59:58:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/math/SafeMath.sol",
        "file": "@openzeppelinV2/contracts/math/SafeMath.sol",
        "id": 4312,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 15223,
        "src": "118:53:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/utils/Address.sol",
        "file": "@openzeppelinV2/contracts/utils/Address.sol",
        "id": 4313,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 15587,
        "src": "172:53:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waltor/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol",
        "id": 4314,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 15512,
        "src": "226:61:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/IController.sol",
        "file": "../../interfaces/yearn/IController.sol",
        "id": 4315,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 15932,
        "src": "289:48:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Gauge.sol",
        "file": "../../interfaces/curve/Gauge.sol",
        "id": 4316,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 16132,
        "src": "338:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Mintr.sol",
        "file": "../../interfaces/curve/Mintr.sol",
        "id": 4317,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 16140,
        "src": "381:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/uniswap/Uni.sol",
        "file": "../../interfaces/uniswap/Uni.sol",
        "id": 4318,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 16175,
        "src": "424:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/curve/Curve.sol",
        "file": "../../interfaces/curve/Curve.sol",
        "id": 4319,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 16112,
        "src": "467:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/Token.sol",
        "file": "../../interfaces/yearn/Token.sol",
        "id": 4320,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 16193,
        "src": "510:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/yearn/VoterProxy.sol",
        "file": "../../interfaces/yearn/VoterProxy.sol",
        "id": 4321,
        "nodeType": "ImportDirective",
        "scope": 5122,
        "sourceUnit": 16298,
        "src": "553:47:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5121,
        "linearizedBaseContracts": [
          5121
        ],
        "name": "StrategyCurveYVoterProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4324,
            "libraryName": {
              "contractScope": null,
              "id": 4322,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15511,
              "src": "648:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$15511",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "642:27:15",
            "typeName": {
              "contractScope": null,
              "id": 4323,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15291,
              "src": "662:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$15291",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 4327,
            "libraryName": {
              "contractScope": null,
              "id": 4325,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15586,
              "src": "680:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$15586",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "674:26:15",
            "typeName": {
              "id": 4326,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "692:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 4330,
            "libraryName": {
              "contractScope": null,
              "id": 4328,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15222,
              "src": "711:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$15222",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "705:27:15",
            "typeName": {
              "id": 4329,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "724:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 4335,
            "name": "want",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "738:82:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4331,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "738:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307864463565306538314466663646414633413765353242413639373832306335653332443830364138",
                  "id": 4333,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "777:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4332,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "769:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4334,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "769:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4340,
            "name": "crv",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "826:81:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4336,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "826:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 4338,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "864:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4337,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "856:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4339,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "856:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4345,
            "name": "uni",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "913:81:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4341,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "913:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                  "id": 4343,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "951:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4342,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "943:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4344,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "943:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4350,
            "name": "weth",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1000:82:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4346,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1000:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
                  "id": 4348,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1039:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4347,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1031:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4349,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1031:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4355,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1126:81:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4351,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1126:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                  "id": 4353,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1164:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4352,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1156:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4354,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1156:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4360,
            "name": "ydai",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1213:82:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4356,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1213:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831366465353930393264414535436346344131453634333944363131666430363533663042643031",
                  "id": 4358,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1252:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4357,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1244:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4359,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1244:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4365,
            "name": "curve",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1301:83:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4361,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1301:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307834354637383343434536423746463233423261623244373065343136636462374436303535663531",
                  "id": 4363,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1341:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4362,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1333:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4364,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1333:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4370,
            "name": "gauge",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1391:83:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4366,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1391:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846413731324545343738384330343265324237424235354536636238656335363943343533306331",
                  "id": 4368,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1431:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xFA712EE4788C042e2B7BB55E6cb8ec569C4530c1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4367,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1423:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4369,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1423:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4375,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1480:83:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4371,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1480:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307835383836453437356531363366373843463633643636383341624337666538353136643132303831",
                  "id": 4373,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1520:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x5886E475e163f78CF63d6683AbC7fe8516d12081"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4372,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1512:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4374,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1512:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4380,
            "name": "voter",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1569:83:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4376,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1569:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307846313437623831323564326566393346423639363544623937443637343639353261313333393334",
                  "id": 4378,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1609:42:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xF147b8125d2ef93FB6965Db97D6746952a133934"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 4377,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1601:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 4379,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1601:51:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4383,
            "name": "keepCRV",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1659:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4381,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1659:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 4382,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1684:4:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4386,
            "name": "keepCRVMax",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1694:42:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4384,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1694:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 4385,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1731:5:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4389,
            "name": "performanceFee",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1743:35:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4387,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1743:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353030",
              "id": 4388,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1775:3:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500_by_1",
                "typeString": "int_const 500"
              },
              "value": "500"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4392,
            "name": "performanceMax",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1784:46:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4390,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1784:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 4391,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1825:5:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4395,
            "name": "withdrawalFee",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1837:33:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4393,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1837:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 4394,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1868:2:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4398,
            "name": "withdrawalMax",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1876:45:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4396,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1876:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 4397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1916:5:15",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4400,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1928:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4399,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1928:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4402,
            "name": "controller",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1959:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4401,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1959:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4404,
            "name": "strategist",
            "nodeType": "VariableDeclaration",
            "scope": 5121,
            "src": "1990:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4403,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1990:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4423,
              "nodeType": "Block",
              "src": "2062:107:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4409,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4400,
                      "src": "2072:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4410,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17621,
                        "src": "2085:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2085:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2072:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4413,
                  "nodeType": "ExpressionStatement",
                  "src": "2072:23:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4414,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4404,
                      "src": "2105:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4415,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17621,
                        "src": "2118:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2118:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2105:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4418,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:23:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4419,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4402,
                      "src": "2138:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4420,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4406,
                      "src": "2151:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2138:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4422,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:24:15"
                }
              ]
            },
            "documentation": null,
            "id": 4424,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4406,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 4424,
                  "src": "2034:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2033:21:15"
            },
            "returnParameters": {
              "id": 4408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2062:0:15"
            },
            "scope": 5121,
            "src": "2022:147:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4431,
              "nodeType": "Block",
              "src": "2232:50:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "5374726174656779437572766559566f74657250726f7879",
                    "id": 4429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2249:26:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_dcecae95bcff9005c0c17ac9c28dcbcb21463abfb9d86ad1ab7b3e2dd350d185",
                      "typeString": "literal_string \"StrategyCurveYVoterProxy\""
                    },
                    "value": "StrategyCurveYVoterProxy"
                  },
                  "functionReturnParameters": 4428,
                  "id": 4430,
                  "nodeType": "Return",
                  "src": "2242:33:15"
                }
              ]
            },
            "documentation": null,
            "id": 4432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2191:2:15"
            },
            "returnParameters": {
              "id": 4428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4427,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4432,
                  "src": "2217:13:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4426,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2216:15:15"
            },
            "scope": 5121,
            "src": "2175:107:15",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4449,
              "nodeType": "Block",
              "src": "2341:99:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4438,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "2359:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2359:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4440,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "2373:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2359:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2385:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "2351:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4444,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:48:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4445,
                      "name": "strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4404,
                      "src": "2409:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4446,
                      "name": "_strategist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4434,
                      "src": "2422:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2409:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4448,
                  "nodeType": "ExpressionStatement",
                  "src": "2409:24:15"
                }
              ]
            },
            "documentation": null,
            "id": 4450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4434,
                  "name": "_strategist",
                  "nodeType": "VariableDeclaration",
                  "scope": 4450,
                  "src": "2311:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2310:21:15"
            },
            "returnParameters": {
              "id": 4436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2341:0:15"
            },
            "scope": 5121,
            "src": "2288:152:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4467,
              "nodeType": "Block",
              "src": "2493:93:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4456,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "2511:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2511:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4458,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "2525:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2511:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2537:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "2503:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4462,
                  "nodeType": "ExpressionStatement",
                  "src": "2503:48:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4463,
                      "name": "keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4383,
                      "src": "2561:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4464,
                      "name": "_keepCRV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4452,
                      "src": "2571:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2561:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4466,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:18:15"
                }
              ]
            },
            "documentation": null,
            "id": 4468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setKeepCRV",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4452,
                  "name": "_keepCRV",
                  "nodeType": "VariableDeclaration",
                  "scope": 4468,
                  "src": "2466:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2466:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2465:18:15"
            },
            "returnParameters": {
              "id": 4454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2493:0:15"
            },
            "scope": 5121,
            "src": "2446:140:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4485,
              "nodeType": "Block",
              "src": "2651:105:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4474,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "2669:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2669:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4476,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "2683:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2669:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2695:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "2661:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2661:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4480,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:48:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4481,
                      "name": "withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4395,
                      "src": "2719:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4482,
                      "name": "_withdrawalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4470,
                      "src": "2735:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2719:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4484,
                  "nodeType": "ExpressionStatement",
                  "src": "2719:30:15"
                }
              ]
            },
            "documentation": null,
            "id": 4486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWithdrawalFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4470,
                  "name": "_withdrawalFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4486,
                  "src": "2618:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2618:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2617:24:15"
            },
            "returnParameters": {
              "id": 4472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2651:0:15"
            },
            "scope": 5121,
            "src": "2592:164:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4503,
              "nodeType": "Block",
              "src": "2823:107:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4492,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "2841:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2841:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4494,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "2855:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2841:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 4496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 4491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "2833:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4498,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:48:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4499,
                      "name": "performanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4389,
                      "src": "2891:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4500,
                      "name": "_performanceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4488,
                      "src": "2908:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2891:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4502,
                  "nodeType": "ExpressionStatement",
                  "src": "2891:32:15"
                }
              ]
            },
            "documentation": null,
            "id": 4504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPerformanceFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4488,
                  "name": "_performanceFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4504,
                  "src": "2789:23:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2788:25:15"
            },
            "returnParameters": {
              "id": 4490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2823:0:15"
            },
            "scope": 5121,
            "src": "2762:168:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4539,
              "nodeType": "Block",
              "src": "2962:210:15",
              "statements": [
                {
                  "assignments": [
                    4508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4508,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 4539,
                      "src": "2972:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2972:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4517,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4514,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17699,
                            "src": "3019:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 4513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3011:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3011:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4510,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "2995:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4509,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "2988:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2988:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15236,
                      "src": "2988:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2988:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2972:53:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4518,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4508,
                      "src": "3039:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3047:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3039:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4538,
                  "nodeType": "IfStatement",
                  "src": "3035:131:15",
                  "trueBody": {
                    "id": 4537,
                    "nodeType": "Block",
                    "src": "3050:116:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4525,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4375,
                              "src": "3090:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4526,
                              "name": "_want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4508,
                              "src": "3097:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4522,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4335,
                                  "src": "3071:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4521,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "3064:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3064:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15324,
                            "src": "3064:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:39:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4528,
                        "nodeType": "ExpressionStatement",
                        "src": "3064:39:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4533,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4370,
                              "src": "3143:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4534,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4335,
                              "src": "3150:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4530,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4375,
                                  "src": "3128:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4529,
                                "name": "VoterProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16297,
                                "src": "3117:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_VoterProxy_$16297_$",
                                  "typeString": "type(contract VoterProxy)"
                                }
                              },
                              "id": 4531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3117:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VoterProxy_$16297",
                                "typeString": "contract VoterProxy"
                              }
                            },
                            "id": 4532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16291,
                            "src": "3117:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 4535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3117:38:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4536,
                        "nodeType": "ExpressionStatement",
                        "src": "3117:38:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 4540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2952:2:15"
            },
            "returnParameters": {
              "id": 4506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2962:0:15"
            },
            "scope": 5121,
            "src": "2936:236:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4607,
              "nodeType": "Block",
              "src": "3320:362:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4548,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "3338:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3338:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4550,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4402,
                          "src": "3352:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3338:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 4552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3364:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 4547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "3330:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3330:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4554,
                  "nodeType": "ExpressionStatement",
                  "src": "3330:48:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4556,
                          "name": "want",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4335,
                          "src": "3396:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4558,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4542,
                              "src": "3412:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 4557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3404:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3404:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3396:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77616e74",
                        "id": 4561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3421:6:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        },
                        "value": "want"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c7155ed36af613071923b6266b4e08ab22e1dee63ee866722ae1cd3ba12727",
                          "typeString": "literal_string \"want\""
                        }
                      ],
                      "id": 4555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "3388:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3388:40:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4563,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:40:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4565,
                          "name": "crv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4340,
                          "src": "3446:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4567,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4542,
                              "src": "3461:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 4566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3453:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3453:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3446:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "637276",
                        "id": 4570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3470:5:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        },
                        "value": "crv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf4672f78075baa915145c3dd1768b2acae76ee3e66285a6a117c4d143682dfe",
                          "typeString": "literal_string \"crv\""
                        }
                      ],
                      "id": 4564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "3438:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3438:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4572,
                  "nodeType": "ExpressionStatement",
                  "src": "3438:38:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4574,
                          "name": "ydai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4360,
                          "src": "3494:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4576,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4542,
                              "src": "3510:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 4575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3502:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3502:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3494:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "79646169",
                        "id": 4579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3519:6:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c228c597bc6f630e01be70de0da3fe13376e8103e99a86129bb579019dbde93f",
                          "typeString": "literal_string \"ydai\""
                        },
                        "value": "ydai"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c228c597bc6f630e01be70de0da3fe13376e8103e99a86129bb579019dbde93f",
                          "typeString": "literal_string \"ydai\""
                        }
                      ],
                      "id": 4573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "3486:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3486:40:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4581,
                  "nodeType": "ExpressionStatement",
                  "src": "3486:40:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4583,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4355,
                          "src": "3544:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4585,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4542,
                              "src": "3559:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 4584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3551:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3551:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3544:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646169",
                        "id": 4588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3568:5:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f08c71555a1be56230b2e2579fafe4777867e0a1b947f01073e934471de15c1",
                          "typeString": "literal_string \"dai\""
                        },
                        "value": "dai"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f08c71555a1be56230b2e2579fafe4777867e0a1b947f01073e934471de15c1",
                          "typeString": "literal_string \"dai\""
                        }
                      ],
                      "id": 4582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "3536:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3536:38:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4590,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:38:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4591,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4545,
                      "src": "3584:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4595,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17699,
                              "src": "3619:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                                "typeString": "contract StrategyCurveYVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                                "typeString": "contract StrategyCurveYVoterProxy"
                              }
                            ],
                            "id": 4594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3611:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3611:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4592,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4542,
                          "src": "3594:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$15291",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 4593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15236,
                        "src": "3594:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 4597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3594:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3584:41:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4599,
                  "nodeType": "ExpressionStatement",
                  "src": "3584:41:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4603,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4402,
                        "src": "3655:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4604,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4545,
                        "src": "3667:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4600,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4542,
                        "src": "3635:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15324,
                      "src": "3635:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:40:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4606,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:40:15"
                }
              ]
            },
            "documentation": null,
            "id": 4608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4542,
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 4608,
                  "src": "3270:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$15291",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4541,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15291,
                    "src": "3270:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$15291",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3269:15:15"
            },
            "returnParameters": {
              "id": 4546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4545,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 4608,
                  "src": "3303:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3302:17:15"
            },
            "scope": 5121,
            "src": "3252:430:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4706,
              "nodeType": "Block",
              "src": "3801:664:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4614,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "3819:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3819:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4616,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4402,
                          "src": "3833:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3819:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 4618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3845:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 4613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "3811:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3811:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4620,
                  "nodeType": "ExpressionStatement",
                  "src": "3811:48:15"
                },
                {
                  "assignments": [
                    4622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4622,
                      "name": "_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "3869:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4621,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3869:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4631,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4628,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17699,
                            "src": "3919:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 4627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3911:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3911:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4624,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "3895:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4623,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "3888:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3888:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15236,
                      "src": "3888:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3888:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3869:56:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4632,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4622,
                      "src": "3939:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4633,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4610,
                      "src": "3950:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3939:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4652,
                  "nodeType": "IfStatement",
                  "src": "3935:140:15",
                  "trueBody": {
                    "id": 4651,
                    "nodeType": "Block",
                    "src": "3959:116:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4635,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4610,
                            "src": "3973:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4639,
                                    "name": "_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4622,
                                    "src": "4009:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4637,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4610,
                                    "src": "3997:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15078,
                                  "src": "3997:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3997:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4636,
                              "name": "_withdrawSome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5043,
                              "src": "3983:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) returns (uint256)"
                              }
                            },
                            "id": 4641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3983:36:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3973:46:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4643,
                        "nodeType": "ExpressionStatement",
                        "src": "3973:46:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4644,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4610,
                            "src": "4033:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4647,
                                "name": "_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4622,
                                "src": "4055:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4645,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4610,
                                "src": "4043:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15062,
                              "src": "4043:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4043:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4033:31:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4650,
                        "nodeType": "ExpressionStatement",
                        "src": "4033:31:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4654,
                      "name": "_fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "4085:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4653,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4085:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4662,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4660,
                        "name": "withdrawalMax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4398,
                        "src": "4131:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4657,
                            "name": "withdrawalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4395,
                            "src": "4112:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4655,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4610,
                            "src": "4100:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15139,
                          "src": "4100:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15155,
                      "src": "4100:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4100:45:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4085:60:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4668,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4402,
                                "src": "4194:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4667,
                              "name": "IController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15931,
                              "src": "4182:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IController_$15931_$",
                                "typeString": "type(contract IController)"
                              }
                            },
                            "id": 4669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4182:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IController_$15931",
                              "typeString": "contract IController"
                            }
                          },
                          "id": 4670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15916,
                          "src": "4182:31:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 4671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4182:33:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4672,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4654,
                        "src": "4217:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4664,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "4163:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4663,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "4156:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4156:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15324,
                      "src": "4156:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4156:66:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4674,
                  "nodeType": "ExpressionStatement",
                  "src": "4156:66:15"
                },
                {
                  "assignments": [
                    4676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4676,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "4232:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4675,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4232:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4685,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4682,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "4288:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4280:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4280:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4678,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4402,
                            "src": "4261:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4677,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15931,
                          "src": "4249:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$15931_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 4679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4249:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$15931",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 4680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15923,
                      "src": "4249:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 4684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4249:45:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4232:62:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4687,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4676,
                          "src": "4312:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4330:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4322:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4322:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4312:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 4692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4334:8:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 4686,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "4304:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4304:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4694,
                  "nodeType": "ExpressionStatement",
                  "src": "4304:39:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4699,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4676,
                        "src": "4432:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4702,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4654,
                            "src": "4452:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4700,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4610,
                            "src": "4440:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15078,
                          "src": "4440:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4440:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4696,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "4413:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4695,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "4406:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4406:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15324,
                      "src": "4406:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4705,
                  "nodeType": "ExpressionStatement",
                  "src": "4406:52:15"
                }
              ]
            },
            "documentation": null,
            "id": 4707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4610,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4707,
                  "src": "3775:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3774:17:15"
            },
            "returnParameters": {
              "id": 4612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3801:0:15"
            },
            "scope": 5121,
            "src": "3757:708:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4762,
              "nodeType": "Block",
              "src": "4596:373:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4713,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "4614:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4614:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4715,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4402,
                          "src": "4628:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4614:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21636f6e74726f6c6c6572",
                        "id": 4717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4640:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        },
                        "value": "!controller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c17b6ae2491863f0fd26020e5d3d9f5265ffe6e6a381149356ab902482b506",
                          "typeString": "literal_string \"!controller\""
                        }
                      ],
                      "id": 4712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "4606:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4606:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4719,
                  "nodeType": "ExpressionStatement",
                  "src": "4606:48:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4720,
                      "name": "_withdrawAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4775,
                      "src": "4664:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4664:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4722,
                  "nodeType": "ExpressionStatement",
                  "src": "4664:14:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4723,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4710,
                      "src": "4689:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4729,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17699,
                              "src": "4730:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                                "typeString": "contract StrategyCurveYVoterProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                                "typeString": "contract StrategyCurveYVoterProxy"
                              }
                            ],
                            "id": 4728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4722:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4722:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4725,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4335,
                              "src": "4706:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4724,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15291,
                            "src": "4699:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 4726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4699:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$15291",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 4727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15236,
                        "src": "4699:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 4731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4699:37:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4689:47:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4733,
                  "nodeType": "ExpressionStatement",
                  "src": "4689:47:15"
                },
                {
                  "assignments": [
                    4735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4735,
                      "name": "_vault",
                      "nodeType": "VariableDeclaration",
                      "scope": 4762,
                      "src": "4747:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4734,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4747:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4744,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4741,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "4803:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4795:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4795:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4737,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4402,
                            "src": "4776:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4736,
                          "name": "IController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15931,
                          "src": "4764:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IController_$15931_$",
                            "typeString": "type(contract IController)"
                          }
                        },
                        "id": 4738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4764:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IController_$15931",
                          "typeString": "contract IController"
                        }
                      },
                      "id": 4739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15923,
                      "src": "4764:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 4743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:45:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4747:62:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4746,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4735,
                          "src": "4827:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4845:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4837:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4837:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4827:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "217661756c74",
                        "id": 4751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4849:8:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        },
                        "value": "!vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825",
                          "typeString": "literal_string \"!vault\""
                        }
                      ],
                      "id": 4745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "4819:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4819:39:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4753,
                  "nodeType": "ExpressionStatement",
                  "src": "4819:39:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4758,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4735,
                        "src": "4946:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4759,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "4954:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4755,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "4927:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4754,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "4920:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4920:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15324,
                      "src": "4920:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4920:42:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4761,
                  "nodeType": "ExpressionStatement",
                  "src": "4920:42:15"
                }
              ]
            },
            "documentation": null,
            "id": 4763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4558:2:15"
            },
            "returnParameters": {
              "id": 4711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4710,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 4763,
                  "src": "4579:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4579:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4578:17:15"
            },
            "scope": 5121,
            "src": "4538:431:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4774,
              "nodeType": "Block",
              "src": "5008:59:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4770,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4370,
                        "src": "5048:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4771,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4335,
                        "src": "5055:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4767,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4375,
                            "src": "5029:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4766,
                          "name": "VoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16297,
                          "src": "5018:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VoterProxy_$16297_$",
                            "typeString": "type(contract VoterProxy)"
                          }
                        },
                        "id": 4768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5018:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VoterProxy_$16297",
                          "typeString": "contract VoterProxy"
                        }
                      },
                      "id": 4769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16284,
                      "src": "5018:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) external returns (uint256)"
                      }
                    },
                    "id": 4772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5018:42:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4773,
                  "nodeType": "ExpressionStatement",
                  "src": "5018:42:15"
                }
              ]
            },
            "documentation": null,
            "id": 4775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4996:2:15"
            },
            "returnParameters": {
              "id": 4765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5008:0:15"
            },
            "scope": 5121,
            "src": "4975:92:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5025,
              "nodeType": "Block",
              "src": "5099:1490:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4779,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17621,
                              "src": "5117:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5117:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4781,
                            "name": "strategist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4404,
                            "src": "5131:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5117:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4783,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17621,
                              "src": "5145:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5145:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4785,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4400,
                            "src": "5159:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5145:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5117:52:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 4788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 4778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "5109:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5109:76:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4790,
                  "nodeType": "ExpressionStatement",
                  "src": "5109:76:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4795,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4370,
                        "src": "5221:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4792,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4375,
                            "src": "5206:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4791,
                          "name": "VoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16297,
                          "src": "5195:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VoterProxy_$16297_$",
                            "typeString": "type(contract VoterProxy)"
                          }
                        },
                        "id": 4793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5195:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VoterProxy_$16297",
                          "typeString": "contract VoterProxy"
                        }
                      },
                      "id": 4794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "harvest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16296,
                      "src": "5195:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5195:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4797,
                  "nodeType": "ExpressionStatement",
                  "src": "5195:32:15"
                },
                {
                  "assignments": [
                    4799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4799,
                      "name": "_crv",
                      "nodeType": "VariableDeclaration",
                      "scope": 5025,
                      "src": "5237:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4798,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5237:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4808,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4805,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17699,
                            "src": "5282:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 4804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5274:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5274:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4801,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4340,
                            "src": "5259:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4800,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "5252:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5252:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15236,
                      "src": "5252:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5252:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5237:51:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4809,
                      "name": "_crv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4799,
                      "src": "5302:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5309:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5302:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4900,
                  "nodeType": "IfStatement",
                  "src": "5298:518:15",
                  "trueBody": {
                    "id": 4899,
                    "nodeType": "Block",
                    "src": "5312:504:15",
                    "statements": [
                      {
                        "assignments": [
                          4813
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4813,
                            "name": "_keepCRV",
                            "nodeType": "VariableDeclaration",
                            "scope": 4899,
                            "src": "5326:16:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4812,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5326:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4821,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4819,
                              "name": "keepCRVMax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4386,
                              "src": "5367:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4816,
                                  "name": "keepCRV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4383,
                                  "src": "5354:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4814,
                                  "name": "_crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4799,
                                  "src": "5345:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15139,
                                "src": "5345:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5345:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15155,
                            "src": "5345:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5345:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5326:52:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4826,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4380,
                              "src": "5417:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4827,
                              "name": "_keepCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4813,
                              "src": "5424:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4823,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4340,
                                  "src": "5399:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4822,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "5392:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5392:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15324,
                            "src": "5392:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5392:41:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4829,
                        "nodeType": "ExpressionStatement",
                        "src": "5392:41:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4830,
                            "name": "_crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4799,
                            "src": "5447:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4833,
                                "name": "_keepCRV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4813,
                                "src": "5463:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4831,
                                "name": "_crv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4799,
                                "src": "5454:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15078,
                              "src": "5454:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5454:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5447:25:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4836,
                        "nodeType": "ExpressionStatement",
                        "src": "5447:25:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4841,
                              "name": "uni",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4345,
                              "src": "5511:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5516:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4838,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4340,
                                  "src": "5494:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4837,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "5487:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5487:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15390,
                            "src": "5487:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5487:31:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4844,
                        "nodeType": "ExpressionStatement",
                        "src": "5487:31:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4849,
                              "name": "uni",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4345,
                              "src": "5556:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4850,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4799,
                              "src": "5561:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4846,
                                  "name": "crv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4340,
                                  "src": "5539:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4845,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "5532:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5532:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15390,
                            "src": "5532:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5532:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4852,
                        "nodeType": "ExpressionStatement",
                        "src": "5532:34:15"
                      },
                      {
                        "assignments": [
                          4856
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4856,
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "scope": 4899,
                            "src": "5581:21:15",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 4854,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5581:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4855,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5581:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4862,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 4860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5619:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 4859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5605:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 4857,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5609:7:15",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4858,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5609:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 4861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5605:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5581:40:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4863,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4856,
                              "src": "5635:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 4865,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5640:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5635:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4866,
                            "name": "crv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4340,
                            "src": "5645:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5635:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4868,
                        "nodeType": "ExpressionStatement",
                        "src": "5635:13:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4869,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4856,
                              "src": "5662:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 4871,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 4870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5667:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5662:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4872,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4350,
                            "src": "5672:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5662:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4874,
                        "nodeType": "ExpressionStatement",
                        "src": "5662:14:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4875,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4856,
                              "src": "5690:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 4877,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 4876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5695:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5690:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4878,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4355,
                            "src": "5700:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5690:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4880,
                        "nodeType": "ExpressionStatement",
                        "src": "5690:13:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4885,
                              "name": "_crv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4799,
                              "src": "5752:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 4887,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5766:1:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5758:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 4888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5758:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4889,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4856,
                              "src": "5770:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4891,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17699,
                                  "src": "5784:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                                    "typeString": "contract StrategyCurveYVoterProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                                    "typeString": "contract StrategyCurveYVoterProxy"
                                  }
                                ],
                                "id": 4890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5776:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 4892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5776:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31383030",
                                  "id": 4895,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5799:4:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  },
                                  "value": "1800"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1800_by_1",
                                    "typeString": "int_const 1800"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4893,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17623,
                                  "src": "5791:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15062,
                                "src": "5791:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5791:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4882,
                                  "name": "uni",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4345,
                                  "src": "5722:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4881,
                                "name": "Uni",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16174,
                                "src": "5718:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Uni_$16174_$",
                                  "typeString": "type(contract Uni)"
                                }
                              },
                              "id": 4883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5718:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Uni_$16174",
                                "typeString": "contract Uni"
                              }
                            },
                            "id": 4884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16173,
                            "src": "5718:33:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 4897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5718:87:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4898,
                        "nodeType": "ExpressionStatement",
                        "src": "5718:87:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4902,
                      "name": "_dai",
                      "nodeType": "VariableDeclaration",
                      "scope": 5025,
                      "src": "5825:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4901,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5825:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4911,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4908,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17699,
                            "src": "5870:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 4907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5862:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5862:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4904,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4355,
                            "src": "5847:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4903,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "5840:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5840:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15236,
                      "src": "5840:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5840:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5825:51:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4912,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4902,
                      "src": "5890:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5897:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5890:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4939,
                  "nodeType": "IfStatement",
                  "src": "5886:160:15",
                  "trueBody": {
                    "id": 4938,
                    "nodeType": "Block",
                    "src": "5900:146:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4919,
                              "name": "ydai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4360,
                              "src": "5938:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5944:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4916,
                                  "name": "dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4355,
                                  "src": "5921:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4915,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "5914:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5914:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15390,
                            "src": "5914:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5914:32:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4922,
                        "nodeType": "ExpressionStatement",
                        "src": "5914:32:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4927,
                              "name": "ydai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4360,
                              "src": "5984:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4928,
                              "name": "_dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4902,
                              "src": "5990:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4924,
                                  "name": "dai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4355,
                                  "src": "5967:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4923,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "5960:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5960:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15390,
                            "src": "5960:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5960:35:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4930,
                        "nodeType": "ExpressionStatement",
                        "src": "5960:35:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4935,
                              "name": "_dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4902,
                              "src": "6030:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4932,
                                  "name": "ydai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4360,
                                  "src": "6016:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4931,
                                "name": "yERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16192,
                                "src": "6009:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_yERC20_$16192_$",
                                  "typeString": "type(contract yERC20)"
                                }
                              },
                              "id": 4933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6009:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_yERC20_$16192",
                                "typeString": "contract yERC20"
                              }
                            },
                            "id": 4934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16181,
                            "src": "6009:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 4936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6009:26:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4937,
                        "nodeType": "ExpressionStatement",
                        "src": "6009:26:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4941,
                      "name": "_ydai",
                      "nodeType": "VariableDeclaration",
                      "scope": 5025,
                      "src": "6055:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6055:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4950,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4947,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17699,
                            "src": "6102:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 4946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6094:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6094:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4943,
                            "name": "ydai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4360,
                            "src": "6078:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4942,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "6071:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6071:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15236,
                      "src": "6071:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6071:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6055:53:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4951,
                      "name": "_ydai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4941,
                      "src": "6122:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6130:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6122:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4983,
                  "nodeType": "IfStatement",
                  "src": "6118:190:15",
                  "trueBody": {
                    "id": 4982,
                    "nodeType": "Block",
                    "src": "6133:175:15",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4958,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4365,
                              "src": "6172:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6179:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4955,
                                  "name": "ydai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4360,
                                  "src": "6154:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4954,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "6147:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6147:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15390,
                            "src": "6147:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6147:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4961,
                        "nodeType": "ExpressionStatement",
                        "src": "6147:34:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4966,
                              "name": "curve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4365,
                              "src": "6220:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4967,
                              "name": "_ydai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4941,
                              "src": "6227:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4963,
                                  "name": "ydai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4360,
                                  "src": "6202:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4962,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "6195:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6195:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15390,
                            "src": "6195:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:38:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4969,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:38:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 4974,
                                  "name": "_ydai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4941,
                                  "src": "6278:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 4975,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6285:1:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 4976,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6288:1:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 4977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6291:1:15",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "id": 4978,
                              "isConstant": false,
                              "isInlineArray": true,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6277:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6295:1:15",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4971,
                                  "name": "curve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4365,
                                  "src": "6256:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4970,
                                "name": "ICurveFi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16101,
                                "src": "6247:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICurveFi_$16101_$",
                                  "typeString": "type(contract ICurveFi)"
                                }
                              },
                              "id": 4972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6247:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurveFi_$16101",
                                "typeString": "contract ICurveFi"
                              }
                            },
                            "id": 4973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add_liquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16071,
                            "src": "6247:29:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[4] memory,uint256) external"
                            }
                          },
                          "id": 4980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6247:50:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4981,
                        "nodeType": "ExpressionStatement",
                        "src": "6247:50:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4985,
                      "name": "_want",
                      "nodeType": "VariableDeclaration",
                      "scope": 5025,
                      "src": "6317:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6317:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4994,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4991,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17699,
                            "src": "6364:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 4990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6356:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6356:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4987,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "6340:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4986,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "6333:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6333:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15236,
                      "src": "6333:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6333:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6317:53:15"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4995,
                      "name": "_want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4985,
                      "src": "6384:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6392:1:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6384:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5024,
                  "nodeType": "IfStatement",
                  "src": "6380:203:15",
                  "trueBody": {
                    "id": 5023,
                    "nodeType": "Block",
                    "src": "6395:188:15",
                    "statements": [
                      {
                        "assignments": [
                          4999
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4999,
                            "name": "_fee",
                            "nodeType": "VariableDeclaration",
                            "scope": 5023,
                            "src": "6409:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4998,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6409:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5007,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5005,
                              "name": "performanceMax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4392,
                              "src": "6454:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5002,
                                  "name": "performanceFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4389,
                                  "src": "6434:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5000,
                                  "name": "_want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4985,
                                  "src": "6424:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 5001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15139,
                                "src": "6424:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 5003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6424:25:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15155,
                            "src": "6424:29:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6424:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6409:60:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 5013,
                                      "name": "controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4402,
                                      "src": "6521:10:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 5012,
                                    "name": "IController",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15931,
                                    "src": "6509:11:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IController_$15931_$",
                                      "typeString": "type(contract IController)"
                                    }
                                  },
                                  "id": 5014,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6509:23:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IController_$15931",
                                    "typeString": "contract IController"
                                  }
                                },
                                "id": 5015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15916,
                                "src": "6509:31:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 5016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6509:33:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5017,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4999,
                              "src": "6544:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5009,
                                  "name": "want",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4335,
                                  "src": "6490:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5008,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15291,
                                "src": "6483:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6483:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$15291",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15324,
                            "src": "6483:25:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15291_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$15291_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 5018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6483:66:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5019,
                        "nodeType": "ExpressionStatement",
                        "src": "6483:66:15"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5020,
                            "name": "deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4540,
                            "src": "6563:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 5021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6563:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5022,
                        "nodeType": "ExpressionStatement",
                        "src": "6563:9:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 5026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5089:2:15"
            },
            "returnParameters": {
              "id": 4777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5099:0:15"
            },
            "scope": 5121,
            "src": "5073:1516:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5042,
              "nodeType": "Block",
              "src": "6662:72:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5037,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4370,
                        "src": "6706:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5038,
                        "name": "want",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4335,
                        "src": "6713:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5039,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5028,
                        "src": "6719:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5034,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4375,
                            "src": "6690:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5033,
                          "name": "VoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16297,
                          "src": "6679:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VoterProxy_$16297_$",
                            "typeString": "type(contract VoterProxy)"
                          }
                        },
                        "id": 5035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6679:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VoterProxy_$16297",
                          "typeString": "contract VoterProxy"
                        }
                      },
                      "id": 5036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16268,
                      "src": "6679:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 5040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6679:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5032,
                  "id": 5041,
                  "nodeType": "Return",
                  "src": "6672:55:15"
                }
              ]
            },
            "documentation": null,
            "id": 5043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawSome",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5028,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5043,
                  "src": "6618:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6618:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6617:17:15"
            },
            "returnParameters": {
              "id": 5032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5031,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5043,
                  "src": "6653:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6653:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6652:9:15"
            },
            "scope": 5121,
            "src": "6595:139:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5057,
              "nodeType": "Block",
              "src": "6795:61:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5053,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17699,
                            "src": "6843:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StrategyCurveYVoterProxy_$5121",
                              "typeString": "contract StrategyCurveYVoterProxy"
                            }
                          ],
                          "id": 5052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6835:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6835:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5049,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4335,
                            "src": "6819:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5048,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15291,
                          "src": "6812:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$15291_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6812:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15291",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15236,
                      "src": "6812:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6812:37:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5047,
                  "id": 5056,
                  "nodeType": "Return",
                  "src": "6805:44:15"
                }
              ]
            },
            "documentation": null,
            "id": 5058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfWant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6762:2:15"
            },
            "returnParameters": {
              "id": 5047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5046,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5058,
                  "src": "6786:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6786:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6785:9:15"
            },
            "scope": 5121,
            "src": "6740:116:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5070,
              "nodeType": "Block",
              "src": "6917:58:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5067,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4370,
                        "src": "6962:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5064,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4375,
                            "src": "6945:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5063,
                          "name": "VoterProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16297,
                          "src": "6934:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VoterProxy_$16297_$",
                            "typeString": "type(contract VoterProxy)"
                          }
                        },
                        "id": 5065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6934:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VoterProxy_$16297",
                          "typeString": "contract VoterProxy"
                        }
                      },
                      "id": 5066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16275,
                      "src": "6934:27:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6934:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5062,
                  "id": 5069,
                  "nodeType": "Return",
                  "src": "6927:41:15"
                }
              ]
            },
            "documentation": null,
            "id": 5071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6884:2:15"
            },
            "returnParameters": {
              "id": 5062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5061,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5071,
                  "src": "6908:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6908:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6907:9:15"
            },
            "scope": 5121,
            "src": "6862:113:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5083,
              "nodeType": "Block",
              "src": "7032:60:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5079,
                          "name": "balanceOfPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5071,
                          "src": "7069:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 5080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7069:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5076,
                          "name": "balanceOfWant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5058,
                          "src": "7049:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 5077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7049:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15062,
                      "src": "7049:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7049:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5075,
                  "id": 5082,
                  "nodeType": "Return",
                  "src": "7042:43:15"
                }
              ]
            },
            "documentation": null,
            "id": 5084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6999:2:15"
            },
            "returnParameters": {
              "id": 5075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5074,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5084,
                  "src": "7023:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7023:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7022:9:15"
            },
            "scope": 5121,
            "src": "6981:111:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5101,
              "nodeType": "Block",
              "src": "7151:99:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5090,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "7169:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7169:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5092,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "7183:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7169:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 5094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7195:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 5089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "7161:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7161:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5096,
                  "nodeType": "ExpressionStatement",
                  "src": "7161:48:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5097,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4400,
                      "src": "7219:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5098,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5086,
                      "src": "7232:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7219:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5100,
                  "nodeType": "ExpressionStatement",
                  "src": "7219:24:15"
                }
              ]
            },
            "documentation": null,
            "id": 5102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5086,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 5102,
                  "src": "7121:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7121:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7120:21:15"
            },
            "returnParameters": {
              "id": 5088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7151:0:15"
            },
            "scope": 5121,
            "src": "7098:152:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5119,
              "nodeType": "Block",
              "src": "7309:99:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5108,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17621,
                            "src": "7327:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7327:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5110,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "7341:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7327:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21676f7665726e616e6365",
                        "id": 5112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7353:13:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        },
                        "value": "!governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f73661b4d145377a2dec6f2054dd3fa962e4f6aa4f53299d299497514d5311f",
                          "typeString": "literal_string \"!governance\""
                        }
                      ],
                      "id": 5107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17624,
                        17625
                      ],
                      "referencedDeclaration": 17625,
                      "src": "7319:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7319:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5114,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:48:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5115,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4402,
                      "src": "7377:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5116,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5104,
                      "src": "7390:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7377:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5118,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:24:15"
                }
              ]
            },
            "documentation": null,
            "id": 5120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5104,
                  "name": "_controller",
                  "nodeType": "VariableDeclaration",
                  "scope": 5120,
                  "src": "7279:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7279:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7278:21:15"
            },
            "returnParameters": {
              "id": 5106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7309:0:15"
            },
            "scope": 5121,
            "src": "7256:152:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5122,
        "src": "602:6808:15"
      }
    ],
    "src": "33:7378:15"
  },
  "bytecode": "60806040526103e86000556101f4600155603260025534801561002157600080fd5b506040516121f53803806121f58339818101604052602081101561004457600080fd5b505160038054336001600160a01b03199182168117909255600580548216909217909155600480549091166001600160a01b039092169190911790556121668061008f6000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063853828b61161011a578063c1a3d44c116100ad578063e9751f6b1161007c578063e9751f6b14610370578063ec5568891461045c578063edc9af9514610464578063f4b9fa751461046c578063f77c47911461047457610206565b8063c1a3d44c14610426578063c7b9d5301461042e578063d0e30db014610454578063d5c1ff731461037057610206565b8063955383bd116100e9578063955383bd146103be578063a6f19c84146103db578063ab033ea9146103e3578063ac1e50251461040957610206565b8063853828b61461038057806387788782146103885780638bc7e8c41461039057806392eefe9b1461039857610206565b806346c96aac1161019d57806370897b231161016c57806370897b23146103435780637165485d14610360578063722713f7146103685780637cc79113146103705780637fef901a1461037857610206565b806346c96aac1461030557806351cff8d91461030d5780635aa6e675146103335780636a4874a11461033b57610206565b80632e1a7d4d116101d95780632e1a7d4d146102ce578063366cd4f3146102ed5780633fc8cef3146102f55780634641257d146102fd57610206565b8063115880861461020b57806317d7de7c146102255780631f1fcd51146102a25780631fe4a686146102c6575b600080fd5b61021361047c565b60408051918252519081900360200190f35b61022d610516565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561026757818101518382015260200161024f565b50505050905090810190601f1680156102945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102aa61054d565b604080516001600160a01b039092168252519081900360200190f35b6102aa61055f565b6102eb600480360360208110156102e457600080fd5b503561056e565b005b6102aa610836565b6102aa61084e565b6102eb610866565b6102aa6110ab565b6102136004803603602081101561032357600080fd5b50356001600160a01b03166110c3565b6102aa61130d565b6102aa61131c565b6102eb6004803603602081101561035957600080fd5b5035611334565b6102aa611386565b61021361139e565b6102136113c4565b6102136113ca565b6102136113d0565b610213611594565b61021361159a565b6102eb600480360360208110156103ae57600080fd5b50356001600160a01b03166115a0565b6102eb600480360360208110156103d457600080fd5b503561160f565b6102aa611661565b6102eb600480360360208110156103f957600080fd5b50356001600160a01b0316611679565b6102eb6004803603602081101561041f57600080fd5b50356116e8565b61021361173a565b6102eb6004803603602081101561044457600080fd5b50356001600160a01b0316611789565b6102eb6117f8565b6102aa61193f565b6102aa611957565b6102aa61196f565b6102aa611987565b604080516370a0823160e01b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201529051600091735886e475e163f78cf63d6683abc7fe8516d12081916370a0823191602480820192602092909190829003018186803b1580156104e557600080fd5b505afa1580156104f9573d6000803e3d6000fd5b505050506040513d602081101561050f57600080fd5b5051905090565b60408051808201909152601881527f5374726174656779437572766559566f74657250726f78790000000000000000602082015290565b60008051602061209183398151915281565b6005546001600160a01b031681565b6004546001600160a01b031633146105bb576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b81523060048201529051600091600080516020612091833981519152916370a0823191602480820192602092909190829003018186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d602081101561063457600080fd5b505190508181101561066d57610658610653838363ffffffff61199616565b6119e1565b915061066a828263ffffffff611a9816565b91505b600061069661271061068a60025486611af290919063ffffffff16565b9063ffffffff611b4b16565b9050610731600460009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b1580156106e957600080fd5b505afa1580156106fd573d6000803e3d6000fd5b505050506040513d602081101561071357600080fd5b5051600080516020612091833981519152908363ffffffff611b8d16565b6004805460408051632988bb9f60e21b815260008051602061209183398151915293810193909352516000926001600160a01b039092169163a622ee7c916024808301926020929190829003018186803b15801561078e57600080fd5b505afa1580156107a2573d6000803e3d6000fd5b505050506040513d60208110156107b857600080fd5b505190506001600160a01b038116610800576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b61083081610814868563ffffffff61199616565b600080516020612091833981519152919063ffffffff611b8d16565b50505050565b7316de59092dae5ccf4a1e6439d611fd0653f0bd0181565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6005546001600160a01b031633148061088957506003546001600160a01b031633145b6108c8576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6040805163072e008f60e11b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201529051735886e475e163f78cf63d6683abc7fe8516d1208191630e5c011e91602480830192600092919082900301818387803b15801561092e57600080fd5b505af1158015610942573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516000935073d533a949740bb3306d119cc777fa900ba034cd5292506370a0823191602480820192602092909190829003018186803b15801561099b57600080fd5b505afa1580156109af573d6000803e3d6000fd5b505050506040513d60208110156109c557600080fd5b505190508015610c7a5760006109ec61271061068a60005485611af290919063ffffffff16565b9050610a2773d533a949740bb3306d119cc777fa900ba034cd5273f147b8125d2ef93fb6965db97d6746952a1339348363ffffffff611b8d16565b610a37828263ffffffff61199616565b9150610a7373d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d600063ffffffff611be416565b610aac73d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d8463ffffffff611be416565b6040805160038082526080820190925260609160208201838038833901905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610af057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610b3257fe5b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f81600281518110610b7457fe5b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d6338ed17398460008430610bbd4261070863ffffffff611a9816565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610c36578181015183820152602001610c1e565b505050509050019650505050505050600060405180830381600087803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b5050505050505b604080516370a0823160e01b81523060048201529051600091736b175474e89094c44da98b954eedeac495271d0f916370a0823191602480820192602092909190829003018186803b158015610ccf57600080fd5b505afa158015610ce3573d6000803e3d6000fd5b505050506040513d6020811015610cf957600080fd5b505190508015610de957610d3d736b175474e89094c44da98b954eedeac495271d0f7316de59092dae5ccf4a1e6439d611fd0653f0bd01600063ffffffff611be416565b610d76736b175474e89094c44da98b954eedeac495271d0f7316de59092dae5ccf4a1e6439d611fd0653f0bd018363ffffffff611be416565b7316de59092dae5ccf4a1e6439d611fd0653f0bd016001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610dd057600080fd5b505af1158015610de4573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516000917316de59092dae5ccf4a1e6439d611fd0653f0bd01916370a0823191602480820192602092909190829003018186803b158015610e3e57600080fd5b505afa158015610e52573d6000803e3d6000fd5b505050506040513d6020811015610e6857600080fd5b505190508015610fa957610eac7316de59092dae5ccf4a1e6439d611fd0653f0bd017345f783cce6b7ff23b2ab2d70e416cdb7d6055f51600063ffffffff611be416565b610ee57316de59092dae5ccf4a1e6439d611fd0653f0bd017345f783cce6b7ff23b2ab2d70e416cdb7d6055f518363ffffffff611be416565b7345f783cce6b7ff23b2ab2d70e416cdb7d6055f516001600160a01b031663029b2f3460405180608001604052808481526020016000815260200160008152602001600081525060006040518363ffffffff1660e01b81526004018083600460200280838360005b83811015610f65578181015183820152602001610f4d565b5050505090500182815260200192505050600060405180830381600087803b158015610f9057600080fd5b505af1158015610fa4573d6000803e3d6000fd5b505050505b604080516370a0823160e01b81523060048201529051600091600080516020612091833981519152916370a0823191602480820192602092909190829003018186803b158015610ff857600080fd5b505afa15801561100c573d6000803e3d6000fd5b505050506040513d602081101561102257600080fd5b50519050801561083057600061104961271061068a60015485611af290919063ffffffff16565b905061109c600460009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b1580156106e957600080fd5b6110a46117f8565b5050505050565b73f147b8125d2ef93fb6965db97d6746952a13393481565b6004546000906001600160a01b03163314611113576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6000805160206120918339815191526001600160a01b0383161415611168576040805162461bcd60e51b815260206004808301919091526024820152631dd85b9d60e21b604482015290519081900360640190fd5b73d533a949740bb3306d119cc777fa900ba034cd526001600160a01b03831614156111c0576040805162461bcd60e51b815260206004820152600360248201526231b93b60e91b604482015290519081900360640190fd5b7316de59092dae5ccf4a1e6439d611fd0653f0bd016001600160a01b038316141561121b576040805162461bcd60e51b815260206004808301919091526024820152637964616960e01b604482015290519081900360640190fd5b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b0383161415611273576040805162461bcd60e51b815260206004820152600360248201526264616960e81b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156112b957600080fd5b505afa1580156112cd573d6000803e3d6000fd5b505050506040513d60208110156112e357600080fd5b5051600454909150611308906001600160a01b0384811691168363ffffffff611b8d16565b919050565b6003546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b6003546001600160a01b03163314611381576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600155565b7345f783cce6b7ff23b2ab2d70e416cdb7d6055f5181565b60006113bf6113ab61047c565b6113b361173a565b9063ffffffff611a9816565b905090565b61271081565b60005481565b6004546000906001600160a01b03163314611420576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b611428611cf7565b604080516370a0823160e01b81523060048201529051600080516020612091833981519152916370a08231916024808301926020929190829003018186803b15801561147357600080fd5b505afa158015611487573d6000803e3d6000fd5b505050506040513d602081101561149d57600080fd5b50516004805460408051632988bb9f60e21b815260008051602061209183398151915293810193909352519293506000926001600160a01b039091169163a622ee7c916024808301926020929190829003018186803b1580156114ff57600080fd5b505afa158015611513573d6000803e3d6000fd5b505050506040513d602081101561152957600080fd5b505190506001600160a01b038116611571576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b611590600080516020612091833981519152828463ffffffff611b8d16565b5090565b60015481565b60025481565b6003546001600160a01b031633146115ed576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b0316331461165c576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600055565b73fa712ee4788c042e2b7bb55e6cb8ec569c4530c181565b6003546001600160a01b031633146116c6576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b03163314611735576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600255565b604080516370a0823160e01b81523060048201529051600091600080516020612091833981519152916370a0823191602480820192602092909190829003018186803b1580156104e557600080fd5b6003546001600160a01b031633146117d6576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b81523060048201529051600091600080516020612091833981519152916370a0823191602480820192602092909190829003018186803b15801561184757600080fd5b505afa15801561185b573d6000803e3d6000fd5b505050506040513d602081101561187157600080fd5b50519050801561193c576118ae600080516020612091833981519152735886e475e163f78cf63d6683abc7fe8516d120818363ffffffff611b8d16565b60408051631f2c13e160e31b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c1600482015260008051602061209183398151915260248201529051735886e475e163f78cf63d6683abc7fe8516d120819163f9609f0891604480830192600092919082900301818387803b15801561192857600080fd5b505af11580156110a4573d6000803e3d6000fd5b50565b735886e475e163f78cf63d6683abc7fe8516d1208181565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b736b175474e89094c44da98b954eedeac495271d0f81565b6004546001600160a01b031681565b60006119d883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611da0565b90505b92915050565b60408051636ce5768960e11b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201526000805160206120918339815191526024820152604481018390529051600091735886e475e163f78cf63d6683abc7fe8516d120819163d9caed129160648082019260209290919082900301818787803b158015611a6657600080fd5b505af1158015611a7a573d6000803e3d6000fd5b505050506040513d6020811015611a9057600080fd5b505192915050565b6000828201838110156119d8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611b01575060006119db565b82820282848281611b0e57fe5b04146119d85760405162461bcd60e51b81526004018080602001828103825260218152602001806120b16021913960400191505060405180910390fd5b60006119d883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611e37565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611bdf908490611e9c565b505050565b801580611c6a575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611c3c57600080fd5b505afa158015611c50573d6000803e3d6000fd5b505050506040513d6020811015611c6657600080fd5b5051155b611ca55760405162461bcd60e51b81526004018080602001828103825260368152602001806120fc6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611bdf908490611e9c565b604080516301395c5960e31b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c1600482015260008051602061209183398151915260248201529051735886e475e163f78cf63d6683abc7fe8516d12081916309cae2c89160448083019260209291908290030181600087803b158015611d7257600080fd5b505af1158015611d86573d6000803e3d6000fd5b505050506040513d6020811015611d9c57600080fd5b5050565b60008184841115611e2f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611df4578181015183820152602001611ddc565b50505050905090810190601f168015611e215780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183611e865760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611df4578181015183820152602001611ddc565b506000838581611e9257fe5b0495945050505050565b611eae826001600160a01b0316612054565b611eff576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611f3d5780518252601f199092019160209182019101611f1e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f9f576040519150601f19603f3d011682016040523d82523d6000602084013e611fa4565b606091505b509150915081611ffb576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156108305780806020019051602081101561201757600080fd5b50516108305760405162461bcd60e51b815260040180806020018281038252602a8152602001806120d2602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061208857508115155b94935050505056fe000000000000000000000000df5e0e81dff6faf3a7e52ba697820c5e32d806a8536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a7231582017d5c1c9880a41e954671676db57bc07f54de74af821b77ccbdc49742137860664736f6c63430005110032",
  "bytecodeSha1": "4be5c268ce6c425e65cc1dc133bdcaeb277312e8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17"
  },
  "contractName": "StrategyCurveYVoterProxy",
  "coverageMap": {
    "branches": {
      "1": {
        "SafeMath.add": {
          "97": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "101": [
            3897,
            3902,
            true
          ]
        },
        "SafeMath.mul": {
          "98": [
            2458,
            2464,
            false
          ],
          "99": [
            2544,
            2554,
            true
          ]
        },
        "SafeMath.sub": {
          "100": [
            1845,
            1851,
            true
          ]
        }
      },
      "15": {
        "StrategyCurveYVoterProxy.deposit": {
          "92": [
            3039,
            3048,
            false
          ]
        },
        "StrategyCurveYVoterProxy.harvest": {
          "73": [
            5117,
            5141,
            true
          ],
          "74": [
            5145,
            5169,
            true
          ],
          "75": [
            5302,
            5310,
            false
          ],
          "76": [
            5890,
            5898,
            false
          ],
          "77": [
            6122,
            6131,
            false
          ],
          "78": [
            6384,
            6393,
            false
          ]
        },
        "StrategyCurveYVoterProxy.setController": {
          "87": [
            7327,
            7351,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setGovernance": {
          "89": [
            7169,
            7193,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setKeepCRV": {
          "88": [
            2511,
            2535,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setPerformanceFee": {
          "84": [
            2841,
            2865,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setStrategist": {
          "91": [
            2359,
            2383,
            true
          ]
        },
        "StrategyCurveYVoterProxy.setWithdrawalFee": {
          "90": [
            2669,
            2693,
            true
          ]
        },
        "StrategyCurveYVoterProxy.withdraw": {
          "70": [
            3819,
            3843,
            true
          ],
          "71": [
            3939,
            3957,
            false
          ],
          "72": [
            4312,
            4332,
            true
          ],
          "79": [
            3338,
            3362,
            true
          ],
          "80": [
            3396,
            3419,
            true
          ],
          "81": [
            3446,
            3468,
            true
          ],
          "82": [
            3494,
            3517,
            true
          ],
          "83": [
            3544,
            3566,
            true
          ]
        },
        "StrategyCurveYVoterProxy.withdrawAll": {
          "85": [
            4614,
            4638,
            true
          ],
          "86": [
            4827,
            4847,
            true
          ]
        }
      },
      "6": {
        "SafeERC20.callOptionalReturn": {
          "93": [
            3261,
            3288,
            true
          ],
          "94": [
            3479,
            3486,
            true
          ],
          "95": [
            3538,
            3559,
            false
          ],
          "96": [
            3667,
            3697,
            true
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "56": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "59": [
            3150,
            3196
          ],
          "65": [
            3889,
            3917
          ]
        },
        "SafeMath.mul": {
          "57": [
            2480,
            2488
          ],
          "58": [
            2536,
            2592
          ]
        },
        "SafeMath.sub": {
          "54": [
            1351,
            1401
          ],
          "64": [
            1837,
            1866
          ]
        }
      },
      "15": {
        "StrategyCurveYVoterProxy._withdrawAll": {
          "63": [
            5018,
            5060
          ]
        },
        "StrategyCurveYVoterProxy._withdrawSome": {
          "55": [
            6672,
            6727
          ]
        },
        "StrategyCurveYVoterProxy.balanceOf": {
          "35": [
            7042,
            7085
          ]
        },
        "StrategyCurveYVoterProxy.balanceOfPool": {
          "0": [
            6927,
            6968
          ]
        },
        "StrategyCurveYVoterProxy.balanceOfWant": {
          "49": [
            6805,
            6849
          ]
        },
        "StrategyCurveYVoterProxy.deposit": {
          "52": [
            3064,
            3103
          ],
          "53": [
            3117,
            3155
          ]
        },
        "StrategyCurveYVoterProxy.getName": {
          "1": [
            2242,
            2275
          ]
        },
        "StrategyCurveYVoterProxy.harvest": {
          "8": [
            5109,
            5185
          ],
          "9": [
            5195,
            5227
          ],
          "10": [
            5392,
            5433
          ],
          "11": [
            5447,
            5472
          ],
          "12": [
            5487,
            5518
          ],
          "13": [
            5532,
            5566
          ],
          "14": [
            5635,
            5648
          ],
          "15": [
            5662,
            5676
          ],
          "16": [
            5690,
            5703
          ],
          "17": [
            5718,
            5805
          ],
          "18": [
            5914,
            5946
          ],
          "19": [
            5960,
            5995
          ],
          "20": [
            6009,
            6035
          ],
          "21": [
            6147,
            6181
          ],
          "22": [
            6195,
            6233
          ],
          "23": [
            6247,
            6297
          ],
          "24": [
            6483,
            6549
          ],
          "25": [
            6563,
            6572
          ]
        },
        "StrategyCurveYVoterProxy.setController": {
          "41": [
            7319,
            7367
          ],
          "42": [
            7377,
            7401
          ]
        },
        "StrategyCurveYVoterProxy.setGovernance": {
          "45": [
            7161,
            7209
          ],
          "46": [
            7219,
            7243
          ]
        },
        "StrategyCurveYVoterProxy.setKeepCRV": {
          "43": [
            2503,
            2551
          ],
          "44": [
            2561,
            2579
          ]
        },
        "StrategyCurveYVoterProxy.setPerformanceFee": {
          "33": [
            2833,
            2881
          ],
          "34": [
            2891,
            2923
          ]
        },
        "StrategyCurveYVoterProxy.setStrategist": {
          "50": [
            2351,
            2399
          ],
          "51": [
            2409,
            2433
          ]
        },
        "StrategyCurveYVoterProxy.setWithdrawalFee": {
          "47": [
            2661,
            2709
          ],
          "48": [
            2719,
            2749
          ]
        },
        "StrategyCurveYVoterProxy.withdraw": {
          "2": [
            3811,
            3859
          ],
          "3": [
            3973,
            4019
          ],
          "4": [
            4033,
            4064
          ],
          "5": [
            4156,
            4222
          ],
          "6": [
            4304,
            4343
          ],
          "7": [
            4406,
            4458
          ],
          "26": [
            3330,
            3378
          ],
          "27": [
            3388,
            3428
          ],
          "28": [
            3438,
            3476
          ],
          "29": [
            3486,
            3526
          ],
          "30": [
            3536,
            3574
          ],
          "31": [
            3584,
            3625
          ],
          "32": [
            3635,
            3675
          ]
        },
        "StrategyCurveYVoterProxy.withdrawAll": {
          "36": [
            4606,
            4654
          ],
          "37": [
            4664,
            4678
          ],
          "38": [
            4689,
            4736
          ],
          "39": [
            4819,
            4858
          ],
          "40": [
            4920,
            4962
          ]
        }
      },
      "6": {
        "SafeERC20.callOptionalReturn": {
          "66": [
            3253,
            3324
          ],
          "67": [
            3471,
            3523
          ],
          "68": [
            3659,
            3744
          ]
        },
        "SafeERC20.safeApprove": {
          "61": [
            1406,
            1556
          ],
          "62": [
            1566,
            1655
          ]
        },
        "SafeERC20.safeTransfer": {
          "60": [
            744,
            829
          ]
        }
      },
      "7": {
        "Address.isContract": {
          "69": [
            1238,
            1289
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102065760003560e01c8063853828b61161011a578063c1a3d44c116100ad578063e9751f6b1161007c578063e9751f6b14610370578063ec5568891461045c578063edc9af9514610464578063f4b9fa751461046c578063f77c47911461047457610206565b8063c1a3d44c14610426578063c7b9d5301461042e578063d0e30db014610454578063d5c1ff731461037057610206565b8063955383bd116100e9578063955383bd146103be578063a6f19c84146103db578063ab033ea9146103e3578063ac1e50251461040957610206565b8063853828b61461038057806387788782146103885780638bc7e8c41461039057806392eefe9b1461039857610206565b806346c96aac1161019d57806370897b231161016c57806370897b23146103435780637165485d14610360578063722713f7146103685780637cc79113146103705780637fef901a1461037857610206565b806346c96aac1461030557806351cff8d91461030d5780635aa6e675146103335780636a4874a11461033b57610206565b80632e1a7d4d116101d95780632e1a7d4d146102ce578063366cd4f3146102ed5780633fc8cef3146102f55780634641257d146102fd57610206565b8063115880861461020b57806317d7de7c146102255780631f1fcd51146102a25780631fe4a686146102c6575b600080fd5b61021361047c565b60408051918252519081900360200190f35b61022d610516565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561026757818101518382015260200161024f565b50505050905090810190601f1680156102945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102aa61054d565b604080516001600160a01b039092168252519081900360200190f35b6102aa61055f565b6102eb600480360360208110156102e457600080fd5b503561056e565b005b6102aa610836565b6102aa61084e565b6102eb610866565b6102aa6110ab565b6102136004803603602081101561032357600080fd5b50356001600160a01b03166110c3565b6102aa61130d565b6102aa61131c565b6102eb6004803603602081101561035957600080fd5b5035611334565b6102aa611386565b61021361139e565b6102136113c4565b6102136113ca565b6102136113d0565b610213611594565b61021361159a565b6102eb600480360360208110156103ae57600080fd5b50356001600160a01b03166115a0565b6102eb600480360360208110156103d457600080fd5b503561160f565b6102aa611661565b6102eb600480360360208110156103f957600080fd5b50356001600160a01b0316611679565b6102eb6004803603602081101561041f57600080fd5b50356116e8565b61021361173a565b6102eb6004803603602081101561044457600080fd5b50356001600160a01b0316611789565b6102eb6117f8565b6102aa61193f565b6102aa611957565b6102aa61196f565b6102aa611987565b604080516370a0823160e01b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201529051600091735886e475e163f78cf63d6683abc7fe8516d12081916370a0823191602480820192602092909190829003018186803b1580156104e557600080fd5b505afa1580156104f9573d6000803e3d6000fd5b505050506040513d602081101561050f57600080fd5b5051905090565b60408051808201909152601881527f5374726174656779437572766559566f74657250726f78790000000000000000602082015290565b60008051602061209183398151915281565b6005546001600160a01b031681565b6004546001600160a01b031633146105bb576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b604080516370a0823160e01b81523060048201529051600091600080516020612091833981519152916370a0823191602480820192602092909190829003018186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d602081101561063457600080fd5b505190508181101561066d57610658610653838363ffffffff61199616565b6119e1565b915061066a828263ffffffff611a9816565b91505b600061069661271061068a60025486611af290919063ffffffff16565b9063ffffffff611b4b16565b9050610731600460009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b1580156106e957600080fd5b505afa1580156106fd573d6000803e3d6000fd5b505050506040513d602081101561071357600080fd5b5051600080516020612091833981519152908363ffffffff611b8d16565b6004805460408051632988bb9f60e21b815260008051602061209183398151915293810193909352516000926001600160a01b039092169163a622ee7c916024808301926020929190829003018186803b15801561078e57600080fd5b505afa1580156107a2573d6000803e3d6000fd5b505050506040513d60208110156107b857600080fd5b505190506001600160a01b038116610800576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b61083081610814868563ffffffff61199616565b600080516020612091833981519152919063ffffffff611b8d16565b50505050565b7316de59092dae5ccf4a1e6439d611fd0653f0bd0181565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6005546001600160a01b031633148061088957506003546001600160a01b031633145b6108c8576040805162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015290519081900360640190fd5b6040805163072e008f60e11b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201529051735886e475e163f78cf63d6683abc7fe8516d1208191630e5c011e91602480830192600092919082900301818387803b15801561092e57600080fd5b505af1158015610942573d6000803e3d6000fd5b5050604080516370a0823160e01b815230600482015290516000935073d533a949740bb3306d119cc777fa900ba034cd5292506370a0823191602480820192602092909190829003018186803b15801561099b57600080fd5b505afa1580156109af573d6000803e3d6000fd5b505050506040513d60208110156109c557600080fd5b505190508015610c7a5760006109ec61271061068a60005485611af290919063ffffffff16565b9050610a2773d533a949740bb3306d119cc777fa900ba034cd5273f147b8125d2ef93fb6965db97d6746952a1339348363ffffffff611b8d16565b610a37828263ffffffff61199616565b9150610a7373d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d600063ffffffff611be416565b610aac73d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d8463ffffffff611be416565b6040805160038082526080820190925260609160208201838038833901905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610af057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610b3257fe5b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f81600281518110610b7457fe5b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d6338ed17398460008430610bbd4261070863ffffffff611a9816565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610c36578181015183820152602001610c1e565b505050509050019650505050505050600060405180830381600087803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b5050505050505b604080516370a0823160e01b81523060048201529051600091736b175474e89094c44da98b954eedeac495271d0f916370a0823191602480820192602092909190829003018186803b158015610ccf57600080fd5b505afa158015610ce3573d6000803e3d6000fd5b505050506040513d6020811015610cf957600080fd5b505190508015610de957610d3d736b175474e89094c44da98b954eedeac495271d0f7316de59092dae5ccf4a1e6439d611fd0653f0bd01600063ffffffff611be416565b610d76736b175474e89094c44da98b954eedeac495271d0f7316de59092dae5ccf4a1e6439d611fd0653f0bd018363ffffffff611be416565b7316de59092dae5ccf4a1e6439d611fd0653f0bd016001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610dd057600080fd5b505af1158015610de4573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516000917316de59092dae5ccf4a1e6439d611fd0653f0bd01916370a0823191602480820192602092909190829003018186803b158015610e3e57600080fd5b505afa158015610e52573d6000803e3d6000fd5b505050506040513d6020811015610e6857600080fd5b505190508015610fa957610eac7316de59092dae5ccf4a1e6439d611fd0653f0bd017345f783cce6b7ff23b2ab2d70e416cdb7d6055f51600063ffffffff611be416565b610ee57316de59092dae5ccf4a1e6439d611fd0653f0bd017345f783cce6b7ff23b2ab2d70e416cdb7d6055f518363ffffffff611be416565b7345f783cce6b7ff23b2ab2d70e416cdb7d6055f516001600160a01b031663029b2f3460405180608001604052808481526020016000815260200160008152602001600081525060006040518363ffffffff1660e01b81526004018083600460200280838360005b83811015610f65578181015183820152602001610f4d565b5050505090500182815260200192505050600060405180830381600087803b158015610f9057600080fd5b505af1158015610fa4573d6000803e3d6000fd5b505050505b604080516370a0823160e01b81523060048201529051600091600080516020612091833981519152916370a0823191602480820192602092909190829003018186803b158015610ff857600080fd5b505afa15801561100c573d6000803e3d6000fd5b505050506040513d602081101561102257600080fd5b50519050801561083057600061104961271061068a60015485611af290919063ffffffff16565b905061109c600460009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b1580156106e957600080fd5b6110a46117f8565b5050505050565b73f147b8125d2ef93fb6965db97d6746952a13393481565b6004546000906001600160a01b03163314611113576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b6000805160206120918339815191526001600160a01b0383161415611168576040805162461bcd60e51b815260206004808301919091526024820152631dd85b9d60e21b604482015290519081900360640190fd5b73d533a949740bb3306d119cc777fa900ba034cd526001600160a01b03831614156111c0576040805162461bcd60e51b815260206004820152600360248201526231b93b60e91b604482015290519081900360640190fd5b7316de59092dae5ccf4a1e6439d611fd0653f0bd016001600160a01b038316141561121b576040805162461bcd60e51b815260206004808301919091526024820152637964616960e01b604482015290519081900360640190fd5b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b0383161415611273576040805162461bcd60e51b815260206004820152600360248201526264616960e81b604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156112b957600080fd5b505afa1580156112cd573d6000803e3d6000fd5b505050506040513d60208110156112e357600080fd5b5051600454909150611308906001600160a01b0384811691168363ffffffff611b8d16565b919050565b6003546001600160a01b031681565b73d533a949740bb3306d119cc777fa900ba034cd5281565b6003546001600160a01b03163314611381576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600155565b7345f783cce6b7ff23b2ab2d70e416cdb7d6055f5181565b60006113bf6113ab61047c565b6113b361173a565b9063ffffffff611a9816565b905090565b61271081565b60005481565b6004546000906001600160a01b03163314611420576040805162461bcd60e51b815260206004820152600b60248201526a10b1b7b73a3937b63632b960a91b604482015290519081900360640190fd5b611428611cf7565b604080516370a0823160e01b81523060048201529051600080516020612091833981519152916370a08231916024808301926020929190829003018186803b15801561147357600080fd5b505afa158015611487573d6000803e3d6000fd5b505050506040513d602081101561149d57600080fd5b50516004805460408051632988bb9f60e21b815260008051602061209183398151915293810193909352519293506000926001600160a01b039091169163a622ee7c916024808301926020929190829003018186803b1580156114ff57600080fd5b505afa158015611513573d6000803e3d6000fd5b505050506040513d602081101561152957600080fd5b505190506001600160a01b038116611571576040805162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015290519081900360640190fd5b611590600080516020612091833981519152828463ffffffff611b8d16565b5090565b60015481565b60025481565b6003546001600160a01b031633146115ed576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b0316331461165c576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600055565b73fa712ee4788c042e2b7bb55e6cb8ec569c4530c181565b6003546001600160a01b031633146116c6576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b03163314611735576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600255565b604080516370a0823160e01b81523060048201529051600091600080516020612091833981519152916370a0823191602480820192602092909190829003018186803b1580156104e557600080fd5b6003546001600160a01b031633146117d6576040805162461bcd60e51b815260206004820152600b60248201526a21676f7665726e616e636560a81b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b81523060048201529051600091600080516020612091833981519152916370a0823191602480820192602092909190829003018186803b15801561184757600080fd5b505afa15801561185b573d6000803e3d6000fd5b505050506040513d602081101561187157600080fd5b50519050801561193c576118ae600080516020612091833981519152735886e475e163f78cf63d6683abc7fe8516d120818363ffffffff611b8d16565b60408051631f2c13e160e31b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c1600482015260008051602061209183398151915260248201529051735886e475e163f78cf63d6683abc7fe8516d120819163f9609f0891604480830192600092919082900301818387803b15801561192857600080fd5b505af11580156110a4573d6000803e3d6000fd5b50565b735886e475e163f78cf63d6683abc7fe8516d1208181565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b736b175474e89094c44da98b954eedeac495271d0f81565b6004546001600160a01b031681565b60006119d883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611da0565b90505b92915050565b60408051636ce5768960e11b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201526000805160206120918339815191526024820152604481018390529051600091735886e475e163f78cf63d6683abc7fe8516d120819163d9caed129160648082019260209290919082900301818787803b158015611a6657600080fd5b505af1158015611a7a573d6000803e3d6000fd5b505050506040513d6020811015611a9057600080fd5b505192915050565b6000828201838110156119d8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611b01575060006119db565b82820282848281611b0e57fe5b04146119d85760405162461bcd60e51b81526004018080602001828103825260218152602001806120b16021913960400191505060405180910390fd5b60006119d883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611e37565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611bdf908490611e9c565b505050565b801580611c6a575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015611c3c57600080fd5b505afa158015611c50573d6000803e3d6000fd5b505050506040513d6020811015611c6657600080fd5b5051155b611ca55760405162461bcd60e51b81526004018080602001828103825260368152602001806120fc6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611bdf908490611e9c565b604080516301395c5960e31b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c1600482015260008051602061209183398151915260248201529051735886e475e163f78cf63d6683abc7fe8516d12081916309cae2c89160448083019260209291908290030181600087803b158015611d7257600080fd5b505af1158015611d86573d6000803e3d6000fd5b505050506040513d6020811015611d9c57600080fd5b5050565b60008184841115611e2f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611df4578181015183820152602001611ddc565b50505050905090810190601f168015611e215780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183611e865760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611df4578181015183820152602001611ddc565b506000838581611e9257fe5b0495945050505050565b611eae826001600160a01b0316612054565b611eff576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611f3d5780518252601f199092019160209182019101611f1e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f9f576040519150601f19603f3d011682016040523d82523d6000602084013e611fa4565b606091505b509150915081611ffb576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156108305780806020019051602081101561201757600080fd5b50516108305760405162461bcd60e51b815260040180806020018281038252602a8152602001806120d2602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061208857508115155b94935050505056fe000000000000000000000000df5e0e81dff6faf3a7e52ba697820c5e32d806a8536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a7231582017d5c1c9880a41e954671676db57bc07f54de74af821b77ccbdc49742137860664736f6c63430005110032",
  "deployedSourceMap": "602:6808:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:6808:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6862:113;;;:::i;:::-;;;;;;;;;;;;;;;;2175:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2175:107:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;738:82;;;:::i;:::-;;;;-1:-1:-1;;;;;738:82:15;;;;;;;;;;;;;;1990:25;;;:::i;3757:708::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3757:708:15;;:::i;:::-;;1213:82;;;:::i;1000:::-;;;:::i;5073:1516::-;;;:::i;1569:83::-;;;:::i;3252:430::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3252:430:15;-1:-1:-1;;;;;3252:430:15;;:::i;1928:25::-;;;:::i;826:81::-;;;:::i;2762:168::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2762:168:15;;:::i;1301:83::-;;;:::i;6981:111::-;;;:::i;1784:46::-;;;:::i;1659:29::-;;;:::i;4538:431::-;;;:::i;1743:35::-;;;:::i;1837:33::-;;;:::i;7256:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7256:152:15;-1:-1:-1;;;;;7256:152:15;;:::i;2446:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2446:140:15;;:::i;1391:83::-;;;:::i;7098:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7098:152:15;-1:-1:-1;;;;;7098:152:15;;:::i;2592:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2592:164:15;;:::i;6740:116::-;;;:::i;2288:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2288:152:15;-1:-1:-1;;;;;2288:152:15;;:::i;2936:236::-;;;:::i;1480:83::-;;;:::i;913:81::-;;;:::i;1126:::-;;;:::i;1959:25::-;;;:::i;6862:113::-;6934:34;;;-1:-1:-1;;;6934:34:15;;1431:42;6934:34;;;;;;6908:7;;1520:42;;6934:27;;:34;;;;;;;;;;;;;;;1520:42;6934:34;;;5:2:-1;;;;30:1;27;20:12;5:2;6934:34:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6934:34:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6934:34:15;;-1:-1:-1;6862:113:15;:::o;2175:107::-;2242:33;;;;;;;;;;;;;;;;;2175:107;:::o;738:82::-;-1:-1:-1;;;;;;;;;;;738:82:15;:::o;1990:25::-;;;-1:-1:-1;;;;;1990:25:15;;:::o;3757:708::-;3833:10;;-1:-1:-1;;;;;3833:10:15;3819;:24;3811:48;;;;;-1:-1:-1;;;3811:48:15;;;;;;;;;;;;-1:-1:-1;;;3811:48:15;;;;;;;;;;;;;;;3888:37;;;-1:-1:-1;;;3888:37:15;;3919:4;3888:37;;;;;;3869:16;;-1:-1:-1;;;;;;;;;;;777:42:15;3888:22;;:37;;;;;;;;;;;;;;;777:42;3888:37;;;5:2:-1;;;;30:1;27;20:12;5:2;3888:37:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3888:37:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3888:37:15;;-1:-1:-1;3939:18:15;;;3935:140;;;3983:36;3997:21;:7;4009:8;3997:21;:11;:21;:::i;:::-;3983:13;:36::i;:::-;3973:46;-1:-1:-1;4043:21:15;3973:46;4055:8;4043:21;:11;:21;:::i;:::-;4033:31;;3935:140;4085:12;4100:45;1916:5;4100:26;4112:13;;4100:7;:11;;:26;;;;:::i;:::-;:30;:45;:30;:45;:::i;:::-;4085:60;;4156:66;4194:10;;;;;;;;;-1:-1:-1;;;;;4194:10:15;-1:-1:-1;;;;;4182:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4182:33:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4182:33:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4182:33:15;-1:-1:-1;;;;;;;;;;;777:42:15;4217:4;4156:66;:25;:66;:::i;:::-;4261:10;;;4249:45;;;-1:-1:-1;;;4249:45:15;;-1:-1:-1;;;;;;;;;;;4249:45:15;;;;;;;;4232:14;;-1:-1:-1;;;;;4261:10:15;;;;4249:30;;:45;;;;;;;;;;;;;;4261:10;4249:45;;;5:2:-1;;;;30:1;27;20:12;5:2;4249:45:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4249:45:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4249:45:15;;-1:-1:-1;;;;;;4312:20:15;;4304:39;;;;;-1:-1:-1;;;4304:39:15;;;;;;;;;;;;-1:-1:-1;;;4304:39:15;;;;;;;;;;;;;;;4406:52;4432:6;4440:17;:7;4452:4;4440:17;:11;:17;:::i;:::-;-1:-1:-1;;;;;;;;;;;777:42:15;4406:52;;:25;:52;:::i;:::-;3757:708;;;;:::o;1213:82::-;1252:42;1213:82;:::o;1000:::-;1039:42;1000:82;:::o;5073:1516::-;5131:10;;-1:-1:-1;;;;;5131:10:15;5117;:24;;:52;;-1:-1:-1;5159:10:15;;-1:-1:-1;;;;;5159:10:15;5145;:24;5117:52;5109:76;;;;;-1:-1:-1;;;5109:76:15;;;;;;;;;;;;-1:-1:-1;;;5109:76:15;;;;;;;;;;;;;;;5195:32;;;-1:-1:-1;;;5195:32:15;;1431:42;5195:32;;;;;;1520:42;;5195:25;;:32;;;;;-1:-1:-1;;5195:32:15;;;;;;;-1:-1:-1;1520:42:15;5195:32;;;5:2:-1;;;;30:1;27;20:12;5:2;5195:32:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5252:36:15;;;-1:-1:-1;;;5252:36:15;;5282:4;5252:36;;;;;;5237:12;;-1:-1:-1;864:42:15;;-1:-1:-1;5252:21:15;;:36;;;;;;;;;;;;;;;864:42;5252:36;;;5:2:-1;;;;30:1;27;20:12;5:2;5252:36:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5252:36:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5252:36:15;;-1:-1:-1;5302:8:15;;5298:518;;5326:16;5345:33;1731:5;5345:17;5354:7;;5345:4;:8;;:17;;;;:::i;:33::-;5326:52;-1:-1:-1;5392:41:15;864:42;1609;5326:52;5392:41;:24;:41;:::i;:::-;5454:18;:4;5463:8;5454:18;:8;:18;:::i;:::-;5447:25;-1:-1:-1;5487:31:15;864:42;951;5516:1;5487:31;:23;:31;:::i;:::-;5532:34;864:42;951;5561:4;5532:34;:23;:34;:::i;:::-;5605:16;;;5619:1;5605:16;;;;;;;;;5581:21;;5605:16;;;5581:21;;105:10:-1;5605:16:15;88:34:-1;136:17;;-1:-1;5605:16:15;5581:40;;864:42;5635:4;5640:1;5635:7;;;;;;;;;;;;;:13;-1:-1:-1;;;;;5635:13:15;;;-1:-1:-1;;;;;5635:13:15;;;;;1039:42;5662:4;5667:1;5662:7;;;;;;;;;;;;;:14;-1:-1:-1;;;;;5662:14:15;;;-1:-1:-1;;;;;5662:14:15;;;;;1164:42;5690:4;5695:1;5690:7;;;;;;;;-1:-1:-1;;;;;5690:13:15;;;:7;;;;;;;;;;;:13;951:42;5718:33;5752:4;5766:1;5770:4;5784;5791:13;:3;5799:4;5791:13;:7;:13;:::i;:::-;5718:87;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5718:87:15;-1:-1:-1;;;;;5718:87:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5718:87:15;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5718:87:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5718:87:15;;;;5298:518;;;5840:36;;;-1:-1:-1;;;5840:36:15;;5870:4;5840:36;;;;;;5825:12;;1164:42;;5840:21;;:36;;;;;;;;;;;;;;;1164:42;5840:36;;;5:2:-1;;;;30:1;27;20:12;5:2;5840:36:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5840:36:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5840:36:15;;-1:-1:-1;5890:8:15;;5886:160;;5914:32;1164:42;1252;5944:1;5914:32;:23;:32;:::i;:::-;5960:35;1164:42;1252;5990:4;5960:35;:23;:35;:::i;:::-;1252:42;-1:-1:-1;;;;;6009:20:15;;6030:4;6009:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6009:26:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6009:26:15;;;;5886:160;6071:37;;;-1:-1:-1;;;6071:37:15;;6102:4;6071:37;;;;;;6055:13;;1252:42;;6071:22;;:37;;;;;;;;;;;;;;;1252:42;6071:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6071:37:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6071:37:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6071:37:15;;-1:-1:-1;6122:9:15;;6118:190;;6147:34;1252:42;1341;6179:1;6147:34;:24;:34;:::i;:::-;6195:38;1252:42;1341;6227:5;6195:38;:24;:38;:::i;:::-;1341:42;-1:-1:-1;;;;;6247:29:15;;:50;;;;;;;;6278:5;6247:50;;;;6285:1;6247:50;;;;6288:1;6247:50;;;;6291:1;6247:50;;;6295:1;6247:50;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6247:50:15;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6247:50:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6247:50:15;;;;6118:190;6333:37;;;-1:-1:-1;;;6333:37:15;;6364:4;6333:37;;;;;;6317:13;;-1:-1:-1;;;;;;;;;;;777:42:15;6333:22;;:37;;;;;;;;;;;;;;;777:42;6333:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6333:37:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6333:37:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6333:37:15;;-1:-1:-1;6384:9:15;;6380:203;;6409:12;6424:45;1825:5;6424:25;6434:14;;6424:5;:9;;:25;;;;:::i;:45::-;6409:60;;6483:66;6521:10;;;;;;;;;-1:-1:-1;;;;;6521:10:15;-1:-1:-1;;;;;6509:31:15;;:33;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;6483:66:15;6563:9;:7;:9::i;:::-;6380:203;5073:1516;;;;:::o;1569:83::-;1609:42;1569:83;:::o;3252:430::-;3352:10;;3303:15;;-1:-1:-1;;;;;3352:10:15;3338;:24;3330:48;;;;;-1:-1:-1;;;3330:48:15;;;;;;;;;;;;-1:-1:-1;;;3330:48:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;3396:23:15;;;;3388:40;;;;;-1:-1:-1;;;3388:40:15;;;;;;;;;;;;;;;-1:-1:-1;;;3388:40:15;;;;;;;;;;;;;;;864:42;-1:-1:-1;;;;;3446:22:15;;;;3438:38;;;;;-1:-1:-1;;;3438:38:15;;;;;;;;;;;;-1:-1:-1;;;3438:38:15;;;;;;;;;;;;;;;1252:42;-1:-1:-1;;;;;3494:23:15;;;;3486:40;;;;;-1:-1:-1;;;3486:40:15;;;;;;;;;;;;;;;-1:-1:-1;;;3486:40:15;;;;;;;;;;;;;;;1164:42;-1:-1:-1;;;;;3544:22:15;;;;3536:38;;;;;-1:-1:-1;;;3536:38:15;;;;;;;;;;;;-1:-1:-1;;;3536:38:15;;;;;;;;;;;;;;;3594:31;;;-1:-1:-1;;;3594:31:15;;3619:4;3594:31;;;;;;-1:-1:-1;;;;;3594:16:15;;;;;:31;;;;;;;;;;;;;;:16;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;3594:31:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3594:31:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3594:31:15;3655:10;;3594:31;;-1:-1:-1;3635:40:15;;-1:-1:-1;;;;;3635:19:15;;;;3655:10;3594:31;3635:40;:19;:40;:::i;:::-;3252:430;;;:::o;1928:25::-;;;-1:-1:-1;;;;;1928:25:15;;:::o;826:81::-;864:42;826:81;:::o;2762:168::-;2855:10;;-1:-1:-1;;;;;2855:10:15;2841;:24;2833:48;;;;;-1:-1:-1;;;2833:48:15;;;;;;;;;;;;-1:-1:-1;;;2833:48:15;;;;;;;;;;;;;;;2891:14;:32;2762:168::o;1301:83::-;1341:42;1301:83;:::o;6981:111::-;7023:7;7049:36;7069:15;:13;:15::i;:::-;7049;:13;:15::i;:::-;:19;:36;:19;:36;:::i;:::-;7042:43;;6981:111;:::o;1784:46::-;1825:5;1784:46;:::o;1659:29::-;;;;:::o;4538:431::-;4628:10;;4579:15;;-1:-1:-1;;;;;4628:10:15;4614;:24;4606:48;;;;;-1:-1:-1;;;4606:48:15;;;;;;;;;;;;-1:-1:-1;;;4606:48:15;;;;;;;;;;;;;;;4664:14;:12;:14::i;:::-;4699:37;;;-1:-1:-1;;;4699:37:15;;4730:4;4699:37;;;;;;-1:-1:-1;;;;;;;;;;;777:42:15;4699:22;;:37;;;;;;;;;;;;;;777:42;4699:37;;;5:2:-1;;;;30:1;27;20:12;5:2;4699:37:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4699:37:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4699:37:15;4776:10;;;4764:45;;;-1:-1:-1;;;4764:45:15;;-1:-1:-1;;;;;;;;;;;4764:45:15;;;;;;;;4699:37;;-1:-1:-1;4747:14:15;;-1:-1:-1;;;;;4776:10:15;;;;4764:30;;:45;;;;;4699:37;;4764:45;;;;;;;4776:10;4764:45;;;5:2:-1;;;;30:1;27;20:12;5:2;4764:45:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4764:45:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4764:45:15;;-1:-1:-1;;;;;;4827:20:15;;4819:39;;;;;-1:-1:-1;;;4819:39:15;;;;;;;;;;;;-1:-1:-1;;;4819:39:15;;;;;;;;;;;;;;;4920:42;-1:-1:-1;;;;;;;;;;;4946:6:15;4954:7;4920:42;:25;:42;:::i;:::-;4538:431;;:::o;1743:35::-;;;;:::o;1837:33::-;;;;:::o;7256:152::-;7341:10;;-1:-1:-1;;;;;7341:10:15;7327;:24;7319:48;;;;;-1:-1:-1;;;7319:48:15;;;;;;;;;;;;-1:-1:-1;;;7319:48:15;;;;;;;;;;;;;;;7377:10;:24;;-1:-1:-1;;;;;;7377:24:15;-1:-1:-1;;;;;7377:24:15;;;;;;;;;;7256:152::o;2446:140::-;2525:10;;-1:-1:-1;;;;;2525:10:15;2511;:24;2503:48;;;;;-1:-1:-1;;;2503:48:15;;;;;;;;;;;;-1:-1:-1;;;2503:48:15;;;;;;;;;;;;;;;2561:7;:18;2446:140::o;1391:83::-;1431:42;1391:83;:::o;7098:152::-;7183:10;;-1:-1:-1;;;;;7183:10:15;7169;:24;7161:48;;;;;-1:-1:-1;;;7161:48:15;;;;;;;;;;;;-1:-1:-1;;;7161:48:15;;;;;;;;;;;;;;;7219:10;:24;;-1:-1:-1;;;;;;7219:24:15;-1:-1:-1;;;;;7219:24:15;;;;;;;;;;7098:152::o;2592:164::-;2683:10;;-1:-1:-1;;;;;2683:10:15;2669;:24;2661:48;;;;;-1:-1:-1;;;2661:48:15;;;;;;;;;;;;-1:-1:-1;;;2661:48:15;;;;;;;;;;;;;;;2719:13;:30;2592:164::o;6740:116::-;6812:37;;;-1:-1:-1;;;6812:37:15;;6843:4;6812:37;;;;;;6786:7;;-1:-1:-1;;;;;;;;;;;777:42:15;6812:22;;:37;;;;;;;;;;;;;;;777:42;6812:37;;;5:2:-1;;;;30:1;27;20:12;2288:152:15;2373:10;;-1:-1:-1;;;;;2373:10:15;2359;:24;2351:48;;;;;-1:-1:-1;;;2351:48:15;;;;;;;;;;;;-1:-1:-1;;;2351:48:15;;;;;;;;;;;;;;;2409:10;:24;;-1:-1:-1;;;;;;2409:24:15;-1:-1:-1;;;;;2409:24:15;;;;;;;;;;2288:152::o;2936:236::-;2988:37;;;-1:-1:-1;;;2988:37:15;;3019:4;2988:37;;;;;;2972:13;;-1:-1:-1;;;;;;;;;;;777:42:15;2988:22;;:37;;;;;;;;;;;;;;;777:42;2988:37;;;5:2:-1;;;;30:1;27;20:12;5:2;2988:37:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2988:37:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2988:37:15;;-1:-1:-1;3039:9:15;;3035:131;;3064:39;-1:-1:-1;;;;;;;;;;;1520:42:15;3097:5;3064:39;:25;:39;:::i;:::-;3117:38;;;-1:-1:-1;;;3117:38:15;;1431:42;3117:38;;;;-1:-1:-1;;;;;;;;;;;3117:38:15;;;;;;1520:42;;3117:25;;:38;;;;;-1:-1:-1;;3117:38:15;;;;;;;-1:-1:-1;1520:42:15;3117:38;;;5:2:-1;;;;30:1;27;20:12;5:2;3117:38:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;3035:131:15;2936:236;:::o;1480:83::-;1520:42;1480:83;:::o;913:81::-;951:42;913:81;:::o;1126:::-;1164:42;1126:81;:::o;1959:25::-;;;-1:-1:-1;;;;;1959:25:15;;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;6595:139:15:-;6679:48;;;-1:-1:-1;;;6679:48:15;;1431:42;6679:48;;;;-1:-1:-1;;;;;;;;;;;6679:48:15;;;;;;;;;;;;6653:7;;1520:42;;6679:26;;:48;;;;;;;;;;;;;;;6653:7;1520:42;6679:48;;;5:2:-1;;;;30:1;27;20:12;5:2;6679:48:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6679:48:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6679:48:15;;6595:139;-1:-1:-1;;6595:139:15:o;834:176:1:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:459;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:1;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;1050:612::-;1415:10;;;1414:62;;-1:-1:-1;1431:39:6;;;-1:-1:-1;;;1431:39:6;;1455:4;1431:39;;;;-1:-1:-1;;;;;1431:39:6;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1431:39:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1431:39:6;:44;1414:62;1406:150;;;;-1:-1:-1;;;1406:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:62;;;-1:-1:-1;;;;;1592:62:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1592:62:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1566:89:6;;1585:5;;1566:18;:89::i;4975:92:15:-;5018:42;;;-1:-1:-1;;;5018:42:15;;1431;5018;;;;-1:-1:-1;;;;;;;;;;;5018:42:15;;;;;;1520;;5018:29;;:42;;;;;;;;;;;;;;-1:-1:-1;1520:42:15;5018;;;5:2:-1;;;;30:1;27;20:12;5:2;5018:42:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5018:42:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;4975:92:15:o;1732:187:1:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:1;;;1732:187::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:1;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:1:o;2666:1095:6:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:610:7;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    602,
    7410
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xC1A3D44C GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE9751F6B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE9751F6B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xEC556889 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0xEDC9AF95 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xF4B9FA75 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x474 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0xC1A3D44C EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xC7B9D530 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xD5C1FF73 EQ PUSH2 0x370 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x955383BD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x955383BD EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xA6F19C84 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xAC1E5025 EQ PUSH2 0x409 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x853828B6 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x87788782 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x92EEFE9B EQ PUSH2 0x398 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x70897B23 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x70897B23 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x7165485D EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x7CC79113 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x7FEF901A EQ PUSH2 0x378 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x6A4874A1 EQ PUSH2 0x33B JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x366CD4F3 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x2FD JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x11588086 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x1F1FCD51 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x1FE4A686 EQ PUSH2 0x2C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x267 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x294 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x55F JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x56E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0x836 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x84E JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x866 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10C3 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x130D JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x131C JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1334 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x139E JUMP JUMPDEST PUSH2 0x213 PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x213 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x160F JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x2EB PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x193F JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x196F JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x5886E475E163F78CF63D6683ABC7FE8516D12081 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x5374726174656779437572766559566F74657250726F78790000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x66D JUMPI PUSH2 0x658 PUSH2 0x653 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1996 AND JUMP JUMPDEST PUSH2 0x19E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x66A DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1A98 AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x696 PUSH2 0x2710 PUSH2 0x68A PUSH1 0x2 SLOAD DUP7 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B4B AND JUMP JUMPDEST SWAP1 POP PUSH2 0x731 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1B8D AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x800 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x830 DUP2 PUSH2 0x814 DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1996 AND JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B8D AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 DUP2 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x889 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x8C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x72E008F PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x5886E475E163F78CF63D6683ABC7FE8516D12081 SWAP2 PUSH4 0xE5C011E SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x942 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 SWAP3 POP PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xC7A JUMPI PUSH1 0x0 PUSH2 0x9EC PUSH2 0x2710 PUSH2 0x68A PUSH1 0x0 SLOAD DUP6 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xA27 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1B8D AND JUMP JUMPDEST PUSH2 0xA37 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1996 AND JUMP JUMPDEST SWAP2 POP PUSH2 0xA73 PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1BE4 AND JUMP JUMPDEST PUSH2 0xAAC PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1BE4 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD DUP4 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAF0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB32 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xB74 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH4 0x38ED1739 DUP5 PUSH1 0x0 DUP5 ADDRESS PUSH2 0xBBD TIMESTAMP PUSH2 0x708 PUSH4 0xFFFFFFFF PUSH2 0x1A98 AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC36 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC1E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xDE9 JUMPI PUSH2 0xD3D PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1BE4 AND JUMP JUMPDEST PUSH2 0xD76 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1BE4 AND JUMP JUMPDEST PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6B55F25 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xFA9 JUMPI PUSH2 0xEAC PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH20 0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x1BE4 AND JUMP JUMPDEST PUSH2 0xEE5 PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH20 0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1BE4 AND JUMP JUMPDEST PUSH20 0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x29B2F34 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF65 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF4D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x100C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 PUSH2 0x1049 PUSH2 0x2710 PUSH2 0x68A PUSH1 0x1 SLOAD DUP6 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x109C PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9EC5A894 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A4 PUSH2 0x17F8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xF147B8125D2EF93FB6965DB97D6746952A133934 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1113 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1168 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x1DD85B9D PUSH1 0xE2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x11C0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x31B93B PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x121B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x79646169 PUSH1 0xE0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x1273 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x646169 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH2 0x1308 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1B8D AND JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH20 0xD533A949740BB3306D119CC777FA900BA034CD52 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1381 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH20 0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BF PUSH2 0x13AB PUSH2 0x47C JUMP JUMPDEST PUSH2 0x13B3 PUSH2 0x173A JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1A98 AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1420 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B1B7B73A3937B63632B9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1428 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2988BB9F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA622EE7C SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1513 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1571 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x85D985D5B1D PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1590 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1B8D AND JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15ED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x165C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1735 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x21676F7665726E616E6365 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x185B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x193C JUMPI PUSH2 0x18AE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH20 0x5886E475E163F78CF63D6683ABC7FE8516D12081 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1B8D AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F2C13E1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x5886E475E163F78CF63D6683ABC7FE8516D12081 SWAP2 PUSH4 0xF9609F08 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH20 0x5886E475E163F78CF63D6683ABC7FE8516D12081 DUP2 JUMP JUMPDEST PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP2 JUMP JUMPDEST PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x6CE57689 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0x5886E475E163F78CF63D6683ABC7FE8516D12081 SWAP2 PUSH4 0xD9CAED12 SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B01 JUMPI POP PUSH1 0x0 PUSH2 0x19DB JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1B0E JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x19D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20B1 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1BDF SWAP1 DUP5 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1C6A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1CA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20FC PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1BDF SWAP1 DUP5 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x1395C59 PUSH1 0xE3 SHL DUP2 MSTORE PUSH20 0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x5886E475E163F78CF63D6683ABC7FE8516D12081 SWAP2 PUSH4 0x9CAE2C8 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1E2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DDC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E21 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1DF4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DDC JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1E92 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1EAE DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2054 JUMP JUMPDEST PUSH2 0x1EFF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1F3D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1FFB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x830 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20D2 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x2088 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0xDF 0x5E 0xE DUP2 0xDF 0xF6 STATICCALL RETURN 0xA7 0xE5 0x2B 0xA6 SWAP8 DUP3 0xC 0x5E ORIGIN 0xD8 MOD 0xA8 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A7231582017D5C1C9 DUP9 EXP COINBASE 0xE9 SLOAD PUSH8 0x1676DB57BC07F54D 0xE7 0x4A 0xF8 0x21 0xB7 PUSH29 0xCBDC49742137860664736F6C6343000511003200000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        602,
        7410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "REVERT",
      "path": "15"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        602,
        7410
      ],
      "op": "POP",
      "path": "15"
    },
    "18": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "21": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "LT",
      "path": "15"
    },
    "22": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206"
    },
    "25": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "29": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "SHR",
      "path": "15"
    },
    "32": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "33": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x853828B6"
    },
    "38": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "GT",
      "path": "15"
    },
    "39": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11A"
    },
    "42": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "43": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "44": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC1A3D44C"
    },
    "49": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "GT",
      "path": "15"
    },
    "50": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "54": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "55": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE9751F6B"
    },
    "60": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "GT",
      "path": "15"
    },
    "61": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "65": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "66": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE9751F6B"
    },
    "71": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "72": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x370"
    },
    "75": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "76": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "77": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xEC556889"
    },
    "82": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "83": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45C"
    },
    "86": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "87": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xEDC9AF95"
    },
    "93": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "94": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x464"
    },
    "97": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "98": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "99": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF4B9FA75"
    },
    "104": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "105": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46C"
    },
    "108": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "109": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "110": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF77C4791"
    },
    "115": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "116": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x474"
    },
    "119": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "120": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206"
    },
    "123": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "124": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "125": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "126": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC1A3D44C"
    },
    "131": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "132": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x426"
    },
    "135": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "136": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC7B9D530"
    },
    "142": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "143": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x42E"
    },
    "146": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "147": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "148": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD0E30DB0"
    },
    "153": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "154": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x454"
    },
    "157": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "158": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "159": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD5C1FF73"
    },
    "164": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "165": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x370"
    },
    "168": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "169": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206"
    },
    "172": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "173": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "174": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "175": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x955383BD"
    },
    "180": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "GT",
      "path": "15"
    },
    "181": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "185": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "186": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x955383BD"
    },
    "191": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "192": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3BE"
    },
    "195": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "196": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA6F19C84"
    },
    "202": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "203": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3DB"
    },
    "206": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "207": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "208": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xAB033EA9"
    },
    "213": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "214": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E3"
    },
    "217": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "218": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "219": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xAC1E5025"
    },
    "224": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "225": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x409"
    },
    "228": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "229": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206"
    },
    "232": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "233": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "234": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "235": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x853828B6"
    },
    "240": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "241": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x380"
    },
    "244": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "245": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "246": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x87788782"
    },
    "251": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "252": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x388"
    },
    "255": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "256": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "257": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x8BC7E8C4"
    },
    "262": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "263": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x390"
    },
    "266": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "267": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "268": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x92EEFE9B"
    },
    "273": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "274": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x398"
    },
    "277": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "278": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206"
    },
    "281": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "282": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "283": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "284": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x46C96AAC"
    },
    "289": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "GT",
      "path": "15"
    },
    "290": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19D"
    },
    "293": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "294": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "295": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70897B23"
    },
    "300": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "GT",
      "path": "15"
    },
    "301": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16C"
    },
    "304": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "305": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "306": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70897B23"
    },
    "311": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "312": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x343"
    },
    "315": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "316": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "317": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x7165485D"
    },
    "322": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "323": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x360"
    },
    "326": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "327": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "328": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x722713F7"
    },
    "333": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "334": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x368"
    },
    "337": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "338": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "339": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x7CC79113"
    },
    "344": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "345": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x370"
    },
    "348": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "349": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "350": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x7FEF901A"
    },
    "355": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "356": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x378"
    },
    "359": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "360": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206"
    },
    "363": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "364": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "365": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "366": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x46C96AAC"
    },
    "371": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "372": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x305"
    },
    "375": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "376": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "377": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x51CFF8D9"
    },
    "382": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "383": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30D"
    },
    "386": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "387": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "388": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5AA6E675"
    },
    "393": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "394": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x333"
    },
    "397": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "398": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "399": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x6A4874A1"
    },
    "404": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "405": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33B"
    },
    "408": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "409": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206"
    },
    "412": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "413": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "414": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "415": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x2E1A7D4D"
    },
    "420": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "GT",
      "path": "15"
    },
    "421": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D9"
    },
    "424": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "425": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "426": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x2E1A7D4D"
    },
    "431": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "432": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CE"
    },
    "435": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "436": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "437": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x366CD4F3"
    },
    "442": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "443": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2ED"
    },
    "446": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "447": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "448": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x3FC8CEF3"
    },
    "453": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "454": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F5"
    },
    "457": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "458": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "459": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x4641257D"
    },
    "464": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "465": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FD"
    },
    "468": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "469": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206"
    },
    "472": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "473": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "474": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "475": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x11588086"
    },
    "480": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "481": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20B"
    },
    "484": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "485": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "486": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x17D7DE7C"
    },
    "491": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "492": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x225"
    },
    "495": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "496": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "497": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1F1FCD51"
    },
    "502": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "503": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A2"
    },
    "506": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "507": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "508": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1FE4A686"
    },
    "513": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "EQ",
      "path": "15"
    },
    "514": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C6"
    },
    "517": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "518": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "519": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "522": {
      "first_revert": true,
      "fn": null,
      "offset": [
        602,
        7410
      ],
      "op": "REVERT",
      "path": "15"
    },
    "523": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "524": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "527": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47C"
    },
    "530": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "jump": "i",
      "offset": [
        6862,
        6975
      ],
      "op": "JUMP",
      "path": "15"
    },
    "531": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "532": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "534": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "535": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "536": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "537": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "DUP3",
      "path": "15"
    },
    "538": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "539": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "540": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "541": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "DUP2",
      "path": "15"
    },
    "542": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "543": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "SUB",
      "path": "15"
    },
    "544": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "546": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "ADD",
      "path": "15"
    },
    "547": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "548": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "RETURN",
      "path": "15"
    },
    "549": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "550": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22D"
    },
    "553": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x516"
    },
    "556": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "i",
      "offset": [
        2175,
        2282
      ],
      "op": "JUMP",
      "path": "15"
    },
    "557": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "558": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "560": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP1",
      "path": "15"
    },
    "561": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "562": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "564": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP1",
      "path": "15"
    },
    "565": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP3",
      "path": "15"
    },
    "566": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "567": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP4",
      "path": "15"
    },
    "568": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "569": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP2",
      "path": "15"
    },
    "570": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP4",
      "path": "15"
    },
    "571": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "ADD",
      "path": "15"
    },
    "572": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "573": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP4",
      "path": "15"
    },
    "574": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "575": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "576": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "577": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP4",
      "path": "15"
    },
    "578": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "579": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "580": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP4",
      "path": "15"
    },
    "581": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "ADD",
      "path": "15"
    },
    "582": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "583": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP6",
      "path": "15"
    },
    "584": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "ADD",
      "path": "15"
    },
    "585": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "586": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP1",
      "path": "15"
    },
    "587": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP4",
      "path": "15"
    },
    "588": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP4",
      "path": "15"
    },
    "589": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "591": {
      "op": "JUMPDEST"
    },
    "592": {
      "op": "DUP4"
    },
    "593": {
      "op": "DUP2"
    },
    "594": {
      "op": "LT"
    },
    "595": {
      "op": "ISZERO"
    },
    "596": {
      "op": "PUSH2",
      "value": "0x267"
    },
    "599": {
      "op": "JUMPI"
    },
    "600": {
      "op": "DUP2"
    },
    "601": {
      "op": "DUP2"
    },
    "602": {
      "op": "ADD"
    },
    "603": {
      "op": "MLOAD"
    },
    "604": {
      "op": "DUP4"
    },
    "605": {
      "op": "DUP3"
    },
    "606": {
      "op": "ADD"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "PUSH2",
      "value": "0x24F"
    },
    "614": {
      "op": "JUMP"
    },
    "615": {
      "op": "JUMPDEST"
    },
    "616": {
      "op": "POP"
    },
    "617": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "618": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "619": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "620": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "621": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "622": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "623": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP2",
      "path": "15"
    },
    "624": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "ADD",
      "path": "15"
    },
    "625": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "626": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "628": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "AND",
      "path": "15"
    },
    "629": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP1",
      "path": "15"
    },
    "630": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "631": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x294"
    },
    "634": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "635": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP1",
      "path": "15"
    },
    "636": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP3",
      "path": "15"
    },
    "637": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SUB",
      "path": "15"
    },
    "638": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP1",
      "path": "15"
    },
    "639": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "640": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "642": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP4",
      "path": "15"
    },
    "643": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "645": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SUB",
      "path": "15"
    },
    "646": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "649": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "EXP",
      "path": "15"
    },
    "650": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SUB",
      "path": "15"
    },
    "651": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "NOT",
      "path": "15"
    },
    "652": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "AND",
      "path": "15"
    },
    "653": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP2",
      "path": "15"
    },
    "654": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "655": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "657": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "ADD",
      "path": "15"
    },
    "658": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "659": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "660": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "661": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "662": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "663": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "664": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "665": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "POP",
      "path": "15"
    },
    "666": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "668": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "669": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "DUP1",
      "path": "15"
    },
    "670": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "671": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SUB",
      "path": "15"
    },
    "672": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "673": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "RETURN",
      "path": "15"
    },
    "674": {
      "offset": [
        738,
        820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "675": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "678": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x54D"
    },
    "681": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "i",
      "offset": [
        738,
        820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "682": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "683": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "685": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "DUP1",
      "path": "15"
    },
    "686": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "offset": [
        738,
        820
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "696": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "697": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "AND",
      "path": "15"
    },
    "698": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "DUP3",
      "path": "15"
    },
    "699": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "700": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "701": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "702": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "DUP2",
      "path": "15"
    },
    "703": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "704": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "SUB",
      "path": "15"
    },
    "705": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "707": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "ADD",
      "path": "15"
    },
    "708": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "709": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        738,
        820
      ],
      "op": "RETURN",
      "path": "15"
    },
    "710": {
      "offset": [
        1990,
        2015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "711": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1990,
        2015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "714": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1990,
        2015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x55F"
    },
    "717": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "i",
      "offset": [
        1990,
        2015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "718": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "719": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "722": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "724": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "DUP1",
      "path": "15"
    },
    "725": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "726": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "SUB",
      "path": "15"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "729": {
      "op": "DUP2"
    },
    "730": {
      "op": "LT"
    },
    "731": {
      "op": "ISZERO"
    },
    "732": {
      "op": "PUSH2",
      "value": "0x2E4"
    },
    "735": {
      "op": "JUMPI"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "738": {
      "op": "DUP1"
    },
    "739": {
      "op": "REVERT"
    },
    "740": {
      "op": "JUMPDEST"
    },
    "741": {
      "op": "POP"
    },
    "742": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "743": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x56E"
    },
    "746": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3757,
        4465
      ],
      "op": "JUMP",
      "path": "15"
    },
    "747": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "748": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "STOP",
      "path": "15"
    },
    "749": {
      "offset": [
        1213,
        1295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "750": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1213,
        1295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "753": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1213,
        1295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x836"
    },
    "756": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1213,
        1295
      ],
      "op": "JUMP",
      "path": "15"
    },
    "757": {
      "offset": [
        1000,
        1082
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "758": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1000,
        1082
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "761": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1000,
        1082
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x84E"
    },
    "764": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1000,
        1082
      ],
      "op": "JUMP",
      "path": "15"
    },
    "765": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5073,
        6589
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "766": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5073,
        6589
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "769": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5073,
        6589
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x866"
    },
    "772": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5073,
        6589
      ],
      "op": "JUMP",
      "path": "15"
    },
    "773": {
      "offset": [
        1569,
        1652
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "774": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1569,
        1652
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "777": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1569,
        1652
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10AB"
    },
    "780": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        1569,
        1652
      ],
      "op": "JUMP",
      "path": "15"
    },
    "781": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "782": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "785": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "787": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "DUP1",
      "path": "15"
    },
    "788": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "789": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "SUB",
      "path": "15"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "792": {
      "op": "DUP2"
    },
    "793": {
      "op": "LT"
    },
    "794": {
      "op": "ISZERO"
    },
    "795": {
      "op": "PUSH2",
      "value": "0x323"
    },
    "798": {
      "op": "JUMPI"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "801": {
      "op": "DUP1"
    },
    "802": {
      "op": "REVERT"
    },
    "803": {
      "op": "JUMPDEST"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "SUB"
    },
    "814": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "AND",
      "path": "15"
    },
    "815": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10C3"
    },
    "818": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3252,
        3682
      ],
      "op": "JUMP",
      "path": "15"
    },
    "819": {
      "offset": [
        1928,
        1953
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "820": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1928,
        1953
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "823": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1928,
        1953
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x130D"
    },
    "826": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        1928,
        1953
      ],
      "op": "JUMP",
      "path": "15"
    },
    "827": {
      "offset": [
        826,
        907
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "828": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        826,
        907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "831": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        826,
        907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131C"
    },
    "834": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        826,
        907
      ],
      "op": "JUMP",
      "path": "15"
    },
    "835": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "836": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "839": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "841": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "DUP1",
      "path": "15"
    },
    "842": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "843": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "SUB",
      "path": "15"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "846": {
      "op": "DUP2"
    },
    "847": {
      "op": "LT"
    },
    "848": {
      "op": "ISZERO"
    },
    "849": {
      "op": "PUSH2",
      "value": "0x359"
    },
    "852": {
      "op": "JUMPI"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "855": {
      "op": "DUP1"
    },
    "856": {
      "op": "REVERT"
    },
    "857": {
      "op": "JUMPDEST"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "860": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1334"
    },
    "863": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "jump": "i",
      "offset": [
        2762,
        2930
      ],
      "op": "JUMP",
      "path": "15"
    },
    "864": {
      "offset": [
        1301,
        1384
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "865": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        1301,
        1384
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "868": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        1301,
        1384
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1386"
    },
    "871": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "jump": "i",
      "offset": [
        1301,
        1384
      ],
      "op": "JUMP",
      "path": "15"
    },
    "872": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        6981,
        7092
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "873": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        6981,
        7092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "876": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        6981,
        7092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x139E"
    },
    "879": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        6981,
        7092
      ],
      "op": "JUMP",
      "path": "15"
    },
    "880": {
      "offset": [
        1784,
        1830
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "881": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1784,
        1830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "884": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1784,
        1830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13C4"
    },
    "887": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        1784,
        1830
      ],
      "op": "JUMP",
      "path": "15"
    },
    "888": {
      "offset": [
        1659,
        1688
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "889": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1659,
        1688
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "892": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1659,
        1688
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13CA"
    },
    "895": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        1659,
        1688
      ],
      "op": "JUMP",
      "path": "15"
    },
    "896": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4538,
        4969
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "897": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4538,
        4969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "900": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4538,
        4969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13D0"
    },
    "903": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        4538,
        4969
      ],
      "op": "JUMP",
      "path": "15"
    },
    "904": {
      "offset": [
        1743,
        1778
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "905": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1743,
        1778
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "908": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1743,
        1778
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1594"
    },
    "911": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1743,
        1778
      ],
      "op": "JUMP",
      "path": "15"
    },
    "912": {
      "offset": [
        1837,
        1870
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "913": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1837,
        1870
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "916": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1837,
        1870
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x159A"
    },
    "919": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        1837,
        1870
      ],
      "op": "JUMP",
      "path": "15"
    },
    "920": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "921": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "924": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "926": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "DUP1",
      "path": "15"
    },
    "927": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "928": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "SUB",
      "path": "15"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "931": {
      "op": "DUP2"
    },
    "932": {
      "op": "LT"
    },
    "933": {
      "op": "ISZERO"
    },
    "934": {
      "op": "PUSH2",
      "value": "0x3AE"
    },
    "937": {
      "op": "JUMPI"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "940": {
      "op": "DUP1"
    },
    "941": {
      "op": "REVERT"
    },
    "942": {
      "op": "JUMPDEST"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "951": {
      "op": "SHL"
    },
    "952": {
      "op": "SUB"
    },
    "953": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "AND",
      "path": "15"
    },
    "954": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15A0"
    },
    "957": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "jump": "i",
      "offset": [
        7256,
        7408
      ],
      "op": "JUMP",
      "path": "15"
    },
    "958": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "959": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "962": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "964": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "DUP1",
      "path": "15"
    },
    "965": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "966": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "SUB",
      "path": "15"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "969": {
      "op": "DUP2"
    },
    "970": {
      "op": "LT"
    },
    "971": {
      "op": "ISZERO"
    },
    "972": {
      "op": "PUSH2",
      "value": "0x3D4"
    },
    "975": {
      "op": "JUMPI"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "978": {
      "op": "DUP1"
    },
    "979": {
      "op": "REVERT"
    },
    "980": {
      "op": "JUMPDEST"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "983": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160F"
    },
    "986": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "jump": "i",
      "offset": [
        2446,
        2586
      ],
      "op": "JUMP",
      "path": "15"
    },
    "987": {
      "offset": [
        1391,
        1474
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "988": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        1391,
        1474
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "991": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        1391,
        1474
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1661"
    },
    "994": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "jump": "i",
      "offset": [
        1391,
        1474
      ],
      "op": "JUMP",
      "path": "15"
    },
    "995": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "996": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "999": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1001": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1002": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1003": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "SUB",
      "path": "15"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1006": {
      "op": "DUP2"
    },
    "1007": {
      "op": "LT"
    },
    "1008": {
      "op": "ISZERO"
    },
    "1009": {
      "op": "PUSH2",
      "value": "0x3F9"
    },
    "1012": {
      "op": "JUMPI"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1015": {
      "op": "DUP1"
    },
    "1016": {
      "op": "REVERT"
    },
    "1017": {
      "op": "JUMPDEST"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1026": {
      "op": "SHL"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "AND",
      "path": "15"
    },
    "1029": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1679"
    },
    "1032": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "jump": "i",
      "offset": [
        7098,
        7250
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1033": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1034": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "1037": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1039": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1040": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1041": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "SUB",
      "path": "15"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1044": {
      "op": "DUP2"
    },
    "1045": {
      "op": "LT"
    },
    "1046": {
      "op": "ISZERO"
    },
    "1047": {
      "op": "PUSH2",
      "value": "0x41F"
    },
    "1050": {
      "op": "JUMPI"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1053": {
      "op": "DUP1"
    },
    "1054": {
      "op": "REVERT"
    },
    "1055": {
      "op": "JUMPDEST"
    },
    "1056": {
      "op": "POP"
    },
    "1057": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1058": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E8"
    },
    "1061": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "jump": "i",
      "offset": [
        2592,
        2756
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1062": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6740,
        6856
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1063": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6740,
        6856
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "1066": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6740,
        6856
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x173A"
    },
    "1069": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "jump": "i",
      "offset": [
        6740,
        6856
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1070": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1071": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "1074": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1076": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1077": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1078": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "SUB",
      "path": "15"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1081": {
      "op": "DUP2"
    },
    "1082": {
      "op": "LT"
    },
    "1083": {
      "op": "ISZERO"
    },
    "1084": {
      "op": "PUSH2",
      "value": "0x444"
    },
    "1087": {
      "op": "JUMPI"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1090": {
      "op": "DUP1"
    },
    "1091": {
      "op": "REVERT"
    },
    "1092": {
      "op": "JUMPDEST"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "op": "SUB"
    },
    "1103": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "AND",
      "path": "15"
    },
    "1104": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1789"
    },
    "1107": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "jump": "i",
      "offset": [
        2288,
        2440
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1108": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2936,
        3172
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1109": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2936,
        3172
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EB"
    },
    "1112": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2936,
        3172
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17F8"
    },
    "1115": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        2936,
        3172
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1116": {
      "offset": [
        1480,
        1563
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1117": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1480,
        1563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "1120": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1480,
        1563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x193F"
    },
    "1123": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1480,
        1563
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1124": {
      "offset": [
        913,
        994
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1125": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        913,
        994
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "1128": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        913,
        994
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1957"
    },
    "1131": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        913,
        994
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1132": {
      "offset": [
        1126,
        1207
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1133": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1126,
        1207
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "1136": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1126,
        1207
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x196F"
    },
    "1139": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1126,
        1207
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1140": {
      "offset": [
        1959,
        1984
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1141": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1959,
        1984
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA"
    },
    "1144": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1959,
        1984
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1987"
    },
    "1147": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        1959,
        1984
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1148": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1149": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 0,
      "value": "0x40"
    },
    "1151": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1152": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1153": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1162": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1163": {
      "offset": [
        1431,
        1473
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "1184": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1186": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1187": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "ADD",
      "path": "15"
    },
    "1188": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1189": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1190": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1191": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6908,
        6915
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1193": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6908,
        6915
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1194": {
      "offset": [
        1520,
        1562
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x5886E475E163F78CF63D6683ABC7FE8516D12081"
    },
    "1215": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        1520,
        1562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1216": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6961
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "1221": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6961
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1222": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1224": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1225": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1226": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "ADD",
      "path": "15"
    },
    "1227": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1228": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1230": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1231": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1232": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1233": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1234": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1235": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1236": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SUB",
      "path": "15"
    },
    "1237": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "ADD",
      "path": "15"
    },
    "1238": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1239": {
      "offset": [
        1520,
        1562
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1240": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1241": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1242": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1243": {
      "op": "DUP1"
    },
    "1244": {
      "op": "ISZERO"
    },
    "1245": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "1248": {
      "op": "JUMPI"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1251": {
      "op": "DUP1"
    },
    "1252": {
      "op": "REVERT"
    },
    "1253": {
      "op": "JUMPDEST"
    },
    "1254": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "POP",
      "path": "15"
    },
    "1255": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "GAS",
      "path": "15"
    },
    "1256": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "1257": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1258": {
      "op": "DUP1"
    },
    "1259": {
      "op": "ISZERO"
    },
    "1260": {
      "op": "PUSH2",
      "value": "0x4F9"
    },
    "1263": {
      "op": "JUMPI"
    },
    "1264": {
      "op": "RETURNDATASIZE"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "op": "DUP1"
    },
    "1268": {
      "op": "RETURNDATACOPY"
    },
    "1269": {
      "op": "RETURNDATASIZE"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1272": {
      "op": "REVERT"
    },
    "1273": {
      "op": "JUMPDEST"
    },
    "1274": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "POP",
      "path": "15"
    },
    "1275": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "POP",
      "path": "15"
    },
    "1276": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "POP",
      "path": "15"
    },
    "1277": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "POP",
      "path": "15"
    },
    "1278": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1280": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1281": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1284": {
      "op": "DUP2"
    },
    "1285": {
      "op": "LT"
    },
    "1286": {
      "op": "ISZERO"
    },
    "1287": {
      "op": "PUSH2",
      "value": "0x50F"
    },
    "1290": {
      "op": "JUMPI"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1293": {
      "op": "DUP1"
    },
    "1294": {
      "op": "REVERT"
    },
    "1295": {
      "op": "JUMPDEST"
    },
    "1296": {
      "op": "POP"
    },
    "1297": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1298": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6934,
        6968
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "offset": [
        6862,
        6975
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1301": {
      "fn": "StrategyCurveYVoterProxy.balanceOfPool",
      "jump": "o",
      "offset": [
        6862,
        6975
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1302": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1303": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 1,
      "value": "0x40"
    },
    "1305": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1306": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1307": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1308": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1309": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "ADD",
      "path": "15"
    },
    "1310": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1311": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1312": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1313": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x18"
    },
    "1315": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1316": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1317": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x5374726174656779437572766559566F74657250726F78790000000000000000"
    },
    "1350": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1352": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1353": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "ADD",
      "path": "15"
    },
    "1354": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2242,
        2275
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1355": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        2175,
        2282
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1356": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "o",
      "offset": [
        2175,
        2282
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1357": {
      "offset": [
        738,
        820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1360": {
      "op": "DUP1"
    },
    "1361": {
      "op": "MLOAD"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1364": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "1367": {
      "op": "DUP4"
    },
    "1368": {
      "op": "CODECOPY"
    },
    "1369": {
      "op": "DUP2"
    },
    "1370": {
      "op": "MLOAD"
    },
    "1371": {
      "op": "SWAP2"
    },
    "1372": {
      "op": "MSTORE"
    },
    "1373": {
      "offset": [
        738,
        820
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1374": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "o",
      "offset": [
        738,
        820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1375": {
      "offset": [
        1990,
        2015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1376": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1990,
        2015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1378": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1990,
        2015
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1385": {
      "op": "SHL"
    },
    "1386": {
      "op": "SUB"
    },
    "1387": {
      "offset": [
        1990,
        2015
      ],
      "op": "AND",
      "path": "15"
    },
    "1388": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "offset": [
        1990,
        2015
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1389": {
      "fn": "StrategyCurveYVoterProxy.getName",
      "jump": "o",
      "offset": [
        1990,
        2015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1390": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1391": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3833,
        3843
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 2,
      "value": "0x4"
    },
    "1393": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3833,
        3843
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1400": {
      "op": "SHL"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3833,
        3843
      ],
      "op": "AND",
      "path": "15"
    },
    "1403": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3819,
        3829
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1404": {
      "branch": 70,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3819,
        3843
      ],
      "op": "EQ",
      "path": "15"
    },
    "1405": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5BB"
    },
    "1408": {
      "branch": 70,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1409": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1411": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1412": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1421": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1422": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1424": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1426": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1427": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "ADD",
      "path": "15"
    },
    "1428": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1429": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "1431": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1433": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1434": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "ADD",
      "path": "15"
    },
    "1435": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1436": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1453": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1454": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "ADD",
      "path": "15"
    },
    "1455": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1456": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1457": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1458": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1459": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1460": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1461": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "SUB",
      "path": "15"
    },
    "1462": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1464": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "ADD",
      "path": "15"
    },
    "1465": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1466": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1467": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3811,
        3859
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1468": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1470": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1471": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1472": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1479": {
      "op": "SHL"
    },
    "1480": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1481": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1482": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3919,
        3923
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "1483": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1485": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1486": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "ADD",
      "path": "15"
    },
    "1487": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1488": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1489": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1490": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3869,
        3885
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1492": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3869,
        3885
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1495": {
      "op": "DUP1"
    },
    "1496": {
      "op": "MLOAD"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1499": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "1502": {
      "op": "DUP4"
    },
    "1503": {
      "op": "CODECOPY"
    },
    "1504": {
      "op": "DUP2"
    },
    "1505": {
      "op": "MLOAD"
    },
    "1506": {
      "op": "SWAP2"
    },
    "1507": {
      "op": "MSTORE"
    },
    "1508": {
      "offset": [
        777,
        819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1509": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3910
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "1514": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3910
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1515": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1517": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1518": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1519": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "ADD",
      "path": "15"
    },
    "1520": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1521": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1523": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1524": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1525": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1526": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1527": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1528": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1529": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SUB",
      "path": "15"
    },
    "1530": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "ADD",
      "path": "15"
    },
    "1531": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1532": {
      "offset": [
        777,
        819
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1533": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1534": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1535": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1536": {
      "op": "DUP1"
    },
    "1537": {
      "op": "ISZERO"
    },
    "1538": {
      "op": "PUSH2",
      "value": "0x60A"
    },
    "1541": {
      "op": "JUMPI"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1544": {
      "op": "DUP1"
    },
    "1545": {
      "op": "REVERT"
    },
    "1546": {
      "op": "JUMPDEST"
    },
    "1547": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "POP",
      "path": "15"
    },
    "1548": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "GAS",
      "path": "15"
    },
    "1549": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "1550": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1551": {
      "op": "DUP1"
    },
    "1552": {
      "op": "ISZERO"
    },
    "1553": {
      "op": "PUSH2",
      "value": "0x61E"
    },
    "1556": {
      "op": "JUMPI"
    },
    "1557": {
      "op": "RETURNDATASIZE"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1560": {
      "op": "DUP1"
    },
    "1561": {
      "op": "RETURNDATACOPY"
    },
    "1562": {
      "op": "RETURNDATASIZE"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1565": {
      "op": "REVERT"
    },
    "1566": {
      "op": "JUMPDEST"
    },
    "1567": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "POP",
      "path": "15"
    },
    "1568": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "POP",
      "path": "15"
    },
    "1569": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "POP",
      "path": "15"
    },
    "1570": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "POP",
      "path": "15"
    },
    "1571": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1573": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1574": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1577": {
      "op": "DUP2"
    },
    "1578": {
      "op": "LT"
    },
    "1579": {
      "op": "ISZERO"
    },
    "1580": {
      "op": "PUSH2",
      "value": "0x634"
    },
    "1583": {
      "op": "JUMPI"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1586": {
      "op": "DUP1"
    },
    "1587": {
      "op": "REVERT"
    },
    "1588": {
      "op": "JUMPDEST"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1591": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3888,
        3925
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3939,
        3957
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1594": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3939,
        3957
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1595": {
      "branch": 71,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3939,
        3957
      ],
      "op": "LT",
      "path": "15"
    },
    "1596": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3935,
        4075
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1597": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3935,
        4075
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66D"
    },
    "1600": {
      "branch": 71,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3935,
        4075
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1601": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3983,
        4019
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 3,
      "value": "0x658"
    },
    "1604": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3997,
        4018
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x653"
    },
    "1607": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3997,
        4004
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1608": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4009,
        4017
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1609": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3997,
        4018
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1614": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3997,
        4008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1996"
    },
    "1617": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3997,
        4018
      ],
      "op": "AND",
      "path": "15"
    },
    "1618": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3997,
        4018
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1619": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3997,
        4018
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1620": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3983,
        3996
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19E1"
    },
    "1623": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3983,
        4019
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1624": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3983,
        4019
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1625": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3973,
        4019
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1626": {
      "op": "POP"
    },
    "1627": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4043,
        4064
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 4,
      "value": "0x66A"
    },
    "1630": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3973,
        4019
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1631": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4055,
        4063
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1632": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4043,
        4064
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1637": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4043,
        4054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A98"
    },
    "1640": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4043,
        4064
      ],
      "op": "AND",
      "path": "15"
    },
    "1641": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4043,
        4064
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1642": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4043,
        4064
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1643": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4033,
        4064
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1644": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4033,
        4064
      ],
      "op": "POP",
      "path": "15"
    },
    "1645": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3935,
        4075
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1646": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4085,
        4097
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1648": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x696"
    },
    "1651": {
      "offset": [
        1916,
        1921
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "1654": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4126
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x68A"
    },
    "1657": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4112,
        4125
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "1659": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4112,
        4125
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1660": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4107
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1661": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4111
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AF2"
    },
    "1664": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4111
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1665": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4126
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1666": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4126
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1667": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4126
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1672": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4126
      ],
      "op": "AND",
      "path": "15"
    },
    "1673": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4100,
        4126
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1674": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4126
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1675": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1676": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4145
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1681": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B4B"
    },
    "1684": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4145
      ],
      "op": "AND",
      "path": "15"
    },
    "1685": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4100,
        4145
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1686": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4100,
        4145
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1687": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4085,
        4145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1688": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4085,
        4145
      ],
      "op": "POP",
      "path": "15"
    },
    "1689": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4156,
        4222
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 5,
      "value": "0x731"
    },
    "1692": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1694": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1696": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1697": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1698": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1699": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "1702": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "EXP",
      "path": "15"
    },
    "1703": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1704": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "DIV",
      "path": "15"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1711": {
      "op": "SHL"
    },
    "1712": {
      "op": "SUB"
    },
    "1713": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4194,
        4204
      ],
      "op": "AND",
      "path": "15"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4213
      ],
      "op": "AND",
      "path": "15"
    },
    "1723": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4213
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9EC5A894"
    },
    "1728": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1730": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1731": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1732": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1737": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "AND",
      "path": "15"
    },
    "1738": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "1740": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "SHL",
      "path": "15"
    },
    "1741": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1742": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1743": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1745": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "ADD",
      "path": "15"
    },
    "1746": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1748": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1750": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1751": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1752": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1753": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "SUB",
      "path": "15"
    },
    "1754": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1755": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1756": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1757": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1758": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1759": {
      "op": "DUP1"
    },
    "1760": {
      "op": "ISZERO"
    },
    "1761": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "1764": {
      "op": "JUMPI"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1767": {
      "op": "DUP1"
    },
    "1768": {
      "op": "REVERT"
    },
    "1769": {
      "op": "JUMPDEST"
    },
    "1770": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "POP",
      "path": "15"
    },
    "1771": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "GAS",
      "path": "15"
    },
    "1772": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "1773": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1774": {
      "op": "DUP1"
    },
    "1775": {
      "op": "ISZERO"
    },
    "1776": {
      "op": "PUSH2",
      "value": "0x6FD"
    },
    "1779": {
      "op": "JUMPI"
    },
    "1780": {
      "op": "RETURNDATASIZE"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1783": {
      "op": "DUP1"
    },
    "1784": {
      "op": "RETURNDATACOPY"
    },
    "1785": {
      "op": "RETURNDATASIZE"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1788": {
      "op": "REVERT"
    },
    "1789": {
      "op": "JUMPDEST"
    },
    "1790": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "POP",
      "path": "15"
    },
    "1791": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "POP",
      "path": "15"
    },
    "1792": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "POP",
      "path": "15"
    },
    "1793": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "POP",
      "path": "15"
    },
    "1794": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1796": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1797": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1800": {
      "op": "DUP2"
    },
    "1801": {
      "op": "LT"
    },
    "1802": {
      "op": "ISZERO"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "1806": {
      "op": "JUMPI"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1809": {
      "op": "DUP1"
    },
    "1810": {
      "op": "REVERT"
    },
    "1811": {
      "op": "JUMPDEST"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4182,
        4215
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1816": {
      "op": "DUP1"
    },
    "1817": {
      "op": "MLOAD"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1820": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "1823": {
      "op": "DUP4"
    },
    "1824": {
      "op": "CODECOPY"
    },
    "1825": {
      "op": "DUP2"
    },
    "1826": {
      "op": "MLOAD"
    },
    "1827": {
      "op": "SWAP2"
    },
    "1828": {
      "op": "MSTORE"
    },
    "1829": {
      "offset": [
        777,
        819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1830": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4217,
        4221
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1831": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4156,
        4222
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1836": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4156,
        4181
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B8D"
    },
    "1839": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4156,
        4222
      ],
      "op": "AND",
      "path": "15"
    },
    "1840": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4156,
        4222
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1841": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4156,
        4222
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1842": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4261,
        4271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1844": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4261,
        4271
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1845": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4261,
        4271
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1846": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1848": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1849": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1850": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1859": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1862": {
      "op": "DUP1"
    },
    "1863": {
      "op": "MLOAD"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1866": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "1869": {
      "op": "DUP4"
    },
    "1870": {
      "op": "CODECOPY"
    },
    "1871": {
      "op": "DUP2"
    },
    "1872": {
      "op": "MLOAD"
    },
    "1873": {
      "op": "SWAP2"
    },
    "1874": {
      "op": "MSTORE"
    },
    "1875": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1876": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1877": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "ADD",
      "path": "15"
    },
    "1878": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1879": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1880": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1881": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1882": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1883": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4232,
        4246
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1885": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4232,
        4246
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1892": {
      "op": "SHL"
    },
    "1893": {
      "op": "SUB"
    },
    "1894": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4261,
        4271
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1895": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4261,
        4271
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1896": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4261,
        4271
      ],
      "op": "AND",
      "path": "15"
    },
    "1897": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4261,
        4271
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1898": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4279
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA622EE7C"
    },
    "1903": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4279
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1904": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1906": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1907": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1908": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "ADD",
      "path": "15"
    },
    "1909": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1910": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1912": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1913": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1914": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1915": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1916": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1917": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SUB",
      "path": "15"
    },
    "1918": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "ADD",
      "path": "15"
    },
    "1919": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1920": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4261,
        4271
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1921": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1922": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "1923": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1924": {
      "op": "DUP1"
    },
    "1925": {
      "op": "ISZERO"
    },
    "1926": {
      "op": "PUSH2",
      "value": "0x78E"
    },
    "1929": {
      "op": "JUMPI"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1932": {
      "op": "DUP1"
    },
    "1933": {
      "op": "REVERT"
    },
    "1934": {
      "op": "JUMPDEST"
    },
    "1935": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "POP",
      "path": "15"
    },
    "1936": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "GAS",
      "path": "15"
    },
    "1937": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "1938": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1939": {
      "op": "DUP1"
    },
    "1940": {
      "op": "ISZERO"
    },
    "1941": {
      "op": "PUSH2",
      "value": "0x7A2"
    },
    "1944": {
      "op": "JUMPI"
    },
    "1945": {
      "op": "RETURNDATASIZE"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1948": {
      "op": "DUP1"
    },
    "1949": {
      "op": "RETURNDATACOPY"
    },
    "1950": {
      "op": "RETURNDATASIZE"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1953": {
      "op": "REVERT"
    },
    "1954": {
      "op": "JUMPDEST"
    },
    "1955": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "POP",
      "path": "15"
    },
    "1956": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "POP",
      "path": "15"
    },
    "1957": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "POP",
      "path": "15"
    },
    "1958": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "POP",
      "path": "15"
    },
    "1959": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1961": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1962": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1965": {
      "op": "DUP2"
    },
    "1966": {
      "op": "LT"
    },
    "1967": {
      "op": "ISZERO"
    },
    "1968": {
      "op": "PUSH2",
      "value": "0x7B8"
    },
    "1971": {
      "op": "JUMPI"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1974": {
      "op": "DUP1"
    },
    "1975": {
      "op": "REVERT"
    },
    "1976": {
      "op": "JUMPDEST"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1979": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4249,
        4294
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "op": "SUB"
    },
    "1989": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4312,
        4332
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 6
    },
    "1990": {
      "branch": 72,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4312,
        4332
      ],
      "op": "AND",
      "path": "15"
    },
    "1991": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x800"
    },
    "1994": {
      "branch": 72,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1995": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1997": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1998": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1999": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2005": {
      "op": "SHL"
    },
    "2006": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2007": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2008": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2010": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2012": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2013": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "ADD",
      "path": "15"
    },
    "2014": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2015": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "2017": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2019": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2020": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "ADD",
      "path": "15"
    },
    "2021": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2022": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2031": {
      "op": "SHL"
    },
    "2032": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2034": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2035": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "ADD",
      "path": "15"
    },
    "2036": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2037": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2038": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2039": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2040": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2041": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2042": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "SUB",
      "path": "15"
    },
    "2043": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2045": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "ADD",
      "path": "15"
    },
    "2046": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2047": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2048": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4304,
        4343
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2049": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4406,
        4458
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 7,
      "value": "0x830"
    },
    "2052": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4432,
        4438
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2053": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4440,
        4457
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x814"
    },
    "2056": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4440,
        4447
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2057": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4452,
        4456
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2058": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4440,
        4457
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2063": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4440,
        4451
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1996"
    },
    "2066": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4440,
        4457
      ],
      "op": "AND",
      "path": "15"
    },
    "2067": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4440,
        4457
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2068": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4440,
        4457
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2071": {
      "op": "DUP1"
    },
    "2072": {
      "op": "MLOAD"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2075": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "2078": {
      "op": "DUP4"
    },
    "2079": {
      "op": "CODECOPY"
    },
    "2080": {
      "op": "DUP2"
    },
    "2081": {
      "op": "MLOAD"
    },
    "2082": {
      "op": "SWAP2"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "offset": [
        777,
        819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2085": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4406,
        4458
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2086": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4406,
        4458
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2091": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4406,
        4431
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B8D"
    },
    "2094": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4406,
        4458
      ],
      "op": "AND",
      "path": "15"
    },
    "2095": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        4406,
        4458
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2096": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        4406,
        4458
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2097": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "POP",
      "path": "15"
    },
    "2098": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "POP",
      "path": "15"
    },
    "2099": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "POP",
      "path": "15"
    },
    "2100": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3757,
        4465
      ],
      "op": "POP",
      "path": "15"
    },
    "2101": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        3757,
        4465
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2102": {
      "offset": [
        1213,
        1295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2103": {
      "offset": [
        1252,
        1294
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "2124": {
      "offset": [
        1213,
        1295
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2125": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1213,
        1295
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2126": {
      "offset": [
        1000,
        1082
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2127": {
      "offset": [
        1039,
        1081
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2148": {
      "offset": [
        1000,
        1082
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2149": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1000,
        1082
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2150": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5073,
        6589
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2151": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5131,
        5141
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 8,
      "value": "0x5"
    },
    "2153": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5131,
        5141
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "op": "SUB"
    },
    "2162": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5131,
        5141
      ],
      "op": "AND",
      "path": "15"
    },
    "2163": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5117,
        5127
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2164": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5117,
        5141
      ],
      "op": "EQ",
      "path": "15"
    },
    "2165": {
      "branch": 73,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5117,
        5141
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2166": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5117,
        5169
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x889"
    },
    "2169": {
      "branch": 73,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5117,
        5169
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5159,
        5169
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2173": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5159,
        5169
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "op": "SUB"
    },
    "2182": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5159,
        5169
      ],
      "op": "AND",
      "path": "15"
    },
    "2183": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5145,
        5155
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2184": {
      "branch": 74,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5145,
        5169
      ],
      "op": "EQ",
      "path": "15"
    },
    "2185": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5117,
        5169
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2186": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8C8"
    },
    "2189": {
      "branch": 74,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2190": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2192": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2193": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2200": {
      "op": "SHL"
    },
    "2201": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2202": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2203": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2205": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2207": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2208": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "ADD",
      "path": "15"
    },
    "2209": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2210": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "2212": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2214": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2215": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "ADD",
      "path": "15"
    },
    "2216": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2217": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "2234": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2235": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "ADD",
      "path": "15"
    },
    "2236": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2237": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2238": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2239": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2240": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2241": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2242": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "SUB",
      "path": "15"
    },
    "2243": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "2245": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "ADD",
      "path": "15"
    },
    "2246": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2247": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2248": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5109,
        5185
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2249": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 9,
      "value": "0x40"
    },
    "2251": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2252": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2253": {
      "op": "PUSH4",
      "value": "0x72E008F"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2262": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2263": {
      "offset": [
        1431,
        1473
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "2284": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2286": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2287": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "ADD",
      "path": "15"
    },
    "2288": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2289": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2290": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2291": {
      "offset": [
        1520,
        1562
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x5886E475E163F78CF63D6683ABC7FE8516D12081"
    },
    "2312": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1520,
        1562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2313": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5220
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xE5C011E"
    },
    "2318": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5220
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2319": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2321": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2322": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2323": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "ADD",
      "path": "15"
    },
    "2324": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2327": {
      "op": "SWAP3"
    },
    "2328": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2329": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2330": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2331": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2332": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "SUB",
      "path": "15"
    },
    "2333": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "ADD",
      "path": "15"
    },
    "2334": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2335": {
      "op": "DUP4"
    },
    "2336": {
      "offset": [
        1520,
        1562
      ],
      "op": "DUP8",
      "path": "15"
    },
    "2337": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2338": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2339": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2340": {
      "op": "DUP1"
    },
    "2341": {
      "op": "ISZERO"
    },
    "2342": {
      "op": "PUSH2",
      "value": "0x92E"
    },
    "2345": {
      "op": "JUMPI"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2348": {
      "op": "DUP1"
    },
    "2349": {
      "op": "REVERT"
    },
    "2350": {
      "op": "JUMPDEST"
    },
    "2351": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "POP",
      "path": "15"
    },
    "2352": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "GAS",
      "path": "15"
    },
    "2353": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "CALL",
      "path": "15"
    },
    "2354": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5195,
        5227
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2355": {
      "op": "DUP1"
    },
    "2356": {
      "op": "ISZERO"
    },
    "2357": {
      "op": "PUSH2",
      "value": "0x942"
    },
    "2360": {
      "op": "JUMPI"
    },
    "2361": {
      "op": "RETURNDATASIZE"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2364": {
      "op": "DUP1"
    },
    "2365": {
      "op": "RETURNDATACOPY"
    },
    "2366": {
      "op": "RETURNDATASIZE"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2369": {
      "op": "REVERT"
    },
    "2370": {
      "op": "JUMPDEST"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "op": "POP"
    },
    "2373": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2375": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2376": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2377": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2384": {
      "op": "SHL"
    },
    "2385": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2386": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2387": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5282,
        5286
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "2388": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2390": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2391": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "ADD",
      "path": "15"
    },
    "2392": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2393": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2394": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2395": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5237,
        5249
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2397": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5237,
        5249
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "offset": [
        864,
        906
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2420": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        864,
        906
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5273
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "2427": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5273
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2428": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "2430": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2431": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2432": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "ADD",
      "path": "15"
    },
    "2433": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2434": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2436": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2437": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2438": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2439": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2440": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2441": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2442": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SUB",
      "path": "15"
    },
    "2443": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "ADD",
      "path": "15"
    },
    "2444": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2445": {
      "offset": [
        864,
        906
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2446": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2447": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2448": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2449": {
      "op": "DUP1"
    },
    "2450": {
      "op": "ISZERO"
    },
    "2451": {
      "op": "PUSH2",
      "value": "0x99B"
    },
    "2454": {
      "op": "JUMPI"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2457": {
      "op": "DUP1"
    },
    "2458": {
      "op": "REVERT"
    },
    "2459": {
      "op": "JUMPDEST"
    },
    "2460": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "POP",
      "path": "15"
    },
    "2461": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "GAS",
      "path": "15"
    },
    "2462": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "2463": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2464": {
      "op": "DUP1"
    },
    "2465": {
      "op": "ISZERO"
    },
    "2466": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2469": {
      "op": "JUMPI"
    },
    "2470": {
      "op": "RETURNDATASIZE"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2473": {
      "op": "DUP1"
    },
    "2474": {
      "op": "RETURNDATACOPY"
    },
    "2475": {
      "op": "RETURNDATASIZE"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2478": {
      "op": "REVERT"
    },
    "2479": {
      "op": "JUMPDEST"
    },
    "2480": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "POP",
      "path": "15"
    },
    "2481": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "POP",
      "path": "15"
    },
    "2482": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "POP",
      "path": "15"
    },
    "2483": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "POP",
      "path": "15"
    },
    "2484": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2486": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2487": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2490": {
      "op": "DUP2"
    },
    "2491": {
      "op": "LT"
    },
    "2492": {
      "op": "ISZERO"
    },
    "2493": {
      "op": "PUSH2",
      "value": "0x9C5"
    },
    "2496": {
      "op": "JUMPI"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2499": {
      "op": "DUP1"
    },
    "2500": {
      "op": "REVERT"
    },
    "2501": {
      "op": "JUMPDEST"
    },
    "2502": {
      "op": "POP"
    },
    "2503": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2504": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5252,
        5288
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5302,
        5310
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2507": {
      "branch": 75,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5302,
        5310
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2508": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5298,
        5816
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC7A"
    },
    "2511": {
      "branch": 75,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5298,
        5816
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2512": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5326,
        5342
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2514": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5378
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9EC"
    },
    "2517": {
      "offset": [
        1731,
        1736
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "2520": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5362
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x68A"
    },
    "2523": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5354,
        5361
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2525": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5354,
        5361
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2526": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5349
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2527": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AF2"
    },
    "2530": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2531": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5362
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2532": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5362
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2533": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5362
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2538": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5362
      ],
      "op": "AND",
      "path": "15"
    },
    "2539": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5345,
        5362
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2540": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5345,
        5378
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2541": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5326,
        5378
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5392,
        5433
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 10,
      "value": "0xA27"
    },
    "2546": {
      "offset": [
        864,
        906
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2567": {
      "offset": [
        1609,
        1651
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "2588": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5326,
        5378
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2589": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5392,
        5433
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2594": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5392,
        5416
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B8D"
    },
    "2597": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5392,
        5433
      ],
      "op": "AND",
      "path": "15"
    },
    "2598": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5392,
        5433
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2599": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5392,
        5433
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2600": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5454,
        5472
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 11,
      "value": "0xA37"
    },
    "2603": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5454,
        5458
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2604": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5463,
        5471
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2605": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5454,
        5472
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2610": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5454,
        5462
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1996"
    },
    "2613": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5454,
        5472
      ],
      "op": "AND",
      "path": "15"
    },
    "2614": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5454,
        5472
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2615": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5454,
        5472
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2616": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5447,
        5472
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2617": {
      "op": "POP"
    },
    "2618": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5487,
        5518
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 12,
      "value": "0xA73"
    },
    "2621": {
      "offset": [
        864,
        906
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2642": {
      "offset": [
        951,
        993
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "2663": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5516,
        5517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2665": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5487,
        5518
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2670": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5487,
        5510
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BE4"
    },
    "2673": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5487,
        5518
      ],
      "op": "AND",
      "path": "15"
    },
    "2674": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5487,
        5518
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2675": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5487,
        5518
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2676": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5532,
        5566
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 13,
      "value": "0xAAC"
    },
    "2679": {
      "offset": [
        864,
        906
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2700": {
      "offset": [
        951,
        993
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "2721": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5561,
        5565
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2722": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5532,
        5566
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2727": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5532,
        5555
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BE4"
    },
    "2730": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5532,
        5566
      ],
      "op": "AND",
      "path": "15"
    },
    "2731": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5532,
        5566
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2732": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5532,
        5566
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2733": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2735": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2736": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2737": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5619,
        5620
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2739": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2740": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2741": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2742": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2744": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2745": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "ADD",
      "path": "15"
    },
    "2746": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2747": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2748": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2749": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5581,
        5602
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2751": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5581,
        5602
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2752": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2754": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2755": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "ADD",
      "path": "15"
    },
    "2756": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5581,
        5602
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2757": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5581,
        5602
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2758": {
      "op": "CODESIZE"
    },
    "2759": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2760": {
      "op": "CODECOPY"
    },
    "2761": {
      "op": "ADD"
    },
    "2762": {
      "op": "SWAP1"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5605,
        5621
      ],
      "op": "POP",
      "path": "15"
    },
    "2765": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5581,
        5621
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2766": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5581,
        5621
      ],
      "op": "POP",
      "path": "15"
    },
    "2767": {
      "offset": [
        864,
        906
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "2788": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5639
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 14
    },
    "2789": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5640,
        5641
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2791": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2792": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2793": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2794": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "LT",
      "path": "15"
    },
    "2795": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAF0"
    },
    "2798": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2799": {
      "dev": "Index out of range",
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2800": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2801": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2803": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "MUL",
      "path": "15"
    },
    "2804": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2806": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "ADD",
      "path": "15"
    },
    "2807": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5642
      ],
      "op": "ADD",
      "path": "15"
    },
    "2808": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2815": {
      "op": "SHL"
    },
    "2816": {
      "op": "SUB"
    },
    "2817": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "AND",
      "path": "15"
    },
    "2818": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2819": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2826": {
      "op": "SHL"
    },
    "2827": {
      "op": "SUB"
    },
    "2828": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "AND",
      "path": "15"
    },
    "2829": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2830": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2831": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "POP",
      "path": "15"
    },
    "2832": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5635,
        5648
      ],
      "op": "POP",
      "path": "15"
    },
    "2833": {
      "offset": [
        1039,
        1081
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "2854": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5666
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 15
    },
    "2855": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5667,
        5668
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2857": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2858": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2859": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2860": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "LT",
      "path": "15"
    },
    "2861": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB32"
    },
    "2864": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2865": {
      "dev": "Index out of range",
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2866": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2867": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2869": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "MUL",
      "path": "15"
    },
    "2870": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2872": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "ADD",
      "path": "15"
    },
    "2873": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5669
      ],
      "op": "ADD",
      "path": "15"
    },
    "2874": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2881": {
      "op": "SHL"
    },
    "2882": {
      "op": "SUB"
    },
    "2883": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "AND",
      "path": "15"
    },
    "2884": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2885": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "AND",
      "path": "15"
    },
    "2895": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2896": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2897": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "POP",
      "path": "15"
    },
    "2898": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5662,
        5676
      ],
      "op": "POP",
      "path": "15"
    },
    "2899": {
      "offset": [
        1164,
        1206
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "2920": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5694
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 16
    },
    "2921": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5695,
        5696
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "2923": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2924": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2925": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2926": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "LT",
      "path": "15"
    },
    "2927": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB74"
    },
    "2930": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2931": {
      "dev": "Index out of range",
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "INVALID",
      "path": "15"
    },
    "2932": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "op": "SUB"
    },
    "2941": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5703
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2942": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5703
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2943": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5703
      ],
      "op": "AND",
      "path": "15"
    },
    "2944": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2946": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2947": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2948": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "MUL",
      "path": "15"
    },
    "2949": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2950": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2951": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2952": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "ADD",
      "path": "15"
    },
    "2953": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2954": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2955": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5697
      ],
      "op": "ADD",
      "path": "15"
    },
    "2956": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5690,
        5703
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2957": {
      "offset": [
        951,
        993
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "2978": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5751
      ],
      "op": "PUSH4",
      "path": "15",
      "statement": 17,
      "value": "0x38ED1739"
    },
    "2983": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5752,
        5756
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2984": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5766,
        5767
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2986": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2987": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5784,
        5788
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "2988": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5791,
        5804
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBBD"
    },
    "2991": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5791,
        5794
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2992": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5799,
        5803
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x708"
    },
    "2995": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5791,
        5804
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3000": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5791,
        5798
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A98"
    },
    "3003": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5791,
        5804
      ],
      "op": "AND",
      "path": "15"
    },
    "3004": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5791,
        5804
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3005": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5791,
        5804
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3006": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3008": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3009": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3010": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3015": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "AND",
      "path": "15"
    },
    "3016": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3018": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "SHL",
      "path": "15"
    },
    "3019": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3020": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3021": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3023": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3024": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3025": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3026": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3027": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3028": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3030": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3031": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3032": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3033": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3034": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3036": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3037": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3038": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3040": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3041": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3048": {
      "op": "SHL"
    },
    "3049": {
      "op": "SUB"
    },
    "3050": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "AND",
      "path": "15"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "op": "SUB"
    },
    "3059": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "AND",
      "path": "15"
    },
    "3060": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3061": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3062": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3064": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3065": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3066": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3067": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3068": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3070": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3071": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3072": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3073": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "SUB",
      "path": "15"
    },
    "3074": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3075": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3076": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3077": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3078": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3079": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3080": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3081": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3082": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3084": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3085": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3086": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3087": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3088": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3089": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3090": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3092": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3093": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3094": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3096": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MUL",
      "path": "15"
    },
    "3097": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3098": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3099": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3102": {
      "op": "JUMPDEST"
    },
    "3103": {
      "op": "DUP4"
    },
    "3104": {
      "op": "DUP2"
    },
    "3105": {
      "op": "LT"
    },
    "3106": {
      "op": "ISZERO"
    },
    "3107": {
      "op": "PUSH2",
      "value": "0xC36"
    },
    "3110": {
      "op": "JUMPI"
    },
    "3111": {
      "op": "DUP2"
    },
    "3112": {
      "op": "DUP2"
    },
    "3113": {
      "op": "ADD"
    },
    "3114": {
      "op": "MLOAD"
    },
    "3115": {
      "op": "DUP4"
    },
    "3116": {
      "op": "DUP3"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "op": "MSTORE"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3121": {
      "op": "ADD"
    },
    "3122": {
      "op": "PUSH2",
      "value": "0xC1E"
    },
    "3125": {
      "op": "JUMP"
    },
    "3126": {
      "op": "JUMPDEST"
    },
    "3127": {
      "op": "POP"
    },
    "3128": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3129": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3130": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3131": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3132": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3133": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ADD",
      "path": "15"
    },
    "3134": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "3135": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3136": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3137": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3138": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3139": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3140": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3141": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3142": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3144": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3146": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3147": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3148": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3149": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "SUB",
      "path": "15"
    },
    "3150": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3151": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3153": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3154": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3155": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3156": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3157": {
      "op": "DUP1"
    },
    "3158": {
      "op": "ISZERO"
    },
    "3159": {
      "op": "PUSH2",
      "value": "0xC5F"
    },
    "3162": {
      "op": "JUMPI"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3165": {
      "op": "DUP1"
    },
    "3166": {
      "op": "REVERT"
    },
    "3167": {
      "op": "JUMPDEST"
    },
    "3168": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3169": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "GAS",
      "path": "15"
    },
    "3170": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "CALL",
      "path": "15"
    },
    "3171": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3172": {
      "op": "DUP1"
    },
    "3173": {
      "op": "ISZERO"
    },
    "3174": {
      "op": "PUSH2",
      "value": "0xC73"
    },
    "3177": {
      "op": "JUMPI"
    },
    "3178": {
      "op": "RETURNDATASIZE"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3181": {
      "op": "DUP1"
    },
    "3182": {
      "op": "RETURNDATACOPY"
    },
    "3183": {
      "op": "RETURNDATASIZE"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3186": {
      "op": "REVERT"
    },
    "3187": {
      "op": "JUMPDEST"
    },
    "3188": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3189": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3190": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3191": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5718,
        5805
      ],
      "op": "POP",
      "path": "15"
    },
    "3192": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5298,
        5816
      ],
      "op": "POP",
      "path": "15"
    },
    "3193": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5298,
        5816
      ],
      "op": "POP",
      "path": "15"
    },
    "3194": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5298,
        5816
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3195": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3197": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3198": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3199": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3208": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3209": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5870,
        5874
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "3210": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3212": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3213": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "ADD",
      "path": "15"
    },
    "3214": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3215": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3216": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3217": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5825,
        5837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3219": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5825,
        5837
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3220": {
      "offset": [
        1164,
        1206
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3241": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1164,
        1206
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3242": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5861
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "3247": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5861
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3248": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3250": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3251": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3252": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "ADD",
      "path": "15"
    },
    "3253": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3254": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3256": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3257": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3258": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3259": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3260": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3261": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3262": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SUB",
      "path": "15"
    },
    "3263": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "ADD",
      "path": "15"
    },
    "3264": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3265": {
      "offset": [
        1164,
        1206
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3266": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3267": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3268": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3269": {
      "op": "DUP1"
    },
    "3270": {
      "op": "ISZERO"
    },
    "3271": {
      "op": "PUSH2",
      "value": "0xCCF"
    },
    "3274": {
      "op": "JUMPI"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3277": {
      "op": "DUP1"
    },
    "3278": {
      "op": "REVERT"
    },
    "3279": {
      "op": "JUMPDEST"
    },
    "3280": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "POP",
      "path": "15"
    },
    "3281": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "GAS",
      "path": "15"
    },
    "3282": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "3283": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3284": {
      "op": "DUP1"
    },
    "3285": {
      "op": "ISZERO"
    },
    "3286": {
      "op": "PUSH2",
      "value": "0xCE3"
    },
    "3289": {
      "op": "JUMPI"
    },
    "3290": {
      "op": "RETURNDATASIZE"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3293": {
      "op": "DUP1"
    },
    "3294": {
      "op": "RETURNDATACOPY"
    },
    "3295": {
      "op": "RETURNDATASIZE"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3298": {
      "op": "REVERT"
    },
    "3299": {
      "op": "JUMPDEST"
    },
    "3300": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "POP",
      "path": "15"
    },
    "3301": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "POP",
      "path": "15"
    },
    "3302": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "POP",
      "path": "15"
    },
    "3303": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "POP",
      "path": "15"
    },
    "3304": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3306": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3307": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3310": {
      "op": "DUP2"
    },
    "3311": {
      "op": "LT"
    },
    "3312": {
      "op": "ISZERO"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0xCF9"
    },
    "3316": {
      "op": "JUMPI"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "REVERT"
    },
    "3321": {
      "op": "JUMPDEST"
    },
    "3322": {
      "op": "POP"
    },
    "3323": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3324": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5840,
        5876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3325": {
      "op": "POP"
    },
    "3326": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5890,
        5898
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3327": {
      "branch": 76,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5890,
        5898
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3328": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5886,
        6046
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDE9"
    },
    "3331": {
      "branch": 76,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5886,
        6046
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3332": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5914,
        5946
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 18,
      "value": "0xD3D"
    },
    "3335": {
      "offset": [
        1164,
        1206
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3356": {
      "offset": [
        1252,
        1294
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3377": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5944,
        5945
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3379": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5914,
        5946
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3384": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5914,
        5937
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BE4"
    },
    "3387": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5914,
        5946
      ],
      "op": "AND",
      "path": "15"
    },
    "3388": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5914,
        5946
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3389": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5914,
        5946
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3390": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5960,
        5995
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 19,
      "value": "0xD76"
    },
    "3393": {
      "offset": [
        1164,
        1206
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "3414": {
      "offset": [
        1252,
        1294
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3435": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5990,
        5994
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3436": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5960,
        5995
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3441": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5960,
        5983
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BE4"
    },
    "3444": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5960,
        5995
      ],
      "op": "AND",
      "path": "15"
    },
    "3445": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        5960,
        5995
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3446": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5960,
        5995
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3447": {
      "offset": [
        1252,
        1294
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3474": {
      "op": "SHL"
    },
    "3475": {
      "op": "SUB"
    },
    "3476": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6029
      ],
      "op": "AND",
      "path": "15",
      "statement": 20
    },
    "3477": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6029
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xB6B55F25"
    },
    "3482": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6030,
        6034
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3483": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3485": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3486": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3487": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3492": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "AND",
      "path": "15"
    },
    "3493": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3495": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "SHL",
      "path": "15"
    },
    "3496": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3497": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3498": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3500": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "ADD",
      "path": "15"
    },
    "3501": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3502": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3503": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3504": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3505": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3507": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "ADD",
      "path": "15"
    },
    "3508": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3509": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "POP",
      "path": "15"
    },
    "3510": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "POP",
      "path": "15"
    },
    "3511": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3513": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3515": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3516": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3517": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3518": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "SUB",
      "path": "15"
    },
    "3519": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3520": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3522": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3523": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3524": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3525": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3526": {
      "op": "DUP1"
    },
    "3527": {
      "op": "ISZERO"
    },
    "3528": {
      "op": "PUSH2",
      "value": "0xDD0"
    },
    "3531": {
      "op": "JUMPI"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3534": {
      "op": "DUP1"
    },
    "3535": {
      "op": "REVERT"
    },
    "3536": {
      "op": "JUMPDEST"
    },
    "3537": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "POP",
      "path": "15"
    },
    "3538": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "GAS",
      "path": "15"
    },
    "3539": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "CALL",
      "path": "15"
    },
    "3540": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3541": {
      "op": "DUP1"
    },
    "3542": {
      "op": "ISZERO"
    },
    "3543": {
      "op": "PUSH2",
      "value": "0xDE4"
    },
    "3546": {
      "op": "JUMPI"
    },
    "3547": {
      "op": "RETURNDATASIZE"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3550": {
      "op": "DUP1"
    },
    "3551": {
      "op": "RETURNDATACOPY"
    },
    "3552": {
      "op": "RETURNDATASIZE"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3555": {
      "op": "REVERT"
    },
    "3556": {
      "op": "JUMPDEST"
    },
    "3557": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "POP",
      "path": "15"
    },
    "3558": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "POP",
      "path": "15"
    },
    "3559": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "POP",
      "path": "15"
    },
    "3560": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6009,
        6035
      ],
      "op": "POP",
      "path": "15"
    },
    "3561": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5886,
        6046
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3562": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3564": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3565": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3566": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3573": {
      "op": "SHL"
    },
    "3574": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3575": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3576": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6102,
        6106
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "3577": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3579": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3580": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "ADD",
      "path": "15"
    },
    "3581": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3582": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3583": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3584": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6055,
        6068
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3586": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6055,
        6068
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3587": {
      "offset": [
        1252,
        1294
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3608": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        1252,
        1294
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3609": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6093
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "3614": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6093
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3615": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "3617": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3618": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3619": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "ADD",
      "path": "15"
    },
    "3620": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3621": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3623": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3624": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3625": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3626": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3627": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3628": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3629": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SUB",
      "path": "15"
    },
    "3630": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "ADD",
      "path": "15"
    },
    "3631": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3632": {
      "offset": [
        1252,
        1294
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3633": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3634": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3635": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3636": {
      "op": "DUP1"
    },
    "3637": {
      "op": "ISZERO"
    },
    "3638": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3641": {
      "op": "JUMPI"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3644": {
      "op": "DUP1"
    },
    "3645": {
      "op": "REVERT"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "POP",
      "path": "15"
    },
    "3648": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "GAS",
      "path": "15"
    },
    "3649": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "3650": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3651": {
      "op": "DUP1"
    },
    "3652": {
      "op": "ISZERO"
    },
    "3653": {
      "op": "PUSH2",
      "value": "0xE52"
    },
    "3656": {
      "op": "JUMPI"
    },
    "3657": {
      "op": "RETURNDATASIZE"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3660": {
      "op": "DUP1"
    },
    "3661": {
      "op": "RETURNDATACOPY"
    },
    "3662": {
      "op": "RETURNDATASIZE"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3665": {
      "op": "REVERT"
    },
    "3666": {
      "op": "JUMPDEST"
    },
    "3667": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "POP",
      "path": "15"
    },
    "3668": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "POP",
      "path": "15"
    },
    "3669": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "POP",
      "path": "15"
    },
    "3670": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "POP",
      "path": "15"
    },
    "3671": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3673": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3674": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3677": {
      "op": "DUP2"
    },
    "3678": {
      "op": "LT"
    },
    "3679": {
      "op": "ISZERO"
    },
    "3680": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3683": {
      "op": "JUMPI"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3686": {
      "op": "DUP1"
    },
    "3687": {
      "op": "REVERT"
    },
    "3688": {
      "op": "JUMPDEST"
    },
    "3689": {
      "op": "POP"
    },
    "3690": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3691": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6071,
        6108
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3692": {
      "op": "POP"
    },
    "3693": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6122,
        6131
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3694": {
      "branch": 77,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6122,
        6131
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3695": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6118,
        6308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFA9"
    },
    "3698": {
      "branch": 77,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6118,
        6308
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3699": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6181
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 21,
      "value": "0xEAC"
    },
    "3702": {
      "offset": [
        1252,
        1294
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3723": {
      "offset": [
        1341,
        1383
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51"
    },
    "3744": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6179,
        6180
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3746": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6181
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3751": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BE4"
    },
    "3754": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6181
      ],
      "op": "AND",
      "path": "15"
    },
    "3755": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6147,
        6181
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3756": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6147,
        6181
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3757": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6195,
        6233
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 22,
      "value": "0xEE5"
    },
    "3760": {
      "offset": [
        1252,
        1294
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "3781": {
      "offset": [
        1341,
        1383
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51"
    },
    "3802": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6227,
        6232
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3803": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6195,
        6233
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3808": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6195,
        6219
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BE4"
    },
    "3811": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6195,
        6233
      ],
      "op": "AND",
      "path": "15"
    },
    "3812": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6195,
        6233
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3813": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6195,
        6233
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3814": {
      "offset": [
        1341,
        1383
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3841": {
      "op": "SHL"
    },
    "3842": {
      "op": "SUB"
    },
    "3843": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6276
      ],
      "op": "AND",
      "path": "15",
      "statement": 23
    },
    "3844": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6276
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x29B2F34"
    },
    "3849": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3851": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3852": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3853": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "3855": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ADD",
      "path": "15"
    },
    "3856": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3858": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3859": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3860": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6278,
        6283
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3861": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3862": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3863": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3865": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ADD",
      "path": "15"
    },
    "3866": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6285,
        6286
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3868": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3869": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3870": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3872": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ADD",
      "path": "15"
    },
    "3873": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6288,
        6289
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3875": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3876": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3877": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3879": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ADD",
      "path": "15"
    },
    "3880": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6291,
        6292
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3882": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3883": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3884": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3885": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6295,
        6296
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3887": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3889": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3890": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3891": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3896": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "AND",
      "path": "15"
    },
    "3897": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3899": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "SHL",
      "path": "15"
    },
    "3900": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3901": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3902": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3904": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ADD",
      "path": "15"
    },
    "3905": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3906": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3907": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3909": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3911": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MUL",
      "path": "15"
    },
    "3912": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3913": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3914": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3917": {
      "op": "JUMPDEST"
    },
    "3918": {
      "op": "DUP4"
    },
    "3919": {
      "op": "DUP2"
    },
    "3920": {
      "op": "LT"
    },
    "3921": {
      "op": "ISZERO"
    },
    "3922": {
      "op": "PUSH2",
      "value": "0xF65"
    },
    "3925": {
      "op": "JUMPI"
    },
    "3926": {
      "op": "DUP2"
    },
    "3927": {
      "op": "DUP2"
    },
    "3928": {
      "op": "ADD"
    },
    "3929": {
      "op": "MLOAD"
    },
    "3930": {
      "op": "DUP4"
    },
    "3931": {
      "op": "DUP3"
    },
    "3932": {
      "op": "ADD"
    },
    "3933": {
      "op": "MSTORE"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3936": {
      "op": "ADD"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0xF4D"
    },
    "3940": {
      "op": "JUMP"
    },
    "3941": {
      "op": "JUMPDEST"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3944": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3945": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3946": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3947": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3948": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ADD",
      "path": "15"
    },
    "3949": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3950": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3951": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3952": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3954": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ADD",
      "path": "15"
    },
    "3955": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3956": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3957": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3958": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3959": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3961": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3963": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3964": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3965": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3966": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "SUB",
      "path": "15"
    },
    "3967": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3968": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3970": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3971": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3972": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "3973": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3974": {
      "op": "DUP1"
    },
    "3975": {
      "op": "ISZERO"
    },
    "3976": {
      "op": "PUSH2",
      "value": "0xF90"
    },
    "3979": {
      "op": "JUMPI"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3982": {
      "op": "DUP1"
    },
    "3983": {
      "op": "REVERT"
    },
    "3984": {
      "op": "JUMPDEST"
    },
    "3985": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "3986": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "GAS",
      "path": "15"
    },
    "3987": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "CALL",
      "path": "15"
    },
    "3988": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3989": {
      "op": "DUP1"
    },
    "3990": {
      "op": "ISZERO"
    },
    "3991": {
      "op": "PUSH2",
      "value": "0xFA4"
    },
    "3994": {
      "op": "JUMPI"
    },
    "3995": {
      "op": "RETURNDATASIZE"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3998": {
      "op": "DUP1"
    },
    "3999": {
      "op": "RETURNDATACOPY"
    },
    "4000": {
      "op": "RETURNDATASIZE"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4003": {
      "op": "REVERT"
    },
    "4004": {
      "op": "JUMPDEST"
    },
    "4005": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "4006": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "4007": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "4008": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "15"
    },
    "4009": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6118,
        6308
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4010": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4012": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4013": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4014": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4021": {
      "op": "SHL"
    },
    "4022": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4023": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4024": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6364,
        6368
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "4025": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4027": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4028": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "ADD",
      "path": "15"
    },
    "4029": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4030": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4031": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4032": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6317,
        6330
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4034": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6317,
        6330
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "MLOAD"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4041": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "4044": {
      "op": "DUP4"
    },
    "4045": {
      "op": "CODECOPY"
    },
    "4046": {
      "op": "DUP2"
    },
    "4047": {
      "op": "MLOAD"
    },
    "4048": {
      "op": "SWAP2"
    },
    "4049": {
      "op": "MSTORE"
    },
    "4050": {
      "offset": [
        777,
        819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4051": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6355
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "4056": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6355
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4057": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4059": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4060": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4061": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "ADD",
      "path": "15"
    },
    "4062": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4063": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4065": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4066": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4067": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4068": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4069": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4070": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4071": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SUB",
      "path": "15"
    },
    "4072": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "ADD",
      "path": "15"
    },
    "4073": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4074": {
      "offset": [
        777,
        819
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4075": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4076": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4077": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4078": {
      "op": "DUP1"
    },
    "4079": {
      "op": "ISZERO"
    },
    "4080": {
      "op": "PUSH2",
      "value": "0xFF8"
    },
    "4083": {
      "op": "JUMPI"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4086": {
      "op": "DUP1"
    },
    "4087": {
      "op": "REVERT"
    },
    "4088": {
      "op": "JUMPDEST"
    },
    "4089": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "POP",
      "path": "15"
    },
    "4090": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "GAS",
      "path": "15"
    },
    "4091": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "4092": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4093": {
      "op": "DUP1"
    },
    "4094": {
      "op": "ISZERO"
    },
    "4095": {
      "op": "PUSH2",
      "value": "0x100C"
    },
    "4098": {
      "op": "JUMPI"
    },
    "4099": {
      "op": "RETURNDATASIZE"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4102": {
      "op": "DUP1"
    },
    "4103": {
      "op": "RETURNDATACOPY"
    },
    "4104": {
      "op": "RETURNDATASIZE"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4107": {
      "op": "REVERT"
    },
    "4108": {
      "op": "JUMPDEST"
    },
    "4109": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "POP",
      "path": "15"
    },
    "4110": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "POP",
      "path": "15"
    },
    "4111": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "POP",
      "path": "15"
    },
    "4112": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "POP",
      "path": "15"
    },
    "4113": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4115": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4116": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4119": {
      "op": "DUP2"
    },
    "4120": {
      "op": "LT"
    },
    "4121": {
      "op": "ISZERO"
    },
    "4122": {
      "op": "PUSH2",
      "value": "0x1022"
    },
    "4125": {
      "op": "JUMPI"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4128": {
      "op": "DUP1"
    },
    "4129": {
      "op": "REVERT"
    },
    "4130": {
      "op": "JUMPDEST"
    },
    "4131": {
      "op": "POP"
    },
    "4132": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4133": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6333,
        6370
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4134": {
      "op": "POP"
    },
    "4135": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6384,
        6393
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4136": {
      "branch": 78,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6384,
        6393
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4137": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6380,
        6583
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x830"
    },
    "4140": {
      "branch": 78,
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6380,
        6583
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4141": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6409,
        6421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4143": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6469
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1049"
    },
    "4146": {
      "offset": [
        1825,
        1830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "4149": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x68A"
    },
    "4152": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6434,
        6448
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4154": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6434,
        6448
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4155": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6429
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4156": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6433
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AF2"
    },
    "4159": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6433
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4160": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6449
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4161": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6449
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4162": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6449
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4167": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6449
      ],
      "op": "AND",
      "path": "15"
    },
    "4168": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6424,
        6449
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4169": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6424,
        6469
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4170": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6409,
        6469
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4171": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6409,
        6469
      ],
      "op": "POP",
      "path": "15"
    },
    "4172": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6483,
        6549
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 24,
      "value": "0x109C"
    },
    "4175": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4177": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4179": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4180": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4181": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4182": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4185": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "EXP",
      "path": "15"
    },
    "4186": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4187": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "DIV",
      "path": "15"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4194": {
      "op": "SHL"
    },
    "4195": {
      "op": "SUB"
    },
    "4196": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6521,
        6531
      ],
      "op": "AND",
      "path": "15"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4203": {
      "op": "SHL"
    },
    "4204": {
      "op": "SUB"
    },
    "4205": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6540
      ],
      "op": "AND",
      "path": "15"
    },
    "4206": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6540
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9EC5A894"
    },
    "4211": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4213": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4214": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4215": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4220": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "AND",
      "path": "15"
    },
    "4221": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4223": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "SHL",
      "path": "15"
    },
    "4224": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4225": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4226": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4228": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "ADD",
      "path": "15"
    },
    "4229": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4231": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4233": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4234": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4235": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4236": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "SUB",
      "path": "15"
    },
    "4237": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4238": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4239": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4240": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4241": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6509,
        6542
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4242": {
      "op": "DUP1"
    },
    "4243": {
      "op": "ISZERO"
    },
    "4244": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "4247": {
      "op": "JUMPI"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4250": {
      "op": "DUP1"
    },
    "4251": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6483,
        6549
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4252": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6483,
        6549
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4253": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6563,
        6572
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 25,
      "value": "0x10A4"
    },
    "4256": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6563,
        6570
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17F8"
    },
    "4259": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "i",
      "offset": [
        6563,
        6572
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4260": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6563,
        6572
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4261": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        6380,
        6583
      ],
      "op": "POP",
      "path": "15"
    },
    "4262": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5073,
        6589
      ],
      "op": "POP",
      "path": "15"
    },
    "4263": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5073,
        6589
      ],
      "op": "POP",
      "path": "15"
    },
    "4264": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5073,
        6589
      ],
      "op": "POP",
      "path": "15"
    },
    "4265": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "offset": [
        5073,
        6589
      ],
      "op": "POP",
      "path": "15"
    },
    "4266": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "o",
      "offset": [
        5073,
        6589
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4267": {
      "offset": [
        1569,
        1652
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4268": {
      "offset": [
        1609,
        1651
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xF147B8125D2EF93FB6965DB97D6746952A133934"
    },
    "4289": {
      "offset": [
        1569,
        1652
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4290": {
      "fn": "StrategyCurveYVoterProxy.harvest",
      "jump": "o",
      "offset": [
        1569,
        1652
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4291": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4292": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3352,
        3362
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 26,
      "value": "0x4"
    },
    "4294": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3352,
        3362
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4295": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3303,
        3318
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4297": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3303,
        3318
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4304": {
      "op": "SHL"
    },
    "4305": {
      "op": "SUB"
    },
    "4306": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3352,
        3362
      ],
      "op": "AND",
      "path": "15"
    },
    "4307": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3338,
        3348
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4308": {
      "branch": 79,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3338,
        3362
      ],
      "op": "EQ",
      "path": "15"
    },
    "4309": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1113"
    },
    "4312": {
      "branch": 79,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4313": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4315": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4316": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4323": {
      "op": "SHL"
    },
    "4324": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4325": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4326": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4328": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4330": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4331": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "ADD",
      "path": "15"
    },
    "4332": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4333": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "4335": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4337": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4338": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "ADD",
      "path": "15"
    },
    "4339": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4340": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4354": {
      "op": "SHL"
    },
    "4355": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4357": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4358": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "ADD",
      "path": "15"
    },
    "4359": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4360": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4361": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4362": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4363": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4364": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4365": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "SUB",
      "path": "15"
    },
    "4366": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "4368": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "ADD",
      "path": "15"
    },
    "4369": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4370": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4371": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3330,
        3378
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4374": {
      "op": "DUP1"
    },
    "4375": {
      "op": "MLOAD"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4378": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "4381": {
      "op": "DUP4"
    },
    "4382": {
      "op": "CODECOPY"
    },
    "4383": {
      "op": "DUP2"
    },
    "4384": {
      "op": "MLOAD"
    },
    "4385": {
      "op": "SWAP2"
    },
    "4386": {
      "op": "MSTORE"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4393": {
      "op": "SHL"
    },
    "4394": {
      "op": "SUB"
    },
    "4395": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3396,
        3419
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 27
    },
    "4396": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3396,
        3419
      ],
      "op": "AND",
      "path": "15"
    },
    "4397": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3396,
        3419
      ],
      "op": "EQ",
      "path": "15"
    },
    "4398": {
      "branch": 80,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3396,
        3419
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4399": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1168"
    },
    "4402": {
      "branch": 80,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4403": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4405": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4406": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4413": {
      "op": "SHL"
    },
    "4414": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4415": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4416": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4418": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4420": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4421": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4422": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "ADD",
      "path": "15"
    },
    "4423": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4424": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4425": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4426": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4427": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4429": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4430": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "ADD",
      "path": "15"
    },
    "4431": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4432": {
      "op": "PUSH4",
      "value": "0x1DD85B9D"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4439": {
      "op": "SHL"
    },
    "4440": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4442": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4443": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "ADD",
      "path": "15"
    },
    "4444": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4445": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4446": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4447": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4448": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4449": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4450": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "SUB",
      "path": "15"
    },
    "4451": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "4453": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "ADD",
      "path": "15"
    },
    "4454": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4455": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4456": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3388,
        3428
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4457": {
      "offset": [
        864,
        906
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4484": {
      "op": "SHL"
    },
    "4485": {
      "op": "SUB"
    },
    "4486": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3446,
        3468
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 28
    },
    "4487": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3446,
        3468
      ],
      "op": "AND",
      "path": "15"
    },
    "4488": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3446,
        3468
      ],
      "op": "EQ",
      "path": "15"
    },
    "4489": {
      "branch": 81,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3446,
        3468
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4490": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11C0"
    },
    "4493": {
      "branch": 81,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4494": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4496": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4497": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4504": {
      "op": "SHL"
    },
    "4505": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4506": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4507": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4509": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4511": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4512": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "ADD",
      "path": "15"
    },
    "4513": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4514": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4516": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4518": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4519": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "ADD",
      "path": "15"
    },
    "4520": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4521": {
      "op": "PUSH3",
      "value": "0x31B93B"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4530": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4531": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "ADD",
      "path": "15"
    },
    "4532": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4533": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4534": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4535": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4536": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4537": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4538": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "SUB",
      "path": "15"
    },
    "4539": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "4541": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "ADD",
      "path": "15"
    },
    "4542": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4543": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4544": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3438,
        3476
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4545": {
      "offset": [
        1252,
        1294
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x16DE59092DAE5CCF4A1E6439D611FD0653F0BD01"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "op": "SUB"
    },
    "4574": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3494,
        3517
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 29
    },
    "4575": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3494,
        3517
      ],
      "op": "AND",
      "path": "15"
    },
    "4576": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3494,
        3517
      ],
      "op": "EQ",
      "path": "15"
    },
    "4577": {
      "branch": 82,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3494,
        3517
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4578": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x121B"
    },
    "4581": {
      "branch": 82,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4582": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4584": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4585": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4592": {
      "op": "SHL"
    },
    "4593": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4594": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4595": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4597": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4599": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4600": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4601": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "ADD",
      "path": "15"
    },
    "4602": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4603": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4604": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4605": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4606": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4608": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4609": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "ADD",
      "path": "15"
    },
    "4610": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4611": {
      "op": "PUSH4",
      "value": "0x79646169"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4618": {
      "op": "SHL"
    },
    "4619": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4621": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4622": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "ADD",
      "path": "15"
    },
    "4623": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4624": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4625": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4626": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4627": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4628": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4629": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "SUB",
      "path": "15"
    },
    "4630": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "4632": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "ADD",
      "path": "15"
    },
    "4633": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4634": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4635": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3486,
        3526
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4636": {
      "offset": [
        1164,
        1206
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4663": {
      "op": "SHL"
    },
    "4664": {
      "op": "SUB"
    },
    "4665": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3544,
        3566
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 30
    },
    "4666": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3544,
        3566
      ],
      "op": "AND",
      "path": "15"
    },
    "4667": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3544,
        3566
      ],
      "op": "EQ",
      "path": "15"
    },
    "4668": {
      "branch": 83,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3544,
        3566
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4669": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1273"
    },
    "4672": {
      "branch": 83,
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4673": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4675": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4676": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4683": {
      "op": "SHL"
    },
    "4684": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4685": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4686": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4688": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4690": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4691": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "ADD",
      "path": "15"
    },
    "4692": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4693": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4695": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4697": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4698": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "ADD",
      "path": "15"
    },
    "4699": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4700": {
      "op": "PUSH3",
      "value": "0x646169"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4706": {
      "op": "SHL"
    },
    "4707": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4709": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4710": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "ADD",
      "path": "15"
    },
    "4711": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4712": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4713": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4714": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4715": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4716": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4717": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "SUB",
      "path": "15"
    },
    "4718": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "4720": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "ADD",
      "path": "15"
    },
    "4721": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4722": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4723": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3536,
        3574
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4724": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 31,
      "value": "0x40"
    },
    "4726": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4727": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4728": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4735": {
      "op": "SHL"
    },
    "4736": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4737": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4738": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3619,
        3623
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "4739": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4741": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4742": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "ADD",
      "path": "15"
    },
    "4743": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4744": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4745": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4752": {
      "op": "SHL"
    },
    "4753": {
      "op": "SUB"
    },
    "4754": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3610
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4755": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3610
      ],
      "op": "AND",
      "path": "15"
    },
    "4756": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3610
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4757": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3610
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "4762": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3610
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4763": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4765": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4766": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4767": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "ADD",
      "path": "15"
    },
    "4768": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4769": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4771": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4772": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4773": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4774": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4775": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4776": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SUB",
      "path": "15"
    },
    "4777": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "ADD",
      "path": "15"
    },
    "4778": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4779": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3610
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4780": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4781": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4782": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4783": {
      "op": "DUP1"
    },
    "4784": {
      "op": "ISZERO"
    },
    "4785": {
      "op": "PUSH2",
      "value": "0x12B9"
    },
    "4788": {
      "op": "JUMPI"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4791": {
      "op": "DUP1"
    },
    "4792": {
      "op": "REVERT"
    },
    "4793": {
      "op": "JUMPDEST"
    },
    "4794": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "POP",
      "path": "15"
    },
    "4795": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "GAS",
      "path": "15"
    },
    "4796": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "4797": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4798": {
      "op": "DUP1"
    },
    "4799": {
      "op": "ISZERO"
    },
    "4800": {
      "op": "PUSH2",
      "value": "0x12CD"
    },
    "4803": {
      "op": "JUMPI"
    },
    "4804": {
      "op": "RETURNDATASIZE"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4807": {
      "op": "DUP1"
    },
    "4808": {
      "op": "RETURNDATACOPY"
    },
    "4809": {
      "op": "RETURNDATASIZE"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4812": {
      "op": "REVERT"
    },
    "4813": {
      "op": "JUMPDEST"
    },
    "4814": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "POP",
      "path": "15"
    },
    "4815": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "POP",
      "path": "15"
    },
    "4816": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "POP",
      "path": "15"
    },
    "4817": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "POP",
      "path": "15"
    },
    "4818": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4820": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4821": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4824": {
      "op": "DUP2"
    },
    "4825": {
      "op": "LT"
    },
    "4826": {
      "op": "ISZERO"
    },
    "4827": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "4830": {
      "op": "JUMPI"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4833": {
      "op": "DUP1"
    },
    "4834": {
      "op": "REVERT"
    },
    "4835": {
      "op": "JUMPDEST"
    },
    "4836": {
      "op": "POP"
    },
    "4837": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4838": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3655,
        3665
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 32,
      "value": "0x4"
    },
    "4840": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3655,
        3665
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4841": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4842": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4843": {
      "op": "POP"
    },
    "4844": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3675
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1308"
    },
    "4847": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3675
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4854": {
      "op": "SHL"
    },
    "4855": {
      "op": "SUB"
    },
    "4856": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3654
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4857": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3654
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4858": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3654
      ],
      "op": "AND",
      "path": "15"
    },
    "4859": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3654
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4860": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3655,
        3665
      ],
      "op": "AND",
      "path": "15"
    },
    "4861": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3594,
        3625
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4862": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3675
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4867": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3654
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B8D"
    },
    "4870": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3675
      ],
      "op": "AND",
      "path": "15"
    },
    "4871": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "i",
      "offset": [
        3635,
        3675
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4872": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3635,
        3675
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4873": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4874": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4875": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        3252,
        3682
      ],
      "op": "POP",
      "path": "15"
    },
    "4876": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        3252,
        3682
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4877": {
      "offset": [
        1928,
        1953
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4878": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1928,
        1953
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4880": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1928,
        1953
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4887": {
      "op": "SHL"
    },
    "4888": {
      "op": "SUB"
    },
    "4889": {
      "offset": [
        1928,
        1953
      ],
      "op": "AND",
      "path": "15"
    },
    "4890": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "offset": [
        1928,
        1953
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4891": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        1928,
        1953
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4892": {
      "offset": [
        826,
        907
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4893": {
      "offset": [
        864,
        906
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xD533A949740BB3306D119CC777FA900BA034CD52"
    },
    "4914": {
      "offset": [
        826,
        907
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4915": {
      "fn": "StrategyCurveYVoterProxy.withdraw",
      "jump": "o",
      "offset": [
        826,
        907
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4916": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2762,
        2930
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4917": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2855,
        2865
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 33,
      "value": "0x3"
    },
    "4919": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2855,
        2865
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4926": {
      "op": "SHL"
    },
    "4927": {
      "op": "SUB"
    },
    "4928": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2855,
        2865
      ],
      "op": "AND",
      "path": "15"
    },
    "4929": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2841,
        2851
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4930": {
      "branch": 84,
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2841,
        2865
      ],
      "op": "EQ",
      "path": "15"
    },
    "4931": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1381"
    },
    "4934": {
      "branch": 84,
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4935": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4937": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4938": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4945": {
      "op": "SHL"
    },
    "4946": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4947": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4948": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4950": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4952": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4953": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "ADD",
      "path": "15"
    },
    "4954": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4955": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "4957": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4959": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4960": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "ADD",
      "path": "15"
    },
    "4961": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4962": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4976": {
      "op": "SHL"
    },
    "4977": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4979": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4980": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "ADD",
      "path": "15"
    },
    "4981": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4982": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4983": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4984": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4985": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4986": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4987": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "SUB",
      "path": "15"
    },
    "4988": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "4990": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "ADD",
      "path": "15"
    },
    "4991": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4992": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4993": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2833,
        2881
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4994": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2891,
        2905
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 34,
      "value": "0x1"
    },
    "4996": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "offset": [
        2891,
        2923
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4997": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "jump": "o",
      "offset": [
        2762,
        2930
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4998": {
      "offset": [
        1301,
        1384
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4999": {
      "offset": [
        1341,
        1383
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x45F783CCE6B7FF23B2AB2D70E416CDB7D6055F51"
    },
    "5020": {
      "offset": [
        1301,
        1384
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5021": {
      "fn": "StrategyCurveYVoterProxy.setPerformanceFee",
      "jump": "o",
      "offset": [
        1301,
        1384
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5022": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        6981,
        7092
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5023": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7023,
        7030
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5025": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7085
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 35,
      "value": "0x13BF"
    },
    "5028": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7069,
        7084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13AB"
    },
    "5031": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7069,
        7082
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47C"
    },
    "5034": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7069,
        7084
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5035": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7069,
        7084
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5036": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7064
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13B3"
    },
    "5039": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7062
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x173A"
    },
    "5042": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7049,
        7064
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5043": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7064
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5044": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7068
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5045": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7085
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "5050": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7068
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A98"
    },
    "5053": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7085
      ],
      "op": "AND",
      "path": "15"
    },
    "5054": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "i",
      "offset": [
        7049,
        7085
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5055": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7049,
        7085
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5056": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7042,
        7085
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5057": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        7042,
        7085
      ],
      "op": "POP",
      "path": "15"
    },
    "5058": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        6981,
        7092
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5059": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        6981,
        7092
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5060": {
      "offset": [
        1784,
        1830
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5061": {
      "offset": [
        1825,
        1830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "5064": {
      "offset": [
        1784,
        1830
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5065": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        1784,
        1830
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5066": {
      "offset": [
        1659,
        1688
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5067": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1659,
        1688
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5069": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1659,
        1688
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5070": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "offset": [
        1659,
        1688
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5071": {
      "fn": "StrategyCurveYVoterProxy.balanceOf",
      "jump": "o",
      "offset": [
        1659,
        1688
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5072": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4538,
        4969
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5073": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4628,
        4638
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 36,
      "value": "0x4"
    },
    "5075": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4628,
        4638
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5076": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4579,
        4594
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5078": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4579,
        4594
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5085": {
      "op": "SHL"
    },
    "5086": {
      "op": "SUB"
    },
    "5087": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4628,
        4638
      ],
      "op": "AND",
      "path": "15"
    },
    "5088": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4614,
        4624
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5089": {
      "branch": 85,
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4614,
        4638
      ],
      "op": "EQ",
      "path": "15"
    },
    "5090": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1420"
    },
    "5093": {
      "branch": 85,
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5094": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5096": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5097": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5098": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5104": {
      "op": "SHL"
    },
    "5105": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5106": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5107": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5109": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5111": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5112": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "ADD",
      "path": "15"
    },
    "5113": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5114": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "5116": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5118": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5119": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "ADD",
      "path": "15"
    },
    "5120": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5121": {
      "op": "PUSH11",
      "value": "0x10B1B7B73A3937B63632B9"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5135": {
      "op": "SHL"
    },
    "5136": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5138": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5139": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "ADD",
      "path": "15"
    },
    "5140": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5141": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5142": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5143": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5144": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5145": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5146": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "SUB",
      "path": "15"
    },
    "5147": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "5149": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "ADD",
      "path": "15"
    },
    "5150": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5151": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5152": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4606,
        4654
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5153": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4664,
        4678
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 37,
      "value": "0x1428"
    },
    "5156": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4664,
        4676
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CF7"
    },
    "5159": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        4664,
        4678
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5160": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4664,
        4678
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5161": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 38,
      "value": "0x40"
    },
    "5163": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5164": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5165": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5172": {
      "op": "SHL"
    },
    "5173": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5174": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5175": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4730,
        4734
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "5176": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5178": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5179": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "ADD",
      "path": "15"
    },
    "5180": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5181": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5182": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5185": {
      "op": "DUP1"
    },
    "5186": {
      "op": "MLOAD"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "5192": {
      "op": "DUP4"
    },
    "5193": {
      "op": "CODECOPY"
    },
    "5194": {
      "op": "DUP2"
    },
    "5195": {
      "op": "MLOAD"
    },
    "5196": {
      "op": "SWAP2"
    },
    "5197": {
      "op": "MSTORE"
    },
    "5198": {
      "offset": [
        777,
        819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5199": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4721
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "5204": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4721
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5205": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5207": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5208": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5209": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "ADD",
      "path": "15"
    },
    "5210": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5211": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5213": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5214": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5215": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5216": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5217": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5218": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SUB",
      "path": "15"
    },
    "5219": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "ADD",
      "path": "15"
    },
    "5220": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5221": {
      "offset": [
        777,
        819
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5222": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5223": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "5224": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5225": {
      "op": "DUP1"
    },
    "5226": {
      "op": "ISZERO"
    },
    "5227": {
      "op": "PUSH2",
      "value": "0x1473"
    },
    "5230": {
      "op": "JUMPI"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5233": {
      "op": "DUP1"
    },
    "5234": {
      "op": "REVERT"
    },
    "5235": {
      "op": "JUMPDEST"
    },
    "5236": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "POP",
      "path": "15"
    },
    "5237": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "GAS",
      "path": "15"
    },
    "5238": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "5239": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5240": {
      "op": "DUP1"
    },
    "5241": {
      "op": "ISZERO"
    },
    "5242": {
      "op": "PUSH2",
      "value": "0x1487"
    },
    "5245": {
      "op": "JUMPI"
    },
    "5246": {
      "op": "RETURNDATASIZE"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5249": {
      "op": "DUP1"
    },
    "5250": {
      "op": "RETURNDATACOPY"
    },
    "5251": {
      "op": "RETURNDATASIZE"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5254": {
      "op": "REVERT"
    },
    "5255": {
      "op": "JUMPDEST"
    },
    "5256": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "POP",
      "path": "15"
    },
    "5257": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "POP",
      "path": "15"
    },
    "5258": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "POP",
      "path": "15"
    },
    "5259": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "POP",
      "path": "15"
    },
    "5260": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5262": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5263": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5266": {
      "op": "DUP2"
    },
    "5267": {
      "op": "LT"
    },
    "5268": {
      "op": "ISZERO"
    },
    "5269": {
      "op": "PUSH2",
      "value": "0x149D"
    },
    "5272": {
      "op": "JUMPI"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5275": {
      "op": "DUP1"
    },
    "5276": {
      "op": "REVERT"
    },
    "5277": {
      "op": "JUMPDEST"
    },
    "5278": {
      "op": "POP"
    },
    "5279": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5280": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4776,
        4786
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5282": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4776,
        4786
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5283": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4776,
        4786
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5284": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5286": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5287": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5288": {
      "op": "PUSH4",
      "value": "0x2988BB9F"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5295": {
      "op": "SHL"
    },
    "5296": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5297": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5300": {
      "op": "DUP1"
    },
    "5301": {
      "op": "MLOAD"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5304": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "5307": {
      "op": "DUP4"
    },
    "5308": {
      "op": "CODECOPY"
    },
    "5309": {
      "op": "DUP2"
    },
    "5310": {
      "op": "MLOAD"
    },
    "5311": {
      "op": "SWAP2"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5314": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5315": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "ADD",
      "path": "15"
    },
    "5316": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5317": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5318": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5319": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5320": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5321": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5322": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4747,
        4761
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5326": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4747,
        4761
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5333": {
      "op": "SHL"
    },
    "5334": {
      "op": "SUB"
    },
    "5335": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4776,
        4786
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5336": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4776,
        4786
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5337": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4776,
        4786
      ],
      "op": "AND",
      "path": "15"
    },
    "5338": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4776,
        4786
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5339": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4794
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xA622EE7C"
    },
    "5344": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4794
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5345": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5347": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5348": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5349": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "ADD",
      "path": "15"
    },
    "5350": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5351": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5353": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4699,
        4736
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5354": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5355": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5356": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5357": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5358": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SUB",
      "path": "15"
    },
    "5359": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "ADD",
      "path": "15"
    },
    "5360": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5361": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4776,
        4786
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5362": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5363": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "5364": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5365": {
      "op": "DUP1"
    },
    "5366": {
      "op": "ISZERO"
    },
    "5367": {
      "op": "PUSH2",
      "value": "0x14FF"
    },
    "5370": {
      "op": "JUMPI"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5373": {
      "op": "DUP1"
    },
    "5374": {
      "op": "REVERT"
    },
    "5375": {
      "op": "JUMPDEST"
    },
    "5376": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "POP",
      "path": "15"
    },
    "5377": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "GAS",
      "path": "15"
    },
    "5378": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "5379": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5380": {
      "op": "DUP1"
    },
    "5381": {
      "op": "ISZERO"
    },
    "5382": {
      "op": "PUSH2",
      "value": "0x1513"
    },
    "5385": {
      "op": "JUMPI"
    },
    "5386": {
      "op": "RETURNDATASIZE"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5389": {
      "op": "DUP1"
    },
    "5390": {
      "op": "RETURNDATACOPY"
    },
    "5391": {
      "op": "RETURNDATASIZE"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5394": {
      "op": "REVERT"
    },
    "5395": {
      "op": "JUMPDEST"
    },
    "5396": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "POP",
      "path": "15"
    },
    "5397": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "POP",
      "path": "15"
    },
    "5398": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "POP",
      "path": "15"
    },
    "5399": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "POP",
      "path": "15"
    },
    "5400": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5402": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5403": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5406": {
      "op": "DUP2"
    },
    "5407": {
      "op": "LT"
    },
    "5408": {
      "op": "ISZERO"
    },
    "5409": {
      "op": "PUSH2",
      "value": "0x1529"
    },
    "5412": {
      "op": "JUMPI"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5415": {
      "op": "DUP1"
    },
    "5416": {
      "op": "REVERT"
    },
    "5417": {
      "op": "JUMPDEST"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5420": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4764,
        4809
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5421": {
      "op": "POP"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5428": {
      "op": "SHL"
    },
    "5429": {
      "op": "SUB"
    },
    "5430": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4827,
        4847
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 39
    },
    "5431": {
      "branch": 86,
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4827,
        4847
      ],
      "op": "AND",
      "path": "15"
    },
    "5432": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1571"
    },
    "5435": {
      "branch": 86,
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5436": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5438": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5439": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5446": {
      "op": "SHL"
    },
    "5447": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5448": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5449": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5451": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5453": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5454": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "ADD",
      "path": "15"
    },
    "5455": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5456": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "5458": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5460": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5461": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "ADD",
      "path": "15"
    },
    "5462": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5463": {
      "op": "PUSH6",
      "value": "0x85D985D5B1D"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "5472": {
      "op": "SHL"
    },
    "5473": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5475": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5476": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "ADD",
      "path": "15"
    },
    "5477": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5478": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5479": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5480": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5481": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5482": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5483": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "SUB",
      "path": "15"
    },
    "5484": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "5486": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "ADD",
      "path": "15"
    },
    "5487": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5488": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5489": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4819,
        4858
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5490": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4920,
        4962
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 40,
      "value": "0x1590"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5495": {
      "op": "DUP1"
    },
    "5496": {
      "op": "MLOAD"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5499": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "5502": {
      "op": "DUP4"
    },
    "5503": {
      "op": "CODECOPY"
    },
    "5504": {
      "op": "DUP2"
    },
    "5505": {
      "op": "MLOAD"
    },
    "5506": {
      "op": "SWAP2"
    },
    "5507": {
      "op": "MSTORE"
    },
    "5508": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4946,
        4952
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5509": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4954,
        4961
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5510": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4920,
        4962
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "5515": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4920,
        4945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B8D"
    },
    "5518": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4920,
        4962
      ],
      "op": "AND",
      "path": "15"
    },
    "5519": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "i",
      "offset": [
        4920,
        4962
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5520": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4920,
        4962
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5521": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4538,
        4969
      ],
      "op": "POP",
      "path": "15"
    },
    "5522": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        4538,
        4969
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5523": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        4538,
        4969
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5524": {
      "offset": [
        1743,
        1778
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5525": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1743,
        1778
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5527": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1743,
        1778
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5528": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1743,
        1778
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5529": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1743,
        1778
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5530": {
      "offset": [
        1837,
        1870
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5531": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1837,
        1870
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2"
    },
    "5533": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1837,
        1870
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5534": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "offset": [
        1837,
        1870
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5535": {
      "fn": "StrategyCurveYVoterProxy.withdrawAll",
      "jump": "o",
      "offset": [
        1837,
        1870
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5536": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7256,
        7408
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5537": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7341,
        7351
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 41,
      "value": "0x3"
    },
    "5539": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7341,
        7351
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5546": {
      "op": "SHL"
    },
    "5547": {
      "op": "SUB"
    },
    "5548": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7341,
        7351
      ],
      "op": "AND",
      "path": "15"
    },
    "5549": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7327,
        7337
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5550": {
      "branch": 87,
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7327,
        7351
      ],
      "op": "EQ",
      "path": "15"
    },
    "5551": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15ED"
    },
    "5554": {
      "branch": 87,
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5555": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5557": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5558": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5559": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5565": {
      "op": "SHL"
    },
    "5566": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5567": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5568": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5570": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5572": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5573": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "ADD",
      "path": "15"
    },
    "5574": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5575": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "5577": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5579": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5580": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "ADD",
      "path": "15"
    },
    "5581": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5582": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5596": {
      "op": "SHL"
    },
    "5597": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5599": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5600": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "ADD",
      "path": "15"
    },
    "5601": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5602": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5603": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5604": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5605": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5606": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5607": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "SUB",
      "path": "15"
    },
    "5608": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "5610": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "ADD",
      "path": "15"
    },
    "5611": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5612": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5613": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7319,
        7367
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5614": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7387
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 42,
      "value": "0x4"
    },
    "5616": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5617": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5624": {
      "op": "SHL"
    },
    "5625": {
      "op": "SUB"
    },
    "5626": {
      "op": "NOT"
    },
    "5627": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "AND",
      "path": "15"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5634": {
      "op": "SHL"
    },
    "5635": {
      "op": "SUB"
    },
    "5636": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5637": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5638": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5639": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "AND",
      "path": "15"
    },
    "5640": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5641": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5642": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5643": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "OR",
      "path": "15"
    },
    "5644": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5645": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "offset": [
        7377,
        7401
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5646": {
      "fn": "StrategyCurveYVoterProxy.setController",
      "jump": "o",
      "offset": [
        7256,
        7408
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5647": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2446,
        2586
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5648": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2525,
        2535
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 43,
      "value": "0x3"
    },
    "5650": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2525,
        2535
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5657": {
      "op": "SHL"
    },
    "5658": {
      "op": "SUB"
    },
    "5659": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2525,
        2535
      ],
      "op": "AND",
      "path": "15"
    },
    "5660": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2511,
        2521
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5661": {
      "branch": 88,
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2511,
        2535
      ],
      "op": "EQ",
      "path": "15"
    },
    "5662": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x165C"
    },
    "5665": {
      "branch": 88,
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5666": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5668": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5669": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5670": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5676": {
      "op": "SHL"
    },
    "5677": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5678": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5679": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5681": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5683": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5684": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "ADD",
      "path": "15"
    },
    "5685": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5686": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "5688": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5690": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5691": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "ADD",
      "path": "15"
    },
    "5692": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5693": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5707": {
      "op": "SHL"
    },
    "5708": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5710": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5711": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "ADD",
      "path": "15"
    },
    "5712": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5713": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5714": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5715": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5716": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5717": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5718": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "SUB",
      "path": "15"
    },
    "5719": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "5721": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "ADD",
      "path": "15"
    },
    "5722": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5723": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5724": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2503,
        2551
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5725": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2561,
        2568
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 44,
      "value": "0x0"
    },
    "5727": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "offset": [
        2561,
        2579
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5728": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "jump": "o",
      "offset": [
        2446,
        2586
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5729": {
      "offset": [
        1391,
        1474
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5730": {
      "offset": [
        1431,
        1473
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "5751": {
      "offset": [
        1391,
        1474
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5752": {
      "fn": "StrategyCurveYVoterProxy.setKeepCRV",
      "jump": "o",
      "offset": [
        1391,
        1474
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5753": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7098,
        7250
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5754": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7183,
        7193
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 45,
      "value": "0x3"
    },
    "5756": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7183,
        7193
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5763": {
      "op": "SHL"
    },
    "5764": {
      "op": "SUB"
    },
    "5765": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7183,
        7193
      ],
      "op": "AND",
      "path": "15"
    },
    "5766": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7169,
        7179
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5767": {
      "branch": 89,
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7169,
        7193
      ],
      "op": "EQ",
      "path": "15"
    },
    "5768": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16C6"
    },
    "5771": {
      "branch": 89,
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5772": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5774": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5775": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5784": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5785": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5787": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5789": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5790": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "ADD",
      "path": "15"
    },
    "5791": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5792": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "5794": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5796": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5797": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "ADD",
      "path": "15"
    },
    "5798": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5799": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5813": {
      "op": "SHL"
    },
    "5814": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5816": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5817": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "ADD",
      "path": "15"
    },
    "5818": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5819": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5820": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5821": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5822": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5823": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5824": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "SUB",
      "path": "15"
    },
    "5825": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "5827": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "ADD",
      "path": "15"
    },
    "5828": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5829": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5830": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7161,
        7209
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5831": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7229
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 46,
      "value": "0x3"
    },
    "5833": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5834": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5841": {
      "op": "SHL"
    },
    "5842": {
      "op": "SUB"
    },
    "5843": {
      "op": "NOT"
    },
    "5844": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "AND",
      "path": "15"
    },
    "5845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5851": {
      "op": "SHL"
    },
    "5852": {
      "op": "SUB"
    },
    "5853": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5854": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5855": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5856": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "AND",
      "path": "15"
    },
    "5857": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5858": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5859": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5860": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "OR",
      "path": "15"
    },
    "5861": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5862": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "offset": [
        7219,
        7243
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5863": {
      "fn": "StrategyCurveYVoterProxy.setGovernance",
      "jump": "o",
      "offset": [
        7098,
        7250
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5864": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2592,
        2756
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5865": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2683,
        2693
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 47,
      "value": "0x3"
    },
    "5867": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2683,
        2693
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5874": {
      "op": "SHL"
    },
    "5875": {
      "op": "SUB"
    },
    "5876": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2683,
        2693
      ],
      "op": "AND",
      "path": "15"
    },
    "5877": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2669,
        2679
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5878": {
      "branch": 90,
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2669,
        2693
      ],
      "op": "EQ",
      "path": "15"
    },
    "5879": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1735"
    },
    "5882": {
      "branch": 90,
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5883": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5885": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5886": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5893": {
      "op": "SHL"
    },
    "5894": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5895": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5896": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5898": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5900": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5901": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "ADD",
      "path": "15"
    },
    "5902": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5903": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "5905": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5907": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5908": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "ADD",
      "path": "15"
    },
    "5909": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5910": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5924": {
      "op": "SHL"
    },
    "5925": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "5927": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5928": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "ADD",
      "path": "15"
    },
    "5929": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5930": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5931": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5932": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5933": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5934": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5935": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "SUB",
      "path": "15"
    },
    "5936": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "5938": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "ADD",
      "path": "15"
    },
    "5939": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5940": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5941": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2661,
        2709
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5942": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2719,
        2732
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 48,
      "value": "0x2"
    },
    "5944": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "offset": [
        2719,
        2749
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5945": {
      "fn": "StrategyCurveYVoterProxy.setWithdrawalFee",
      "jump": "o",
      "offset": [
        2592,
        2756
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5946": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6740,
        6856
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5947": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 49,
      "value": "0x40"
    },
    "5949": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5950": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5951": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5958": {
      "op": "SHL"
    },
    "5959": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5960": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5961": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6843,
        6847
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "5962": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "5964": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5965": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "ADD",
      "path": "15"
    },
    "5966": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5967": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5968": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5969": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6786,
        6793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5971": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6786,
        6793
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5974": {
      "op": "DUP1"
    },
    "5975": {
      "op": "MLOAD"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5978": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "5981": {
      "op": "DUP4"
    },
    "5982": {
      "op": "CODECOPY"
    },
    "5983": {
      "op": "DUP2"
    },
    "5984": {
      "op": "MLOAD"
    },
    "5985": {
      "op": "SWAP2"
    },
    "5986": {
      "op": "MSTORE"
    },
    "5987": {
      "offset": [
        777,
        819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5988": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6834
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "5993": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6834
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5994": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "5996": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5997": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5998": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "ADD",
      "path": "15"
    },
    "5999": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6000": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6002": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6003": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6004": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6005": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6006": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6007": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6008": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "SUB",
      "path": "15"
    },
    "6009": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "ADD",
      "path": "15"
    },
    "6010": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6011": {
      "offset": [
        777,
        819
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6012": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6013": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "6014": {
      "fn": "StrategyCurveYVoterProxy.balanceOfWant",
      "offset": [
        6812,
        6849
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6015": {
      "op": "DUP1"
    },
    "6016": {
      "op": "ISZERO"
    },
    "6017": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "6020": {
      "op": "JUMPI"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6023": {
      "op": "DUP1"
    },
    "6024": {
      "op": "REVERT"
    },
    "6025": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2288,
        2440
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6026": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2373,
        2383
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 50,
      "value": "0x3"
    },
    "6028": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2373,
        2383
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6035": {
      "op": "SHL"
    },
    "6036": {
      "op": "SUB"
    },
    "6037": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2373,
        2383
      ],
      "op": "AND",
      "path": "15"
    },
    "6038": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2359,
        2369
      ],
      "op": "CALLER",
      "path": "15"
    },
    "6039": {
      "branch": 91,
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2359,
        2383
      ],
      "op": "EQ",
      "path": "15"
    },
    "6040": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17D6"
    },
    "6043": {
      "branch": 91,
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6044": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6046": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6047": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6054": {
      "op": "SHL"
    },
    "6055": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6056": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6057": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6059": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6061": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6062": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "ADD",
      "path": "15"
    },
    "6063": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6064": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xB"
    },
    "6066": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "6068": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6069": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "ADD",
      "path": "15"
    },
    "6070": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6071": {
      "op": "PUSH11",
      "value": "0x21676F7665726E616E6365"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6085": {
      "op": "SHL"
    },
    "6086": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "6088": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6089": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "ADD",
      "path": "15"
    },
    "6090": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6091": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6092": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6093": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6094": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6095": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6096": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "SUB",
      "path": "15"
    },
    "6097": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "6099": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "ADD",
      "path": "15"
    },
    "6100": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6101": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "REVERT",
      "path": "15"
    },
    "6102": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2351,
        2399
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6103": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2419
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 51,
      "value": "0x5"
    },
    "6105": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6106": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6113": {
      "op": "SHL"
    },
    "6114": {
      "op": "SUB"
    },
    "6115": {
      "op": "NOT"
    },
    "6116": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "AND",
      "path": "15"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6123": {
      "op": "SHL"
    },
    "6124": {
      "op": "SUB"
    },
    "6125": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6126": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6127": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6128": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "AND",
      "path": "15"
    },
    "6129": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6130": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6131": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6132": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "OR",
      "path": "15"
    },
    "6133": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6134": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "offset": [
        2409,
        2433
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6135": {
      "fn": "StrategyCurveYVoterProxy.setStrategist",
      "jump": "o",
      "offset": [
        2288,
        2440
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6136": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2936,
        3172
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6137": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6139": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6140": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6141": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6148": {
      "op": "SHL"
    },
    "6149": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6150": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6151": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3019,
        3023
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "6152": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6154": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6155": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6156": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6157": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6158": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6159": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2972,
        2985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6161": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2972,
        2985
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6164": {
      "op": "DUP1"
    },
    "6165": {
      "op": "MLOAD"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6168": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "6171": {
      "op": "DUP4"
    },
    "6172": {
      "op": "CODECOPY"
    },
    "6173": {
      "op": "DUP2"
    },
    "6174": {
      "op": "MLOAD"
    },
    "6175": {
      "op": "SWAP2"
    },
    "6176": {
      "op": "MSTORE"
    },
    "6177": {
      "offset": [
        777,
        819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6178": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x70A08231"
    },
    "6183": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3010
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6184": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "6186": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6187": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6188": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6189": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6190": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6192": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6193": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6194": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6195": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6196": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6197": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6198": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SUB",
      "path": "15"
    },
    "6199": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6200": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6201": {
      "offset": [
        777,
        819
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6202": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6203": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "6204": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6205": {
      "op": "DUP1"
    },
    "6206": {
      "op": "ISZERO"
    },
    "6207": {
      "op": "PUSH2",
      "value": "0x1847"
    },
    "6210": {
      "op": "JUMPI"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6213": {
      "op": "DUP1"
    },
    "6214": {
      "op": "REVERT"
    },
    "6215": {
      "op": "JUMPDEST"
    },
    "6216": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "POP",
      "path": "15"
    },
    "6217": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "GAS",
      "path": "15"
    },
    "6218": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "6219": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6220": {
      "op": "DUP1"
    },
    "6221": {
      "op": "ISZERO"
    },
    "6222": {
      "op": "PUSH2",
      "value": "0x185B"
    },
    "6225": {
      "op": "JUMPI"
    },
    "6226": {
      "op": "RETURNDATASIZE"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6229": {
      "op": "DUP1"
    },
    "6230": {
      "op": "RETURNDATACOPY"
    },
    "6231": {
      "op": "RETURNDATASIZE"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6234": {
      "op": "REVERT"
    },
    "6235": {
      "op": "JUMPDEST"
    },
    "6236": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "POP",
      "path": "15"
    },
    "6237": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "POP",
      "path": "15"
    },
    "6238": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "POP",
      "path": "15"
    },
    "6239": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "POP",
      "path": "15"
    },
    "6240": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6242": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6243": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6246": {
      "op": "DUP2"
    },
    "6247": {
      "op": "LT"
    },
    "6248": {
      "op": "ISZERO"
    },
    "6249": {
      "op": "PUSH2",
      "value": "0x1871"
    },
    "6252": {
      "op": "JUMPI"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6255": {
      "op": "DUP1"
    },
    "6256": {
      "op": "REVERT"
    },
    "6257": {
      "op": "JUMPDEST"
    },
    "6258": {
      "op": "POP"
    },
    "6259": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6260": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2988,
        3025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6261": {
      "op": "POP"
    },
    "6262": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3039,
        3048
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6263": {
      "branch": 92,
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3039,
        3048
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6264": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3035,
        3166
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x193C"
    },
    "6267": {
      "branch": 92,
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3035,
        3166
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6268": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3064,
        3103
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 52,
      "value": "0x18AE"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6273": {
      "op": "DUP1"
    },
    "6274": {
      "op": "MLOAD"
    },
    "6275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6277": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "6280": {
      "op": "DUP4"
    },
    "6281": {
      "op": "CODECOPY"
    },
    "6282": {
      "op": "DUP2"
    },
    "6283": {
      "op": "MLOAD"
    },
    "6284": {
      "op": "SWAP2"
    },
    "6285": {
      "op": "MSTORE"
    },
    "6286": {
      "offset": [
        1520,
        1562
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x5886E475E163F78CF63D6683ABC7FE8516D12081"
    },
    "6307": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3097,
        3102
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6308": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3064,
        3103
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6313": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3064,
        3089
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B8D"
    },
    "6316": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3064,
        3103
      ],
      "op": "AND",
      "path": "15"
    },
    "6317": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "i",
      "offset": [
        3064,
        3103
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6318": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3064,
        3103
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6319": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 53,
      "value": "0x40"
    },
    "6321": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6322": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6323": {
      "op": "PUSH4",
      "value": "0x1F2C13E1"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6330": {
      "op": "SHL"
    },
    "6331": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6332": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6333": {
      "offset": [
        1431,
        1473
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "6354": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6356": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6357": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "ADD",
      "path": "15"
    },
    "6358": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6361": {
      "op": "DUP1"
    },
    "6362": {
      "op": "MLOAD"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6365": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "6368": {
      "op": "DUP4"
    },
    "6369": {
      "op": "CODECOPY"
    },
    "6370": {
      "op": "DUP2"
    },
    "6371": {
      "op": "MLOAD"
    },
    "6372": {
      "op": "SWAP2"
    },
    "6373": {
      "op": "MSTORE"
    },
    "6374": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "6376": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6377": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "ADD",
      "path": "15"
    },
    "6378": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6379": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6380": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6381": {
      "offset": [
        1520,
        1562
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x5886E475E163F78CF63D6683ABC7FE8516D12081"
    },
    "6402": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1520,
        1562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6403": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3142
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF9609F08"
    },
    "6408": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3142
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6409": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "6411": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6412": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6413": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "ADD",
      "path": "15"
    },
    "6414": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6417": {
      "op": "SWAP3"
    },
    "6418": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6419": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6420": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6421": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6422": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "SUB",
      "path": "15"
    },
    "6423": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "ADD",
      "path": "15"
    },
    "6424": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6425": {
      "op": "DUP4"
    },
    "6426": {
      "offset": [
        1520,
        1562
      ],
      "op": "DUP8",
      "path": "15"
    },
    "6427": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6428": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "6429": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6430": {
      "op": "DUP1"
    },
    "6431": {
      "op": "ISZERO"
    },
    "6432": {
      "op": "PUSH2",
      "value": "0x1928"
    },
    "6435": {
      "op": "JUMPI"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6438": {
      "op": "DUP1"
    },
    "6439": {
      "op": "REVERT"
    },
    "6440": {
      "op": "JUMPDEST"
    },
    "6441": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "POP",
      "path": "15"
    },
    "6442": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "GAS",
      "path": "15"
    },
    "6443": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "CALL",
      "path": "15"
    },
    "6444": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3117,
        3155
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6445": {
      "op": "DUP1"
    },
    "6446": {
      "op": "ISZERO"
    },
    "6447": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "6450": {
      "op": "JUMPI"
    },
    "6451": {
      "op": "RETURNDATASIZE"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6454": {
      "op": "DUP1"
    },
    "6455": {
      "op": "RETURNDATACOPY"
    },
    "6456": {
      "op": "RETURNDATASIZE"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6459": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3035,
        3166
      ],
      "op": "REVERT",
      "path": "15"
    },
    "6460": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        3035,
        3166
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6461": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        2936,
        3172
      ],
      "op": "POP",
      "path": "15"
    },
    "6462": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        2936,
        3172
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6463": {
      "offset": [
        1480,
        1563
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6464": {
      "offset": [
        1520,
        1562
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x5886E475E163F78CF63D6683ABC7FE8516D12081"
    },
    "6485": {
      "offset": [
        1480,
        1563
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6486": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1480,
        1563
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6487": {
      "offset": [
        913,
        994
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6488": {
      "offset": [
        951,
        993
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x7A250D5630B4CF539739DF2C5DACB4C659F2488D"
    },
    "6509": {
      "offset": [
        913,
        994
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6510": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        913,
        994
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6511": {
      "offset": [
        1126,
        1207
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6512": {
      "offset": [
        1164,
        1206
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x6B175474E89094C44DA98B954EEDEAC495271D0F"
    },
    "6533": {
      "offset": [
        1126,
        1207
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6534": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1126,
        1207
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6535": {
      "offset": [
        1959,
        1984
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6536": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1959,
        1984
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6538": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1959,
        1984
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6545": {
      "op": "SHL"
    },
    "6546": {
      "op": "SUB"
    },
    "6547": {
      "offset": [
        1959,
        1984
      ],
      "op": "AND",
      "path": "15"
    },
    "6548": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "offset": [
        1959,
        1984
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6549": {
      "fn": "StrategyCurveYVoterProxy.deposit",
      "jump": "o",
      "offset": [
        1959,
        1984
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6550": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6551": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6553": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 54,
      "value": "0x19D8"
    },
    "6556": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6557": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6558": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6560": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6561": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6562": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6564": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6565": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6567": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6568": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6569": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "6571": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6572": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6573": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6575": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "1"
    },
    "6576": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6609": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6610": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6611": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "6612": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DA0"
    },
    "6615": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6616": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6617": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6618": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "POP",
      "path": "1"
    },
    "6619": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6620": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6621": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6622": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "6623": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "POP",
      "path": "1"
    },
    "6624": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6625": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6595,
        6734
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6626": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 55,
      "value": "0x40"
    },
    "6628": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6629": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6630": {
      "op": "PUSH4",
      "value": "0x6CE57689"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6637": {
      "op": "SHL"
    },
    "6638": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6639": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6640": {
      "offset": [
        1431,
        1473
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "6661": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6663": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6664": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "ADD",
      "path": "15"
    },
    "6665": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6668": {
      "op": "DUP1"
    },
    "6669": {
      "op": "MLOAD"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6672": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "6675": {
      "op": "DUP4"
    },
    "6676": {
      "op": "CODECOPY"
    },
    "6677": {
      "op": "DUP2"
    },
    "6678": {
      "op": "MLOAD"
    },
    "6679": {
      "op": "SWAP2"
    },
    "6680": {
      "op": "MSTORE"
    },
    "6681": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "6683": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6684": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "ADD",
      "path": "15"
    },
    "6685": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6686": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "6688": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6689": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "ADD",
      "path": "15"
    },
    "6690": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6691": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6692": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6693": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6694": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6695": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6653,
        6660
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6697": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6653,
        6660
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6698": {
      "offset": [
        1520,
        1562
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x5886E475E163F78CF63D6683ABC7FE8516D12081"
    },
    "6719": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        1520,
        1562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6720": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6705
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xD9CAED12"
    },
    "6725": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6705
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6726": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "6728": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6729": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6730": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "ADD",
      "path": "15"
    },
    "6731": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6732": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6734": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6735": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6736": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6737": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6738": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6739": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6740": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SUB",
      "path": "15"
    },
    "6741": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "ADD",
      "path": "15"
    },
    "6742": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6743": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6653,
        6660
      ],
      "op": "DUP8",
      "path": "15"
    },
    "6744": {
      "offset": [
        1520,
        1562
      ],
      "op": "DUP8",
      "path": "15"
    },
    "6745": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6746": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "6747": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6748": {
      "op": "DUP1"
    },
    "6749": {
      "op": "ISZERO"
    },
    "6750": {
      "op": "PUSH2",
      "value": "0x1A66"
    },
    "6753": {
      "op": "JUMPI"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6756": {
      "op": "DUP1"
    },
    "6757": {
      "op": "REVERT"
    },
    "6758": {
      "op": "JUMPDEST"
    },
    "6759": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "POP",
      "path": "15"
    },
    "6760": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "GAS",
      "path": "15"
    },
    "6761": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "CALL",
      "path": "15"
    },
    "6762": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6763": {
      "op": "DUP1"
    },
    "6764": {
      "op": "ISZERO"
    },
    "6765": {
      "op": "PUSH2",
      "value": "0x1A7A"
    },
    "6768": {
      "op": "JUMPI"
    },
    "6769": {
      "op": "RETURNDATASIZE"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6772": {
      "op": "DUP1"
    },
    "6773": {
      "op": "RETURNDATACOPY"
    },
    "6774": {
      "op": "RETURNDATASIZE"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6777": {
      "op": "REVERT"
    },
    "6778": {
      "op": "JUMPDEST"
    },
    "6779": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "POP",
      "path": "15"
    },
    "6780": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "POP",
      "path": "15"
    },
    "6781": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "POP",
      "path": "15"
    },
    "6782": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "POP",
      "path": "15"
    },
    "6783": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6785": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6786": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6789": {
      "op": "DUP2"
    },
    "6790": {
      "op": "LT"
    },
    "6791": {
      "op": "ISZERO"
    },
    "6792": {
      "op": "PUSH2",
      "value": "0x1A90"
    },
    "6795": {
      "op": "JUMPI"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6798": {
      "op": "DUP1"
    },
    "6799": {
      "op": "REVERT"
    },
    "6800": {
      "op": "JUMPDEST"
    },
    "6801": {
      "op": "POP"
    },
    "6802": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6803": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6679,
        6727
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6804": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "offset": [
        6595,
        6734
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6805": {
      "op": "POP"
    },
    "6806": {
      "op": "POP"
    },
    "6807": {
      "fn": "StrategyCurveYVoterProxy._withdrawSome",
      "jump": "o",
      "offset": [
        6595,
        6734
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6808": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6809": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6811": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6812": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6813": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "1"
    },
    "6814": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 56
    },
    "6815": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6816": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "1"
    },
    "6817": {
      "branch": 97,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6818": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D8"
    },
    "6821": {
      "branch": 97,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6822": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6824": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6825": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6832": {
      "op": "SHL"
    },
    "6833": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6834": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6835": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6837": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6839": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6840": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "6841": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6842": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "6844": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "6846": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6847": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "6848": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6849": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "6882": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "6884": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6885": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "6886": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6887": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6888": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6889": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6890": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6891": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6892": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "1"
    },
    "6893": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "6895": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "1"
    },
    "6896": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6897": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6898": {
      "fn": "SafeMath.mul",
      "offset": [
        2159,
        2618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6899": {
      "fn": "SafeMath.mul",
      "offset": [
        2217,
        2224
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6901": {
      "branch": 98,
      "fn": "SafeMath.mul",
      "offset": [
        2458,
        2464
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6902": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B01"
    },
    "6905": {
      "branch": 98,
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6906": {
      "op": "POP"
    },
    "6907": {
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 57,
      "value": "0x0"
    },
    "6909": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19DB"
    },
    "6912": {
      "fn": "SafeMath.mul",
      "offset": [
        2480,
        2488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6913": {
      "fn": "SafeMath.mul",
      "offset": [
        2454,
        2499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6914": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6915": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6916": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "MUL",
      "path": "1"
    },
    "6917": {
      "fn": "SafeMath.mul",
      "offset": [
        2525,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6918": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6919": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2526
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6920": {
      "fn": "SafeMath.mul",
      "offset": [
        2521,
        2522
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6921": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 58,
      "value": "0x1B0E"
    },
    "6924": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6925": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "INVALID",
      "path": "1"
    },
    "6926": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6927": {
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2549
      ],
      "op": "DIV",
      "path": "1"
    },
    "6928": {
      "branch": 99,
      "fn": "SafeMath.mul",
      "offset": [
        2544,
        2554
      ],
      "op": "EQ",
      "path": "1"
    },
    "6929": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D8"
    },
    "6932": {
      "branch": 99,
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6933": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6935": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6942": {
      "op": "SHL"
    },
    "6943": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6944": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6945": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6947": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "6948": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6949": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6950": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6952": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "6953": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6954": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6955": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "6956": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6957": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6958": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "6960": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6961": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6962": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6964": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "6965": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6966": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20B1"
    },
    "6969": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "6971": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6972": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "6973": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6975": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "ADD",
      "path": "1"
    },
    "6976": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6977": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "6978": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "POP",
      "path": "1"
    },
    "6979": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6981": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6982": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6983": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6984": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SUB",
      "path": "1"
    },
    "6985": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6986": {
      "fn": "SafeMath.mul",
      "offset": [
        2536,
        2592
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6987": {
      "fn": "SafeMath.div",
      "offset": [
        3073,
        3203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6988": {
      "fn": "SafeMath.div",
      "offset": [
        3131,
        3138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6990": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 59,
      "value": "0x19D8"
    },
    "6993": {
      "fn": "SafeMath.div",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6994": {
      "fn": "SafeMath.div",
      "offset": [
        3164,
        3165
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6995": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6997": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6998": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6999": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7001": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7002": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7004": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7005": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7006": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "7008": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7009": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7010": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7012": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "7013": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "7046": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7047": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7048": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3196
      ],
      "op": "POP",
      "path": "1"
    },
    "7049": {
      "fn": "SafeMath.div",
      "offset": [
        3157,
        3160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E37"
    },
    "7052": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3157,
        3196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7053": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7054": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 60,
      "value": "0x40"
    },
    "7056": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7057": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7064": {
      "op": "SHL"
    },
    "7065": {
      "op": "SUB"
    },
    "7066": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7067": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "AND",
      "path": "6"
    },
    "7068": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7070": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7071": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7072": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7073": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7075": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7076": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7077": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7078": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7079": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7080": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7081": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7082": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7083": {
      "op": "DUP1"
    },
    "7084": {
      "op": "DUP4"
    },
    "7085": {
      "op": "SUB"
    },
    "7086": {
      "op": "SWAP1"
    },
    "7087": {
      "op": "SWAP2"
    },
    "7088": {
      "op": "ADD"
    },
    "7089": {
      "op": "DUP2"
    },
    "7090": {
      "op": "MSTORE"
    },
    "7091": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7093": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7094": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7095": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "ADD",
      "path": "6"
    },
    "7096": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7097": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7098": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7099": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        770,
        828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7101": {
      "op": "DUP2"
    },
    "7102": {
      "op": "ADD"
    },
    "7103": {
      "op": "DUP1"
    },
    "7104": {
      "op": "MLOAD"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7111": {
      "op": "SHL"
    },
    "7112": {
      "op": "SUB"
    },
    "7113": {
      "op": "AND"
    },
    "7114": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7121": {
      "op": "SHL"
    },
    "7122": {
      "op": "OR"
    },
    "7123": {
      "op": "SWAP1"
    },
    "7124": {
      "op": "MSTORE"
    },
    "7125": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BDF"
    },
    "7128": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7129": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7130": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        768
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7131": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        762
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E9C"
    },
    "7134": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        744,
        829
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7135": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        744,
        829
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7136": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7137": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7138": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        662,
        836
      ],
      "op": "POP",
      "path": "6"
    },
    "7139": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        662,
        836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7140": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1050,
        1662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7141": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 61
    },
    "7142": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7143": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1415,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7144": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C6A"
    },
    "7147": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7148": {
      "op": "POP"
    },
    "7149": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7151": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7152": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7153": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7160": {
      "op": "SHL"
    },
    "7161": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7162": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7163": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "7164": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7166": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7167": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7168": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7175": {
      "op": "SHL"
    },
    "7176": {
      "op": "SUB"
    },
    "7177": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7178": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7179": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "7180": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7182": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7183": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7184": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7185": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7186": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7187": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7188": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7189": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "AND",
      "path": "6"
    },
    "7190": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7191": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "7196": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7197": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7199": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7200": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7201": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7202": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7203": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7205": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7206": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7207": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7208": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7209": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7210": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7211": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "7212": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ADD",
      "path": "6"
    },
    "7213": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7214": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1446
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7215": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7216": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "7217": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7218": {
      "op": "DUP1"
    },
    "7219": {
      "op": "ISZERO"
    },
    "7220": {
      "op": "PUSH2",
      "value": "0x1C3C"
    },
    "7223": {
      "op": "JUMPI"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7226": {
      "op": "DUP1"
    },
    "7227": {
      "op": "REVERT"
    },
    "7228": {
      "op": "JUMPDEST"
    },
    "7229": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7230": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "GAS",
      "path": "6"
    },
    "7231": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "7232": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7233": {
      "op": "DUP1"
    },
    "7234": {
      "op": "ISZERO"
    },
    "7235": {
      "op": "PUSH2",
      "value": "0x1C50"
    },
    "7238": {
      "op": "JUMPI"
    },
    "7239": {
      "op": "RETURNDATASIZE"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7242": {
      "op": "DUP1"
    },
    "7243": {
      "op": "RETURNDATACOPY"
    },
    "7244": {
      "op": "RETURNDATASIZE"
    },
    "7245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7247": {
      "op": "REVERT"
    },
    "7248": {
      "op": "JUMPDEST"
    },
    "7249": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7250": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7251": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7252": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "POP",
      "path": "6"
    },
    "7253": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7255": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7256": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7259": {
      "op": "DUP2"
    },
    "7260": {
      "op": "LT"
    },
    "7261": {
      "op": "ISZERO"
    },
    "7262": {
      "op": "PUSH2",
      "value": "0x1C66"
    },
    "7265": {
      "op": "JUMPI"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7268": {
      "op": "DUP1"
    },
    "7269": {
      "op": "REVERT"
    },
    "7270": {
      "op": "JUMPDEST"
    },
    "7271": {
      "op": "POP"
    },
    "7272": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7273": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1431,
        1475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7274": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1414,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7275": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CA5"
    },
    "7278": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7279": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7281": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7288": {
      "op": "SHL"
    },
    "7289": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7290": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7291": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7293": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7294": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7295": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7296": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7298": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7299": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7300": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7301": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7302": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7303": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7304": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7306": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7307": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7308": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7310": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7311": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7312": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20FC"
    },
    "7315": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x36"
    },
    "7317": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7318": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "7319": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7321": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "ADD",
      "path": "6"
    },
    "7322": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7323": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7324": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "POP",
      "path": "6"
    },
    "7325": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7327": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7328": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7329": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7330": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SUB",
      "path": "6"
    },
    "7331": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7332": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7333": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1406,
        1556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7334": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 62,
      "value": "0x40"
    },
    "7336": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7337": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7344": {
      "op": "SHL"
    },
    "7345": {
      "op": "SUB"
    },
    "7346": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7347": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "AND",
      "path": "6"
    },
    "7348": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7350": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7351": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7352": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7353": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7355": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7356": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7357": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7358": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7359": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7360": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7361": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7362": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7363": {
      "op": "DUP1"
    },
    "7364": {
      "op": "DUP4"
    },
    "7365": {
      "op": "SUB"
    },
    "7366": {
      "op": "SWAP1"
    },
    "7367": {
      "op": "SWAP2"
    },
    "7368": {
      "op": "ADD"
    },
    "7369": {
      "op": "DUP2"
    },
    "7370": {
      "op": "MSTORE"
    },
    "7371": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7373": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7374": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7375": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "ADD",
      "path": "6"
    },
    "7376": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7377": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7378": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7379": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1592,
        1654
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7381": {
      "op": "DUP2"
    },
    "7382": {
      "op": "ADD"
    },
    "7383": {
      "op": "DUP1"
    },
    "7384": {
      "op": "MLOAD"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7391": {
      "op": "SHL"
    },
    "7392": {
      "op": "SUB"
    },
    "7393": {
      "op": "AND"
    },
    "7394": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7401": {
      "op": "SHL"
    },
    "7402": {
      "op": "OR"
    },
    "7403": {
      "op": "SWAP1"
    },
    "7404": {
      "op": "MSTORE"
    },
    "7405": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BDF"
    },
    "7408": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7409": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7410": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1585,
        1590
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7411": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1566,
        1584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E9C"
    },
    "7414": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1566,
        1655
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7415": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        4975,
        5067
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7416": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 63,
      "value": "0x40"
    },
    "7418": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7419": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7420": {
      "op": "PUSH4",
      "value": "0x1395C59"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7427": {
      "op": "SHL"
    },
    "7428": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7429": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7430": {
      "offset": [
        1431,
        1473
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0xFA712EE4788C042E2B7BB55E6CB8EC569C4530C1"
    },
    "7451": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7453": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7454": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "ADD",
      "path": "15"
    },
    "7455": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7458": {
      "op": "DUP1"
    },
    "7459": {
      "op": "MLOAD"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7462": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "7465": {
      "op": "DUP4"
    },
    "7466": {
      "op": "CODECOPY"
    },
    "7467": {
      "op": "DUP2"
    },
    "7468": {
      "op": "MLOAD"
    },
    "7469": {
      "op": "SWAP2"
    },
    "7470": {
      "op": "MSTORE"
    },
    "7471": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "7473": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7474": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "ADD",
      "path": "15"
    },
    "7475": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7476": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7477": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7478": {
      "offset": [
        1520,
        1562
      ],
      "op": "PUSH20",
      "path": "15",
      "value": "0x5886E475E163F78CF63D6683ABC7FE8516D12081"
    },
    "7499": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        1520,
        1562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7500": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5047
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x9CAE2C8"
    },
    "7505": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5047
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7506": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "7508": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7509": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7510": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "ADD",
      "path": "15"
    },
    "7511": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7512": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7514": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7515": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7516": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7517": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7518": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7519": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "SUB",
      "path": "15"
    },
    "7520": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "ADD",
      "path": "15"
    },
    "7521": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7524": {
      "offset": [
        1520,
        1562
      ],
      "op": "DUP8",
      "path": "15"
    },
    "7525": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7526": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "7527": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7528": {
      "op": "DUP1"
    },
    "7529": {
      "op": "ISZERO"
    },
    "7530": {
      "op": "PUSH2",
      "value": "0x1D72"
    },
    "7533": {
      "op": "JUMPI"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7536": {
      "op": "DUP1"
    },
    "7537": {
      "op": "REVERT"
    },
    "7538": {
      "op": "JUMPDEST"
    },
    "7539": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "POP",
      "path": "15"
    },
    "7540": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "GAS",
      "path": "15"
    },
    "7541": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "CALL",
      "path": "15"
    },
    "7542": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7543": {
      "op": "DUP1"
    },
    "7544": {
      "op": "ISZERO"
    },
    "7545": {
      "op": "PUSH2",
      "value": "0x1D86"
    },
    "7548": {
      "op": "JUMPI"
    },
    "7549": {
      "op": "RETURNDATASIZE"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7552": {
      "op": "DUP1"
    },
    "7553": {
      "op": "RETURNDATACOPY"
    },
    "7554": {
      "op": "RETURNDATASIZE"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7557": {
      "op": "REVERT"
    },
    "7558": {
      "op": "JUMPDEST"
    },
    "7559": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "POP",
      "path": "15"
    },
    "7560": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "POP",
      "path": "15"
    },
    "7561": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "POP",
      "path": "15"
    },
    "7562": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "POP",
      "path": "15"
    },
    "7563": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7565": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7566": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "offset": [
        5018,
        5060
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7569": {
      "op": "DUP2"
    },
    "7570": {
      "op": "LT"
    },
    "7571": {
      "op": "ISZERO"
    },
    "7572": {
      "op": "PUSH2",
      "value": "0x1D9C"
    },
    "7575": {
      "op": "JUMPI"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7578": {
      "op": "DUP1"
    },
    "7579": {
      "op": "REVERT"
    },
    "7580": {
      "op": "JUMPDEST"
    },
    "7581": {
      "op": "POP"
    },
    "7582": {
      "op": "POP"
    },
    "7583": {
      "fn": "StrategyCurveYVoterProxy._withdrawAll",
      "jump": "o",
      "offset": [
        4975,
        5067
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7584": {
      "fn": "SafeMath.sub",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7585": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7587": {
      "fn": "SafeMath.sub",
      "offset": [
        1853,
        1865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 64
    },
    "7588": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7589": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7590": {
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "GT",
      "path": "1"
    },
    "7591": {
      "branch": 100,
      "fn": "SafeMath.sub",
      "offset": [
        1845,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7592": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E2F"
    },
    "7595": {
      "branch": 100,
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7596": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7598": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7605": {
      "op": "SHL"
    },
    "7606": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7607": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7608": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7610": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7611": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7612": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7613": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7615": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7616": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7617": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7618": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7619": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7620": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7621": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7622": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7623": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7624": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7625": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7626": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7627": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7629": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7630": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7631": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7632": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7633": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7634": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7635": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7637": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7638": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7639": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7640": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7641": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7644": {
      "op": "JUMPDEST"
    },
    "7645": {
      "op": "DUP4"
    },
    "7646": {
      "op": "DUP2"
    },
    "7647": {
      "op": "LT"
    },
    "7648": {
      "op": "ISZERO"
    },
    "7649": {
      "op": "PUSH2",
      "value": "0x1DF4"
    },
    "7652": {
      "op": "JUMPI"
    },
    "7653": {
      "op": "DUP2"
    },
    "7654": {
      "op": "DUP2"
    },
    "7655": {
      "op": "ADD"
    },
    "7656": {
      "op": "MLOAD"
    },
    "7657": {
      "op": "DUP4"
    },
    "7658": {
      "op": "DUP3"
    },
    "7659": {
      "op": "ADD"
    },
    "7660": {
      "op": "MSTORE"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7663": {
      "op": "ADD"
    },
    "7664": {
      "op": "PUSH2",
      "value": "0x1DDC"
    },
    "7667": {
      "op": "JUMP"
    },
    "7668": {
      "op": "JUMPDEST"
    },
    "7669": {
      "op": "POP"
    },
    "7670": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7671": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7672": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7673": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7674": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7675": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7676": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7677": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7678": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7679": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7681": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "7682": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7683": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7684": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E21"
    },
    "7687": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7688": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7689": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7690": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7691": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7692": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7693": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7695": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7696": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7698": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7699": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7702": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "EXP",
      "path": "1"
    },
    "7703": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7704": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "NOT",
      "path": "1"
    },
    "7705": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "AND",
      "path": "1"
    },
    "7706": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7707": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7708": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7710": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "7711": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7712": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7713": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7714": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7715": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7716": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7717": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7718": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "POP",
      "path": "1"
    },
    "7719": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7721": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7722": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7723": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7724": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SUB",
      "path": "1"
    },
    "7725": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7726": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7727": {
      "fn": "SafeMath.sub",
      "offset": [
        1837,
        1866
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7728": {
      "op": "POP"
    },
    "7729": {
      "op": "POP"
    },
    "7730": {
      "op": "POP"
    },
    "7731": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7732": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SUB",
      "path": "1"
    },
    "7733": {
      "fn": "SafeMath.sub",
      "offset": [
        1888,
        1893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7734": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1732,
        1919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7735": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7736": {
      "fn": "SafeMath.div",
      "offset": [
        3804,
        3811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7738": {
      "fn": "SafeMath.div",
      "offset": [
        3904,
        3916
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 65
    },
    "7739": {
      "branch": 101,
      "fn": "SafeMath.div",
      "offset": [
        3897,
        3902
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7740": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E86"
    },
    "7743": {
      "branch": 101,
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7744": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7746": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7753": {
      "op": "SHL"
    },
    "7754": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7755": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7756": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7758": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7760": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7761": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7762": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7763": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7764": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7765": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7766": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7767": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "7769": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7770": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7771": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7772": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7773": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7774": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7775": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7776": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7777": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7778": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "7780": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7781": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7782": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7783": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7784": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7785": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7786": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "ADD",
      "path": "1"
    },
    "7787": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7788": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7789": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7790": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7791": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7793": {
      "op": "DUP4"
    },
    "7794": {
      "op": "ISZERO"
    },
    "7795": {
      "op": "PUSH2",
      "value": "0x1DF4"
    },
    "7798": {
      "op": "JUMPI"
    },
    "7799": {
      "op": "DUP2"
    },
    "7800": {
      "op": "DUP2"
    },
    "7801": {
      "op": "ADD"
    },
    "7802": {
      "op": "MLOAD"
    },
    "7803": {
      "op": "DUP4"
    },
    "7804": {
      "op": "DUP3"
    },
    "7805": {
      "op": "ADD"
    },
    "7806": {
      "op": "MSTORE"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7809": {
      "op": "ADD"
    },
    "7810": {
      "op": "PUSH2",
      "value": "0x1DDC"
    },
    "7813": {
      "op": "JUMP"
    },
    "7814": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7815": {
      "fn": "SafeMath.div",
      "offset": [
        3889,
        3917
      ],
      "op": "POP",
      "path": "1"
    },
    "7816": {
      "fn": "SafeMath.div",
      "offset": [
        3927,
        3936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7818": {
      "fn": "SafeMath.div",
      "offset": [
        3943,
        3944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7819": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3940
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7820": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7821": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E92"
    },
    "7824": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7825": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "INVALID",
      "path": "1"
    },
    "7826": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7827": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "DIV",
      "path": "1"
    },
    "7828": {
      "fn": "SafeMath.div",
      "offset": [
        3939,
        3944
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "7829": {
      "fn": "SafeMath.div",
      "offset": [
        3718,
        4056
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7830": {
      "op": "POP"
    },
    "7831": {
      "op": "POP"
    },
    "7832": {
      "op": "POP"
    },
    "7833": {
      "op": "POP"
    },
    "7834": {
      "op": "POP"
    },
    "7835": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3718,
        4056
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7836": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        2666,
        3761
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7837": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 66,
      "value": "0x1EAE"
    },
    "7840": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3269,
        3274
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7847": {
      "op": "SHL"
    },
    "7848": {
      "op": "SUB"
    },
    "7849": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "AND",
      "path": "6"
    },
    "7850": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2054"
    },
    "7853": {
      "fn": "SafeERC20.callOptionalReturn",
      "jump": "i",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7854": {
      "branch": 93,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3261,
        3288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7855": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EFF"
    },
    "7858": {
      "branch": 93,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7859": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7861": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7862": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7863": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7869": {
      "op": "SHL"
    },
    "7870": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7871": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7872": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7874": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7876": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7877": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7878": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7879": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "7881": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "7883": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7884": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7885": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7886": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
    },
    "7919": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "7921": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7922": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7923": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7924": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7925": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7926": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7927": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7928": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7929": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SUB",
      "path": "6"
    },
    "7930": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "7932": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "7933": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7934": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7935": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3253,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7936": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3395,
        3407
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7938": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3409,
        3432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7940": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3444,
        3449
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7947": {
      "op": "SHL"
    },
    "7948": {
      "op": "SUB"
    },
    "7949": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3455
      ],
      "op": "AND",
      "path": "6"
    },
    "7950": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3456,
        3460
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7951": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7953": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7954": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7955": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7956": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7957": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7958": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7959": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7961": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "7962": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7963": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7964": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7965": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7966": {
      "op": "JUMPDEST"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7969": {
      "op": "DUP4"
    },
    "7970": {
      "op": "LT"
    },
    "7971": {
      "op": "PUSH2",
      "value": "0x1F3D"
    },
    "7974": {
      "op": "JUMPI"
    },
    "7975": {
      "op": "DUP1"
    },
    "7976": {
      "op": "MLOAD"
    },
    "7977": {
      "op": "DUP3"
    },
    "7978": {
      "op": "MSTORE"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7981": {
      "op": "NOT"
    },
    "7982": {
      "op": "SWAP1"
    },
    "7983": {
      "op": "SWAP3"
    },
    "7984": {
      "op": "ADD"
    },
    "7985": {
      "op": "SWAP2"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7988": {
      "op": "SWAP2"
    },
    "7989": {
      "op": "DUP3"
    },
    "7990": {
      "op": "ADD"
    },
    "7991": {
      "op": "SWAP2"
    },
    "7992": {
      "op": "ADD"
    },
    "7993": {
      "op": "PUSH2",
      "value": "0x1F1E"
    },
    "7996": {
      "op": "JUMP"
    },
    "7997": {
      "op": "JUMPDEST"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8000": {
      "op": "DUP4"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8003": {
      "op": "SUB"
    },
    "8004": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8007": {
      "op": "EXP"
    },
    "8008": {
      "op": "SUB"
    },
    "8009": {
      "op": "DUP1"
    },
    "8010": {
      "op": "NOT"
    },
    "8011": {
      "op": "DUP3"
    },
    "8012": {
      "op": "MLOAD"
    },
    "8013": {
      "op": "AND"
    },
    "8014": {
      "op": "DUP2"
    },
    "8015": {
      "op": "DUP5"
    },
    "8016": {
      "op": "MLOAD"
    },
    "8017": {
      "op": "AND"
    },
    "8018": {
      "op": "DUP1"
    },
    "8019": {
      "op": "DUP3"
    },
    "8020": {
      "op": "OR"
    },
    "8021": {
      "op": "DUP6"
    },
    "8022": {
      "op": "MSTORE"
    },
    "8023": {
      "op": "POP"
    },
    "8024": {
      "op": "POP"
    },
    "8025": {
      "op": "POP"
    },
    "8026": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8027": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8028": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8029": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8030": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8031": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "ADD",
      "path": "6"
    },
    "8032": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8033": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8034": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8035": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8037": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8039": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8040": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8041": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8042": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SUB",
      "path": "6"
    },
    "8043": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8044": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8046": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8047": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "GAS",
      "path": "6"
    },
    "8048": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "CALL",
      "path": "6"
    },
    "8049": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8050": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8051": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8052": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3436,
        3461
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8053": {
      "op": "DUP1"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8056": {
      "op": "DUP2"
    },
    "8057": {
      "op": "EQ"
    },
    "8058": {
      "op": "PUSH2",
      "value": "0x1F9F"
    },
    "8061": {
      "op": "JUMPI"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8064": {
      "op": "MLOAD"
    },
    "8065": {
      "op": "SWAP2"
    },
    "8066": {
      "op": "POP"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8069": {
      "op": "NOT"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8072": {
      "op": "RETURNDATASIZE"
    },
    "8073": {
      "op": "ADD"
    },
    "8074": {
      "op": "AND"
    },
    "8075": {
      "op": "DUP3"
    },
    "8076": {
      "op": "ADD"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8079": {
      "op": "MSTORE"
    },
    "8080": {
      "op": "RETURNDATASIZE"
    },
    "8081": {
      "op": "DUP3"
    },
    "8082": {
      "op": "MSTORE"
    },
    "8083": {
      "op": "RETURNDATASIZE"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8088": {
      "op": "DUP5"
    },
    "8089": {
      "op": "ADD"
    },
    "8090": {
      "op": "RETURNDATACOPY"
    },
    "8091": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "8094": {
      "op": "JUMP"
    },
    "8095": {
      "op": "JUMPDEST"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8098": {
      "op": "SWAP2"
    },
    "8099": {
      "op": "POP"
    },
    "8100": {
      "op": "JUMPDEST"
    },
    "8101": {
      "op": "POP"
    },
    "8102": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8103": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8104": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8105": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3394,
        3461
      ],
      "op": "POP",
      "path": "6"
    },
    "8106": {
      "branch": 94,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3479,
        3486
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 67
    },
    "8107": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FFB"
    },
    "8110": {
      "branch": 94,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8111": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8113": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8114": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8121": {
      "op": "SHL"
    },
    "8122": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8123": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8124": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8126": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8128": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8129": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8130": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8131": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8132": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8133": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "8135": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8136": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8137": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8138": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8171": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "8173": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8174": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8175": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8176": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8177": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8178": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8179": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8180": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8181": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SUB",
      "path": "6"
    },
    "8182": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "8184": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "ADD",
      "path": "6"
    },
    "8185": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8186": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8187": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3471,
        3523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8188": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8189": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3555
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8190": {
      "branch": 95,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3538,
        3559
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8191": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x830"
    },
    "8194": {
      "branch": 95,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3534,
        3755
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8195": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3678,
        3688
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 68
    },
    "8196": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8197": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8199": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "ADD",
      "path": "6"
    },
    "8200": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8201": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8204": {
      "op": "DUP2"
    },
    "8205": {
      "op": "LT"
    },
    "8206": {
      "op": "ISZERO"
    },
    "8207": {
      "op": "PUSH2",
      "value": "0x2017"
    },
    "8210": {
      "op": "JUMPI"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8213": {
      "op": "DUP1"
    },
    "8214": {
      "op": "REVERT"
    },
    "8215": {
      "op": "JUMPDEST"
    },
    "8216": {
      "op": "POP"
    },
    "8217": {
      "branch": 96,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3667,
        3697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8218": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x830"
    },
    "8221": {
      "branch": 96,
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8222": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8224": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8231": {
      "op": "SHL"
    },
    "8232": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8233": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8234": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8236": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8237": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8238": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8239": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8241": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8242": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8243": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8244": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8245": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8246": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8247": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8249": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8250": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8251": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8253": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8254": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8255": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20D2"
    },
    "8258": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "8260": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8261": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "8262": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8264": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "ADD",
      "path": "6"
    },
    "8265": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8266": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8267": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "POP",
      "path": "6"
    },
    "8268": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8270": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8271": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8272": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8273": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SUB",
      "path": "6"
    },
    "8274": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8275": {
      "fn": "SafeERC20.callOptionalReturn",
      "offset": [
        3659,
        3744
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8276": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8277": {
      "fn": "Address.isContract",
      "offset": [
        746,
        750
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8279": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8280": {
      "fn": "Address.isContract",
      "offset": [
        1207,
        1227
      ],
      "op": "EXTCODEHASH",
      "path": "7"
    },
    "8281": {
      "fn": "Address.isContract",
      "offset": [
        1052,
        1118
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "8314": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 69
    },
    "8315": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8316": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "EQ",
      "path": "7"
    },
    "8317": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8318": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8319": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1269
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8320": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2088"
    },
    "8323": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8324": {
      "op": "POP"
    },
    "8325": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8326": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8327": {
      "fn": "Address.isContract",
      "offset": [
        1273,
        1288
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8328": {
      "fn": "Address.isContract",
      "offset": [
        1246,
        1288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8329": {
      "fn": "Address.isContract",
      "offset": [
        1238,
        1289
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8330": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1296
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8331": {
      "op": "POP"
    },
    "8332": {
      "op": "POP"
    },
    "8333": {
      "op": "POP"
    },
    "8334": {
      "op": "POP"
    },
    "8335": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "51c2b18f0365838b7805304f35c1ee52bc7f32c1",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.17;\n\nimport \"@openzeppelinV2/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelinV2/contracts/math/SafeMath.sol\";\nimport \"@openzeppelinV2/contracts/utils/Address.sol\";\nimport \"@openzeppelinV2/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"../../interfaces/yearn/IController.sol\";\nimport \"../../interfaces/curve/Gauge.sol\";\nimport \"../../interfaces/curve/Mintr.sol\";\nimport \"../../interfaces/uniswap/Uni.sol\";\nimport \"../../interfaces/curve/Curve.sol\";\nimport \"../../interfaces/yearn/Token.sol\";\nimport \"../../interfaces/yearn/VoterProxy.sol\";\n\ncontract StrategyCurveYVoterProxy {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    address public constant want = address(0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8);\n    address public constant crv = address(0xD533a949740bb3306d119CC777fa900bA034cd52);\n    address public constant uni = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n    address public constant weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2); // used for crv <> weth <> dai route\n\n    address public constant dai = address(0x6B175474E89094C44Da98b954EedeAC495271d0F);\n    address public constant ydai = address(0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01);\n    address public constant curve = address(0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51);\n\n    address public constant gauge = address(0xFA712EE4788C042e2B7BB55E6cb8ec569C4530c1);\n    address public constant proxy = address(0x5886E475e163f78CF63d6683AbC7fe8516d12081);\n    address public constant voter = address(0xF147b8125d2ef93FB6965Db97D6746952a133934);\n\n    uint256 public keepCRV = 1000;\n    uint256 public constant keepCRVMax = 10000;\n\n    uint256 public performanceFee = 500;\n    uint256 public constant performanceMax = 10000;\n\n    uint256 public withdrawalFee = 50;\n    uint256 public constant withdrawalMax = 10000;\n\n    address public governance;\n    address public controller;\n    address public strategist;\n\n    constructor(address _controller) public {\n        governance = msg.sender;\n        strategist = msg.sender;\n        controller = _controller;\n    }\n\n    function getName() external pure returns (string memory) {\n        return \"StrategyCurveYVoterProxy\";\n    }\n\n    function setStrategist(address _strategist) external {\n        require(msg.sender == governance, \"!governance\");\n        strategist = _strategist;\n    }\n\n    function setKeepCRV(uint256 _keepCRV) external {\n        require(msg.sender == governance, \"!governance\");\n        keepCRV = _keepCRV;\n    }\n\n    function setWithdrawalFee(uint256 _withdrawalFee) external {\n        require(msg.sender == governance, \"!governance\");\n        withdrawalFee = _withdrawalFee;\n    }\n\n    function setPerformanceFee(uint256 _performanceFee) external {\n        require(msg.sender == governance, \"!governance\");\n        performanceFee = _performanceFee;\n    }\n\n    function deposit() public {\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            IERC20(want).safeTransfer(proxy, _want);\n            VoterProxy(proxy).deposit(gauge, want);\n        }\n    }\n\n    // Controller only function for creating additional rewards from dust\n    function withdraw(IERC20 _asset) external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        require(want != address(_asset), \"want\");\n        require(crv != address(_asset), \"crv\");\n        require(ydai != address(_asset), \"ydai\");\n        require(dai != address(_asset), \"dai\");\n        balance = _asset.balanceOf(address(this));\n        _asset.safeTransfer(controller, balance);\n    }\n\n    // Withdraw partial funds, normally used with a vault withdrawal\n    function withdraw(uint256 _amount) external {\n        require(msg.sender == controller, \"!controller\");\n        uint256 _balance = IERC20(want).balanceOf(address(this));\n        if (_balance < _amount) {\n            _amount = _withdrawSome(_amount.sub(_balance));\n            _amount = _amount.add(_balance);\n        }\n\n        uint256 _fee = _amount.mul(withdrawalFee).div(withdrawalMax);\n\n        IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n\n        IERC20(want).safeTransfer(_vault, _amount.sub(_fee));\n    }\n\n    // Withdraw all funds, normally used when migrating strategies\n    function withdrawAll() external returns (uint256 balance) {\n        require(msg.sender == controller, \"!controller\");\n        _withdrawAll();\n\n        balance = IERC20(want).balanceOf(address(this));\n\n        address _vault = IController(controller).vaults(address(want));\n        require(_vault != address(0), \"!vault\"); // additional protection so we don't burn the funds\n        IERC20(want).safeTransfer(_vault, balance);\n    }\n\n    function _withdrawAll() internal {\n        VoterProxy(proxy).withdrawAll(gauge, want);\n    }\n\n    function harvest() public {\n        require(msg.sender == strategist || msg.sender == governance, \"!authorized\");\n        VoterProxy(proxy).harvest(gauge);\n        uint256 _crv = IERC20(crv).balanceOf(address(this));\n        if (_crv > 0) {\n            uint256 _keepCRV = _crv.mul(keepCRV).div(keepCRVMax);\n            IERC20(crv).safeTransfer(voter, _keepCRV);\n            _crv = _crv.sub(_keepCRV);\n\n            IERC20(crv).safeApprove(uni, 0);\n            IERC20(crv).safeApprove(uni, _crv);\n\n            address[] memory path = new address[](3);\n            path[0] = crv;\n            path[1] = weth;\n            path[2] = dai;\n\n            Uni(uni).swapExactTokensForTokens(_crv, uint256(0), path, address(this), now.add(1800));\n        }\n        uint256 _dai = IERC20(dai).balanceOf(address(this));\n        if (_dai > 0) {\n            IERC20(dai).safeApprove(ydai, 0);\n            IERC20(dai).safeApprove(ydai, _dai);\n            yERC20(ydai).deposit(_dai);\n        }\n        uint256 _ydai = IERC20(ydai).balanceOf(address(this));\n        if (_ydai > 0) {\n            IERC20(ydai).safeApprove(curve, 0);\n            IERC20(ydai).safeApprove(curve, _ydai);\n            ICurveFi(curve).add_liquidity([_ydai, 0, 0, 0], 0);\n        }\n        uint256 _want = IERC20(want).balanceOf(address(this));\n        if (_want > 0) {\n            uint256 _fee = _want.mul(performanceFee).div(performanceMax);\n            IERC20(want).safeTransfer(IController(controller).rewards(), _fee);\n            deposit();\n        }\n    }\n\n    function _withdrawSome(uint256 _amount) internal returns (uint256) {\n        return VoterProxy(proxy).withdraw(gauge, want, _amount);\n    }\n\n    function balanceOfWant() public view returns (uint256) {\n        return IERC20(want).balanceOf(address(this));\n    }\n\n    function balanceOfPool() public view returns (uint256) {\n        return VoterProxy(proxy).balanceOf(gauge);\n    }\n\n    function balanceOf() public view returns (uint256) {\n        return balanceOfWant().add(balanceOfPool());\n    }\n\n    function setGovernance(address _governance) external {\n        require(msg.sender == governance, \"!governance\");\n        governance = _governance;\n    }\n\n    function setController(address _controller) external {\n        require(msg.sender == governance, \"!governance\");\n        controller = _controller;\n    }\n}\n",
  "sourceMap": "602:6808:15:-;;;1684:4;1659:29;;1775:3;1743:35;;1868:2;1837:33;;2022:147;8:9:-1;5:2;;;30:1;27;20:12;5:2;2022:147:15;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2022:147:15;2072:10;:23;;2085:10;-1:-1:-1;;;;;;2072:23:15;;;;;;;;2105:10;:23;;;;;;;;;;2138:10;:24;;;;;-1:-1:-1;;;;;2138:24:15;;;;;;;;;602:6808;;;-1:-1:-1;602:6808:15;;",
  "sourcePath": "contracts/strategies/StrategyCurveYVoterProxy.sol",
  "type": "contract"
}